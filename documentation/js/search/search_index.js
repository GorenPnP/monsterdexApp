var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.374,1,1.144]],["body/components/AppComponent.html",[0,0.596,1,1.945,2,1.98,3,0.321,4,0.321,5,1.478,6,1.587,7,1.587,8,1.587,9,0.286,10,3.036,11,1.007,12,2.677,13,4.066,14,4.808,15,2.14,16,1.587,17,2.942,18,2.287,19,2.125,20,5.421,21,2.125,22,4.808,23,0.604,24,1.414,25,5.791,26,1.056,27,3.59,28,5.366,29,5.454,30,5.454,31,1.237,32,3.59,33,2.469,34,1.056,35,0.026,36,1.136,37,0.701,38,1.056,39,1.594,40,4.808,41,4.066,42,5.791,43,4.897,44,4.808,45,4.808,46,3.59,47,4.808,48,4.808,49,4.066,50,4.808,51,0.988,52,2.384,53,0.637,54,0.474,55,0.988,56,2.677,57,2.671,58,3.036,59,2.671,60,3.036,61,0.321,62,0.395,63,1.594,64,2.18,65,1.821,66,3.59,67,1.056,68,3.59,69,3.59,70,3.59,71,3.59,72,3.59,73,0.806,74,1.848,75,1.98,76,1.478,77,1.587,78,2.56,79,1.587,80,1.587,81,1.206,82,1.289,83,1.587,84,1.206,85,1.726,86,1.587,87,1.206,88,2.125,89,1.206,90,1.136,91,1.587,92,1.206,93,1.206,94,1.587,95,1.128,96,1.587,97,1.206,98,1.478,99,1.587,100,1.587,101,0.013,102,0.013,103,0.013,104,0.013,105,0.013]],["title/modules/AppModule.html",[106,0.714,107,2.274]],["body/modules/AppModule.html",[1,2.289,3,0.359,4,0.359,9,0.32,15,1.26,29,4.373,30,4.373,35,0.026,53,0.756,54,0.529,55,1.104,56,3.568,57,2.984,58,3.392,59,2.984,60,3.392,61,0.359,62,0.441,73,0.901,101,0.015,102,0.015,103,0.015,104,0.015,105,0.015,106,0.84,107,4.526,108,1.347,109,1.541,110,2.357,111,2.357,112,2.13,113,1.541,114,3.392,115,3.392,116,3.392,117,3.392,118,3.891,119,3.891,120,1.652,121,1.652,122,1.652,123,4.011,124,4.011,125,2.13,126,5.172,127,3.392,128,2.679,129,5.172,130,1.26,131,5.172,132,4.011,133,1.773,134,5.172,135,4.373,136,2.984,137,1.104,138,3.392,139,3.14,140,2.679,141,3.14,142,3.392,143,3.454,144,2.984,145,3.392,146,4.011,147,4.011,148,4.011,149,4.011,150,1.652,151,4.011,152,4.011,153,4.011]],["title/classes/AppPage.html",[62,0.374,154,2.533]],["body/classes/AppPage.html",[3,0.447,4,0.447,9,0.398,18,2.379,23,0.841,24,1.743,31,1.526,35,0.026,51,1.631,53,0.55,61,0.447,62,0.55,67,1.743,75,2.059,101,0.019,102,0.019,103,0.019,104,0.019,105,0.019,128,3.34,154,4.41,155,5.001,156,4.229,157,6.534,158,6.534,159,5.001,160,5.001,161,5.001,162,5.001,163,5.001,164,5.001,165,5.001]],["title/modules/AppRoutingModule.html",[106,0.714,118,2.068]],["body/modules/AppRoutingModule.html",[3,0.417,4,0.417,9,0.371,35,0.026,53,0.625,54,0.615,61,0.417,62,0.512,82,1.673,85,2.04,90,0.977,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,108,1.565,113,1.791,118,3.451,125,2.34,130,1.464,150,1.919,166,4.661,167,4.661,168,5.682,169,2.512,170,2.201,171,1.791,172,2.056,173,5.533,174,4.661,175,4.661,176,5.682,177,3.113,178,4.661,179,4.661,180,3.113,181,4.661,182,1.919,183,4.661,184,3.113,185,4.661,186,1.282,187,4.661,188,3.113,189,4.661,190,4.661,191,4.661]],["title/interfaces/Attacke.html",[192,1.402,193,2.068]],["body/interfaces/Attacke.html",[3,0.389,4,0.389,9,0.346,11,1.344,23,0.732,35,0.026,36,1.371,37,1.252,53,0.478,61,0.389,90,1.141,101,0.016,102,0.016,103,0.016,104,0.016,105,0.016,137,1.498,182,2.565,186,1.765,192,2.447,193,3.782,194,2.641,195,3.677,196,2.589,197,1.401,198,2.056,199,5.267,200,2.127,201,4.603,202,5.444,203,4.603,204,5.444,205,1.996,206,4.05,207,2.092,208,3.031,209,1.601,210,3.636,211,4.05,212,5.444,213,5.444,214,2.795]],["title/components/CalcTypPage.html",[0,0.374,81,1.144]],["body/components/CalcTypPage.html",[0,0.496,1,0.862,2,1.563,3,0.23,4,0.23,5,1.057,6,1.135,7,1.135,8,1.135,9,0.205,11,1.045,15,1.96,16,1.135,17,2.757,19,1.678,21,1.678,23,0.432,24,1.116,26,0.755,31,1.524,34,1.328,35,0.027,36,1.116,37,1.18,38,1.328,39,1.565,51,1.044,52,2.295,53,0.585,54,0.339,61,0.23,62,0.282,63,1.328,65,0.862,67,1.328,73,0.577,74,1.459,75,1.563,76,1.057,77,1.135,78,2.205,79,1.135,80,1.135,81,1.675,82,2.126,83,1.135,84,0.862,85,1.363,86,1.135,87,0.862,88,1.678,89,0.862,90,1.267,91,1.135,92,0.862,93,0.862,94,1.135,95,0.807,96,1.135,97,0.862,98,1.057,99,1.135,100,1.135,101,0.01,102,0.01,103,0.01,104,0.01,105,0.01,137,1.044,186,1.716,188,4.038,197,0.977,198,1.193,200,1.193,203,3.209,205,1.872,209,1.565,214,1.949,215,4.497,216,2.171,217,1.805,218,3.796,219,5.324,220,3.796,221,3.796,222,2.925,223,4.516,224,3.796,225,4.516,226,4.516,227,4.516,228,5.324,229,4.516,230,1.805,231,2.823,232,2.171,233,2.373,234,2.778,235,2.373,236,3.796,237,3.796,238,5.324,239,4.989,240,3.796,241,3.818,242,1.459,243,3.796,244,3.233,245,1.949,246,2.295,247,2.205,248,1.805,249,2.353,250,2.567,251,1.678,252,2.535,253,1.805,254,1.805,255,2.305,256,1.91,257,2.535,258,2.567,259,2.567,260,1.715,261,2.171,262,2.567,263,4.516,264,2.171,265,1.135,266,3.796,267,1.715,268,2.567,269,1.673,270,2.567,271,4.219,272,2.113,273,2.567,274,2.532,275,4.989,276,2.567,277,4.516,278,4.516,279,3.209,280,2.567,281,1.363,282,1.559,283,1.559,284,2.171,285,2.823,286,1.91,287,1.429,288,1.318,289,0.922,290,2.171,291,1.135,292,2.171,293,1.91,294,1.559,295,1.363,296,3.818,297,4.989,298,2.171,299,1.318,300,2.567,301,2.171,302,1.715,303,1.91,304,2.567,305,2.567,306,2.171,307,2.171,308,1.559,309,3.796,310,3.209]],["title/modules/CalcTypPageModule.html",[106,0.714,311,2.274]],["body/modules/CalcTypPageModule.html",[0,0.508,3,0.413,4,0.413,9,0.368,35,0.026,53,0.73,54,0.609,55,1.271,61,0.413,62,0.508,73,1.037,81,2.258,82,1.658,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,106,0.968,108,1.551,109,1.775,110,2.514,111,1.902,112,1.902,113,1.775,120,1.902,121,1.902,122,1.902,125,2.327,130,1.451,133,2.498,150,1.902,169,2.041,170,2.192,171,1.775,172,1.451,188,3.084,215,3.435,311,4.435,312,3.905,313,3.905,314,4.618,315,2.688,316,2.041,317,2.688,318,2.041,319,4.618,320,2.197]],["title/injectables/DatabaseService.html",[321,1.144,322,2.068]],["body/injectables/DatabaseService.html",[3,0.224,4,0.224,9,0.199,11,0.932,18,1.191,23,0.421,24,1.096,26,0.736,28,4.455,31,1.546,33,1.913,34,1.096,35,0.027,36,1.104,37,1.028,38,1.096,39,1.549,41,3.15,51,1.45,53,0.629,54,0.33,55,0.689,56,2.074,61,0.224,62,0.275,63,1.449,64,1.52,65,2.221,67,1.766,90,1.033,101,0.009,102,0.009,103,0.009,104,0.009,105,0.009,135,4.455,136,1.862,137,1.861,138,2.117,139,3.854,140,1.672,141,3.473,197,0.959,198,1.171,200,0.787,205,1.769,207,1.432,209,1.449,242,1.432,245,1.286,251,2.528,265,2.179,269,1.398,274,2.344,289,0.899,295,0.899,306,2.117,321,1.251,322,2.262,323,1.286,324,2.117,325,3.726,326,3.15,327,4.614,328,4.45,329,3.919,330,2.721,331,4.928,332,4.928,333,3.666,334,4.928,335,3.726,336,2.504,337,4.167,338,3.184,339,3.726,340,3.726,341,3.15,342,2.771,343,3.726,344,4.45,345,3.726,346,3.726,347,5.72,348,3.726,349,3.726,350,4.45,351,3.726,352,3.726,353,3.726,354,2.504,355,5.269,356,2.274,357,2.504,358,2.993,359,4.255,360,2.504,361,3.15,362,3.272,363,3.15,364,2.488,365,3.15,366,2.504,367,3.726,368,2.504,369,3.15,370,1.913,371,2.477,372,4.455,373,2.771,374,2.933,375,3.726,376,2.504,377,2.477,378,1.772,379,2.074,380,2.504,381,2.262,382,3.15,383,3.15,384,1.286,385,1.672,386,2.117,387,1.862,388,1.394,389,3.726,390,2.504,391,3.292,392,2.117,393,2.504,394,3.726,395,1.862,396,3.15,397,2.117,398,1.862,399,2.504,400,1.52,401,2.504,402,3.726,403,2.504,404,2.504,405,2.504,406,2.504,407,2.117,408,2.504,409,2.117,410,2.504,411,1.862,412,1.672,413,2.504,414,1.862,415,2.504,416,2.504,417,2.504,418,2.504,419,2.117,420,2.504,421,2.117,422,2.504,423,2.504]],["title/injectables/DbImageService.html",[321,1.144,424,2.274]],["body/injectables/DbImageService.html",[3,0.229,4,0.229,9,0.204,11,1.044,12,2.108,18,1.217,23,0.431,24,1.114,26,0.753,31,1.483,33,1.314,34,1.325,35,0.027,36,0.944,37,1.086,38,1.325,39,1.637,51,1.24,53,0.664,54,0.338,55,0.704,56,2.51,61,0.229,62,0.281,63,1.739,65,2.118,67,1.807,74,1.455,101,0.009,102,0.009,103,0.009,104,0.009,105,0.009,137,1.627,139,2.3,140,1.709,141,3.592,142,2.164,143,4.034,144,1.904,145,2.164,172,1.19,197,0.975,198,1.81,205,2.064,207,1.732,209,1.325,242,1.914,264,3.202,265,2.202,269,1.416,274,2.144,281,1.789,289,0.919,291,1.131,321,1.272,322,3.668,323,1.314,327,3.955,329,3.353,330,2.813,333,3.706,338,3.363,341,2.164,342,2.817,356,2.292,358,3.025,359,3.353,361,3.202,362,3.293,363,4.212,364,2.529,365,4.212,374,3.293,377,2.96,378,2.37,379,2.108,381,2.3,382,3.202,383,3.202,384,1.314,387,1.904,388,1.425,395,1.904,396,3.202,398,3.706,411,1.904,421,2.164,424,2.529,425,3.037,426,2.164,427,3.787,428,4.009,429,4.508,430,3.787,431,3.787,432,2.559,433,3.787,434,2.529,435,3.202,436,3.202,437,3.787,438,3.787,439,3.787,440,2.817,441,3.787,442,3.787,443,3.787,444,2.559,445,3.787,446,2.559,447,3.787,448,5.761,449,3.706,450,3.787,451,3.787,452,2.559,453,5.196,454,3.787,455,4.982,456,2.559,457,2.559,458,3.787,459,3.787,460,2.559,461,2.559,462,2.164,463,2.559,464,2.164,465,2.164,466,2.164,467,2.164,468,2.559,469,3.787,470,3.202,471,3.787,472,3.787,473,3.787,474,3.202,475,2.559,476,2.164,477,2.559,478,2.559,479,2.559,480,2.559,481,2.559,482,2.559,483,2.559,484,2.559,485,2.559]],["title/injectables/DbTypenService.html",[233,1.62,321,1.144]],["body/injectables/DbTypenService.html",[3,0.142,4,0.142,9,0.126,11,1.09,15,0.818,18,0.754,23,0.267,24,0.765,26,0.466,31,1.546,33,2.174,34,1.529,35,0.027,36,1.09,37,1.113,38,1.529,39,1.613,51,1.569,52,1.071,53,0.5,54,0.209,56,0.882,61,0.142,62,0.174,63,1.477,65,1.972,67,1.889,90,0.887,101,0.012,102,0.006,103,0.006,104,0.006,105,0.006,137,1.669,140,1.058,182,2.474,186,1.788,197,0.67,198,1.867,205,2.137,207,1,209,0.974,214,1.968,222,2.858,233,1.238,242,1.999,244,1.58,254,1.823,269,1.04,271,2.2,272,1.843,281,1.189,284,1.34,289,0.569,291,0.7,294,0.962,295,2.108,296,1.34,298,2.2,299,2.337,301,1.34,302,1.738,303,1.936,321,0.874,322,3.049,323,0.813,327,2.852,329,2.463,330,2.911,333,2.852,338,2.796,342,1.178,356,2.606,358,1.58,359,2.463,362,2.796,370,0.813,371,3.118,372,3.241,374,1.449,377,2.357,378,1.823,379,1.449,381,1.58,384,0.813,387,1.178,388,0.882,395,1.178,397,1.34,398,2.463,407,1.34,409,3.58,411,1.178,412,2.828,425,3.115,434,1.738,435,2.2,440,1.936,449,1.178,462,1.34,464,1.34,465,1.34,466,1.34,467,1.34,470,2.2,486,1.34,487,2.2,488,1.936,489,3.212,490,3.833,491,2.602,492,3.311,493,3.833,494,2.602,495,2.602,496,2.602,497,2.602,498,3.311,499,3.833,500,3.833,501,2.602,502,1.584,503,2.602,504,2.602,505,2.011,506,2.602,507,1.584,508,3.354,509,3.833,510,5.354,511,1.584,512,2.2,513,1.584,514,2.602,515,1.584,516,2.602,517,2.602,518,2.602,519,1.584,520,2.8,521,2.8,522,1.584,523,3.311,524,1.584,525,1.936,526,2.602,527,1.738,528,3.311,529,2.602,530,2.602,531,1.584,532,2.2,533,2.602,534,2.602,535,1.584,536,3.241,537,3.833,538,3.833,539,2.602,540,2.602,541,2.602,542,1.584,543,2.602,544,3.833,545,2.602,546,1.584,547,1.584,548,1.584,549,1.584,550,1.584,551,1.584,552,2.602,553,3.833,554,2.602,555,2.602,556,1.584,557,2.463,558,2.602,559,3.833,560,2.602,561,2.602,562,2.602,563,2.602,564,2.602,565,2.602,566,1.584,567,2.602,568,1.584,569,2.602,570,1.584,571,2.602,572,2.602,573,1.449,574,2.602,575,2.602,576,0.962,577,2.602,578,1.584,579,1.584,580,1.584,581,1.178,582,2.602,583,1.584,584,1.584,585,1.584,586,1.584,587,1.584,588,3.833,589,1.584,590,2.602,591,3.311,592,1.584,593,1.584,594,2.602,595,1.584,596,1.584,597,1.584,598,1.584,599,1.584,600,1.178,601,1.584,602,1.34,603,1.584,604,1.584,605,1.584,606,1.584,607,1.584,608,2.011,609,2.602,610,1.584,611,1.584,612,3.311,613,1.584,614,1.584,615,1.584,616,1.584,617,1.584,618,1.584,619,1.584,620,2.602,621,1.584,622,1.178,623,1.584,624,1.584,625,1.584,626,1.584,627,1.584,628,1.584,629,1.584,630,1.34,631,1.584,632,1.584,633,1.584,634,1.584,635,1.584,636,1.584,637,1.584,638,1.584,639,1.584,640,1.584,641,1.584,642,2.602,643,1.178,644,1.584,645,1.058,646,1.584,647,1.584,648,1.584,649,1.584,650,1.584,651,1.584,652,1.584,653,1.584,654,1.584,655,1.584,656,1.584,657,1.584,658,1.584,659,2.602,660,2.602,661,2.602,662,1.584,663,1.584,664,1.584,665,1.936,666,2.602,667,1.584,668,1.584,669,1.584,670,1.584,671,1.584,672,1.34,673,1.584,674,1.584,675,1.584,676,1.584,677,2.602,678,1.584,679,1.34,680,1.058,681,1.34,682,1.584,683,1.584,684,1.584,685,1.584,686,1.584,687,1.584]],["title/components/DetailAttackePage.html",[0,0.374,84,1.144]],["body/components/DetailAttackePage.html",[0,0.447,1,0.726,2,1.373,3,0.193,4,0.193,5,0.89,6,0.956,7,0.956,8,0.956,9,0.172,11,1.035,15,1.882,16,0.956,17,2.647,19,1.473,21,1.473,23,0.364,24,0.98,26,0.636,31,1.445,34,0.98,35,0.027,36,0.958,37,1.148,38,0.98,39,1.535,51,0.595,52,1.883,53,0.633,54,0.285,61,0.193,62,0.238,63,1.535,64,2.024,65,1.535,67,0.98,73,0.486,74,1.281,75,1.373,76,0.89,77,0.956,78,2.021,79,0.956,80,0.956,81,0.726,82,0.776,83,0.956,84,1.535,85,2.151,86,0.956,87,0.726,88,1.473,89,0.726,90,1.255,91,0.956,92,0.726,93,0.726,94,0.956,95,0.679,96,0.956,97,0.726,98,0.89,99,0.956,100,0.956,101,0.008,102,0.008,103,0.008,104,0.008,105,0.008,130,0.679,137,1.619,180,3.849,182,1.373,186,1.694,193,3.41,196,2.175,197,0.858,198,1.278,199,2.819,200,1.437,205,1.535,207,0.831,209,1.452,214,1.712,217,2.482,222,2.961,230,1.585,233,2.175,234,2.546,235,2.175,242,2.006,245,1.712,246,1.883,247,2.021,248,1.585,249,2.183,251,1.473,252,2.226,253,1.585,254,1.585,255,2.024,269,1.552,272,3.5,281,2.113,282,1.313,283,1.313,287,1.204,288,1.11,289,0.776,291,1.473,294,1.313,295,1.197,299,1.712,302,2.226,303,2.48,308,1.313,356,1.373,371,1.204,412,2.226,425,1.712,512,1.828,525,1.608,527,2.226,573,2.75,645,1.444,679,2.819,681,3.866,688,3.499,689,1.828,690,4.068,691,3.333,692,4.068,693,3.44,694,4.068,695,3.44,696,3.44,697,1.828,698,3.866,699,3.054,700,3.866,701,4.572,702,3.054,703,3.333,704,3.44,705,2.819,706,2.024,707,2.024,708,2.162,709,1.856,710,2.162,711,3.486,712,2.162,713,2.819,714,2.162,715,2.819,716,3.401,717,2.162,718,1.712,719,2.48,720,1.585,721,2.819,722,2.162,723,1.608,724,2.162,725,1.608,726,1.444,727,1.712,728,1.608,729,2.162,730,2.162,731,3.333,732,2.162,733,1.828,734,1.313,735,2.162,736,2.162,737,2.162,738,2.162,739,1.828,740,1.828,741,1.828,742,2.162,743,1.828,744,1.828,745,2.162,746,1.828,747,1.828,748,1.828,749,1.828,750,1.828,751,1.828,752,1.608,753,1.828,754,1.828,755,1.828,756,1.828,757,1.828,758,1.828,759,1.828,760,1.828,761,1.828,762,1.828,763,2.162,764,2.162,765,2.162,766,2.162,767,3.333,768,2.819,769,3.333,770,3.333,771,2.819,772,3.333,773,3.333,774,3.333,775,2.819,776,1.444,777,2.819,778,2.819,779,1.608,780,2.819,781,2.819,782,1.608]],["title/modules/DetailAttackePageModule.html",[106,0.714,783,2.274]],["body/modules/DetailAttackePageModule.html",[0,0.508,3,0.413,4,0.413,9,0.368,35,0.026,53,0.73,54,0.609,55,1.271,61,0.413,62,0.508,73,1.037,84,2.258,85,1.658,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,106,0.968,108,1.551,109,1.775,110,2.514,111,1.902,112,1.902,113,1.775,120,1.902,121,1.902,122,1.902,125,2.327,130,1.451,133,2.498,150,1.902,169,2.041,170,2.192,171,1.775,172,1.451,180,3.084,315,2.688,316,2.041,317,2.688,318,2.041,320,2.197,688,2.804,783,4.435,784,3.905,785,3.905,786,4.618,787,4.618]],["title/components/DetailMonsterPage.html",[0,0.374,87,1.144]],["body/components/DetailMonsterPage.html",[0,0.378,1,0.561,2,1.12,3,0.15,4,0.15,5,0.688,6,0.739,7,0.739,8,0.739,9,0.133,11,0.913,15,1.753,16,0.739,17,2.466,19,1.202,21,1.202,23,0.281,24,0.8,26,0.492,31,1.464,34,0.8,35,0.027,36,0.83,37,1.146,38,0.8,39,1.447,51,0.46,52,1.415,53,0.613,54,0.221,61,0.15,62,0.184,63,1.447,65,1.463,67,0.8,73,0.376,74,1.045,75,1.12,76,0.688,77,0.739,78,1.75,79,0.739,80,0.739,81,0.561,82,0.6,83,0.739,84,0.561,85,2.003,86,0.739,87,1.33,88,1.202,89,0.561,90,1.246,91,0.739,92,0.561,93,0.561,94,0.739,95,0.525,96,0.739,97,0.561,98,0.688,99,0.739,100,0.739,101,0.006,102,0.006,103,0.006,104,0.006,105,0.006,130,0.525,137,1.565,177,3.864,182,1.63,186,1.656,196,1.635,197,0.7,198,1.369,200,1.787,205,1.33,207,0.643,209,1.559,214,0.859,217,1.883,222,2.793,230,1.293,233,1.883,234,2.204,235,1.883,242,1.971,245,1.396,246,1.63,247,1.75,248,1.293,249,1.926,251,1.202,252,1.816,253,1.293,254,1.883,255,1.651,269,1.611,272,2.855,274,0.795,281,2.379,282,1.651,283,1.015,287,0.931,288,0.859,289,0.6,291,1.202,293,2.023,294,1.015,295,1.564,299,1.396,302,1.816,308,1.015,356,1.12,371,0.931,412,1.816,424,2.644,425,1.396,428,3.454,434,1.816,508,1.117,525,1.244,532,2.299,573,2.204,608,1.651,645,1.117,688,3.513,693,2.906,695,2.906,696,2.906,697,1.414,698,3.348,699,2.644,700,3.348,702,2.644,704,2.906,705,2.299,706,1.651,707,2.645,709,1.514,711,3.799,713,2.299,715,3.348,716,2.945,718,2.799,719,2.023,720,2.439,721,2.299,723,1.244,725,1.244,726,1.117,727,1.396,728,1.244,733,1.414,734,1.015,739,1.414,740,1.414,741,2.299,743,1.414,744,1.414,746,1.414,747,1.414,748,1.414,749,1.414,750,1.414,751,1.414,752,1.244,753,1.414,754,1.414,755,1.414,756,1.414,757,1.414,758,1.414,759,1.414,760,1.414,761,1.414,762,1.414,768,2.299,771,2.299,775,2.299,776,1.117,777,2.299,778,2.299,779,1.244,780,2.299,781,2.299,782,1.244,788,1.244,789,2.906,790,2.299,791,2.906,792,3.437,793,3.437,794,3.948,795,3.437,796,3.959,797,3.959,798,2.719,799,1.672,800,2.719,801,2.299,802,2.945,803,3.348,804,2.945,805,1.414,806,1.672,807,2.719,808,1.672,809,3.437,810,2.719,811,2.719,812,2.719,813,2.719,814,1.672,815,1.672,816,1.672,817,1.672,818,1.414,819,1.414,820,2.719,821,1.672,822,1.672,823,1.672,824,1.244,825,1.672,826,2.719,827,1.672,828,1.672,829,1.672,830,1.672,831,1.672,832,2.719,833,1.672,834,1.672,835,1.672,836,1.672,837,1.672,838,1.672,839,1.672,840,1.672,841,1.672,842,1.672,843,1.672,844,1.672,845,3.437,846,1.672,847,1.672,848,1.672,849,1.672,850,1.672,851,1.672,852,3.959,853,2.719,854,2.023,855,2.719,856,2.719,857,2.719,858,2.299,859,2.299,860,2.719,861,2.719,862,3.348,863,2.719,864,2.299,865,2.719,866,2.299,867,2.719,868,2.719,869,2.719,870,2.719,871,2.719,872,2.719,873,2.719,874,5.129,875,2.719,876,2.719]],["title/modules/DetailMonsterPageModule.html",[106,0.714,877,2.274]],["body/modules/DetailMonsterPageModule.html",[0,0.508,3,0.413,4,0.413,9,0.368,35,0.026,53,0.73,54,0.609,55,1.271,61,0.413,62,0.508,73,1.037,85,1.658,87,2.258,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,106,0.968,108,1.551,109,1.775,110,2.514,111,1.902,112,1.902,113,1.775,120,1.902,121,1.902,122,1.902,125,2.327,130,1.451,133,2.498,150,1.902,169,2.041,170,2.192,171,1.775,172,1.451,177,3.084,315,2.688,316,2.041,317,2.688,318,2.041,320,2.197,688,2.804,877,4.435,878,3.905,879,3.905,880,3.905,881,3.905]],["title/injectables/FullHeaderService.html",[321,1.144,882,2.068]],["body/injectables/FullHeaderService.html",[3,0.266,4,0.266,9,0.237,11,1.12,18,1.416,23,0.501,24,1.243,26,0.876,31,1.553,33,2.17,34,1.445,35,0.027,36,1.029,37,1.177,38,1.445,39,1.774,51,1.471,53,0.621,54,0.393,61,0.266,62,0.327,63,1.572,65,2.026,67,1.66,90,1.12,101,0.011,102,0.011,103,0.011,104,0.011,105,0.011,137,1.163,182,1.74,186,1.614,197,1.088,198,1.68,205,1.796,209,1.243,222,2.87,230,2.01,232,2.518,233,2.543,235,2.79,241,4.154,242,2.254,246,2.202,247,2.364,248,2.01,249,2.496,251,1.868,253,2.01,254,2.543,255,2.566,260,2.823,269,1.328,274,2.337,283,1.808,288,1.529,289,1.069,290,2.518,291,1.316,292,2.518,293,3.144,294,1.808,295,1.069,321,1.419,323,1.529,330,2.337,356,2.202,362,3.144,371,1.658,377,2.735,378,2.01,379,2.353,384,1.529,388,1.658,425,1.529,487,3.574,489,3.281,505,2.566,508,3.772,520,4.522,521,3.574,718,2.17,726,1.989,882,2.566,883,4.118,884,2.215,885,2.566,886,4.226,887,4.364,888,4.913,889,5.347,890,5.347,891,4.226,892,5.347,893,4.226,894,4.226,895,4.226,896,4.154,897,2.978,898,4.488,899,2.978,900,2.978,901,4.226,902,2.823,903,2.823,904,2.978,905,3.655,906,4.226,907,2.978,908,2.215,909,2.215,910,2.215,911,2.978,912,2.978,913,2.215,914,2.978,915,4.226,916,3.144,917,2.978,918,2.978,919,2.978]],["title/interfaces/Image.html",[192,1.402,428,2.068]],["body/interfaces/Image.html",[3,0.415,4,0.415,5,2.332,9,0.369,11,0.971,12,3.405,23,1.099,31,1.193,35,0.026,37,1.105,61,0.415,74,2.176,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,192,1.909,194,2.815,197,1.457,198,2.001,200,2.135,205,2.139,428,4.087,436,4.789,474,5.386,920,3.919,921,4.635,922,4.635,923,4.635,924,4.789,925,5.663,926,4.213,927,5.663,928,4.789,929,5.663,930,3.439,931,4.635,932,4.635]],["title/components/ListAttackenPage.html",[0,0.374,89,1.144]],["body/components/ListAttackenPage.html",[0,0.342,1,0.487,2,0.997,3,0.13,4,0.13,5,0.598,6,0.642,7,0.642,8,0.642,9,0.116,11,0.846,12,1.348,15,1.675,16,0.642,17,2.357,19,1.07,21,1.07,23,0.679,24,0.712,26,0.427,31,1.572,34,1.187,35,0.027,36,0.969,37,1.253,38,1.187,39,1.282,51,1.333,52,2.621,53,0.444,54,0.191,61,0.13,62,0.16,63,1.282,65,2.106,67,1.568,73,0.326,74,0.93,75,0.997,76,0.598,77,0.642,78,1.606,79,0.642,80,0.642,81,0.487,82,0.521,83,0.642,84,0.487,85,0.869,86,0.642,87,0.487,88,1.07,89,1.22,90,1.185,91,0.642,92,0.487,93,0.487,94,0.642,95,0.456,96,0.642,97,0.487,98,0.598,99,0.642,100,0.642,101,0.005,102,0.005,103,0.005,104,0.005,105,0.005,137,1.111,186,1,193,1.47,196,1.481,197,0.623,198,1.268,200,1.37,205,1.791,207,0.93,208,1.348,209,1.604,214,1.243,217,1.151,222,1.728,230,1.151,231,1.8,234,2.022,242,0.93,244,1.47,245,1.243,246,1.496,247,2.225,248,1.151,249,2.538,251,1.07,253,1.151,254,1.481,256,1.8,257,3.362,260,3.237,265,1.784,267,3.469,269,1.714,272,1.348,274,1.151,281,0.521,282,0.881,288,0.745,289,0.521,291,1.07,295,1.566,299,2.239,308,0.881,330,1.481,356,1.496,362,0.808,364,1.617,370,1.243,373,2.316,374,2.022,377,2.969,378,2.2,379,1.348,381,0.881,384,0.745,400,1.47,488,2.316,489,2.079,505,0.881,573,2.022,581,1.08,600,2.316,608,1.89,622,1.8,643,1.8,665,1.8,699,2.426,706,0.881,707,3.238,709,1.348,711,2.079,720,1.151,723,1.08,727,1.243,728,1.08,734,0.881,802,1.8,804,1.08,824,3.441,882,2.206,883,0.969,885,1.47,887,4.81,898,1.8,903,1.617,905,2.316,908,1.8,909,1.8,910,1.8,916,1.8,926,1.08,930,1.47,933,3.16,934,4.111,935,1.227,936,2.047,937,2.632,938,3.113,939,2.42,940,2.632,941,2.632,942,2.632,943,2.632,944,3.072,945,3.687,946,3.414,947,2.632,948,2.632,949,2.632,950,4.361,951,2.42,952,3.072,953,2.047,954,3.072,955,3.072,956,1.08,957,2.42,958,1.452,959,3.072,960,2.047,961,2.047,962,2.42,963,1.452,964,2.047,965,2.047,966,3.072,967,3.072,968,3.072,969,2.047,970,2.047,971,3.072,972,2.047,973,2.047,974,1.452,975,2.047,976,2.047,977,1.452,978,2.047,979,2.047,980,3.911,981,1.452,982,1.617,983,1.617,984,1.452,985,3.072,986,1.452,987,2.047,988,1.452,989,2.047,990,1.452,991,1.452,992,2.047,993,1.452,994,2.047,995,3.072,996,2.42,997,1.452,998,1.452,999,1.452,1000,2.047,1001,2.047,1002,1.452,1003,2.047,1004,1.8,1005,2.047,1006,2.632,1007,1.452,1008,3.072,1009,2.047,1010,1.452,1011,3.072,1012,1.452,1013,3.072,1014,1.452,1015,1.227,1016,0.808,1017,1.227,1018,1.227,1019,1.227,1020,1.227,1021,1.227,1022,3.113,1023,1.227,1024,1.227,1025,1.452,1026,2.42,1027,2.047,1028,2.047,1029,1.452,1030,2.047,1031,1.452,1032,1.08,1033,1.227,1034,1.227,1035,1.452,1036,2.047,1037,1.227,1038,1.227,1039,2.047,1040,1.227,1041,2.632,1042,0.969,1043,3.072,1044,3.072,1045,1.227,1046,2.632,1047,3.072,1048,1.227,1049,2.047,1050,2.632,1051,2.632,1052,2.047,1053,1.8,1054,2.047,1055,2.047,1056,1.227,1057,1.227,1058,2.632,1059,3.414,1060,1.227,1061,1.227,1062,1.227,1063,2.079,1064,1.08,1065,1.227,1066,1.227,1067,2.047,1068,1.227,1069,1.227,1070,1.227,1071,1.227,1072,1.227,1073,2.632,1074,1.227,1075,1.227,1076,1.227,1077,1.227,1078,1.227,1079,1.227,1080,2.047,1081,1.227,1082,1.227,1083,2.047,1084,2.047,1085,2.047,1086,2.047,1087,1.227,1088,1.227,1089,1.227,1090,1.452,1091,2.047,1092,1.227,1093,1.227,1094,2.047,1095,2.047,1096,2.047,1097,2.047,1098,2.047,1099,2.047,1100,2.047,1101,2.047,1102,2.047,1103,2.047,1104,2.047]],["title/modules/ListAttackenPageModule.html",[106,0.714,1105,2.274]],["body/modules/ListAttackenPageModule.html",[0,0.508,3,0.413,4,0.413,9,0.368,35,0.026,53,0.73,54,0.609,55,1.271,61,0.413,62,0.508,73,1.037,89,2.258,90,0.968,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,106,0.968,108,1.551,109,1.775,110,2.514,111,1.902,112,1.902,113,1.775,120,1.902,121,1.902,122,1.902,125,2.327,130,1.451,133,2.498,150,1.902,169,2.041,170,2.192,171,1.775,172,1.451,315,2.688,316,2.041,317,2.688,318,2.041,320,2.197,933,2.371,934,3.084,1105,4.435,1106,3.905,1107,3.905,1108,4.618,1109,4.618]],["title/components/ListMonsterPage.html",[0,0.374,92,1.144]],["body/components/ListMonsterPage.html",[0,0.321,1,0.446,2,0.925,3,0.119,4,0.119,5,0.547,6,0.587,7,0.587,8,0.587,9,0.106,11,0.873,12,1.25,15,1.625,16,0.587,17,2.286,19,0.993,21,0.993,23,0.785,24,0.66,26,0.39,31,1.588,34,1.128,35,0.027,36,0.93,37,1.25,38,1.128,39,1.225,51,1.337,52,2.618,53,0.422,54,0.175,61,0.119,62,0.146,63,1.225,65,2.072,67,1.558,73,0.298,74,0.863,75,0.925,76,0.547,77,0.587,78,1.517,79,0.587,80,0.587,81,0.446,82,0.477,83,0.587,84,0.446,85,0.806,86,0.587,87,0.446,88,0.993,89,0.446,90,1.191,91,0.587,92,1.152,93,0.446,94,0.587,95,0.417,96,0.587,97,0.446,98,0.547,99,0.587,100,0.587,101,0.005,102,0.005,103,0.005,104,0.005,105,0.005,137,1.146,186,1.056,197,0.578,198,1.206,200,1.466,205,1.817,207,1.121,208,1.25,209,1.648,210,2.292,214,1.153,217,1.068,222,1.632,230,1.068,231,1.67,234,1.911,242,1.121,244,1.364,245,1.498,246,1.413,247,2.342,248,1.068,249,2.477,251,0.993,253,1.068,254,1.632,256,1.67,257,3.454,260,3.115,261,1.123,265,2.062,267,3.615,269,1.761,272,1.25,274,1.632,279,1.123,281,1.593,282,0.806,286,0.987,288,0.682,289,0.477,291,0.993,295,1.804,299,2.139,308,0.806,330,1.388,356,1.413,362,0.739,364,2.292,370,1.153,373,2.171,374,1.911,377,2.879,378,2.11,379,1.25,381,0.806,384,0.682,400,1.364,488,1.67,489,1.949,505,0.806,557,0.987,573,3.069,581,0.987,600,2.855,608,2.084,622,1.67,643,1.67,645,2.292,665,1.67,702,2.292,706,1.364,707,1.364,709,1.25,711,2.292,720,1.068,725,0.987,727,1.153,734,0.806,788,0.987,789,2.467,790,1.899,802,1.67,804,0.987,805,1.123,818,1.123,819,1.123,824,3.3,854,3.47,882,2.084,883,0.887,885,1.364,887,4.749,898,1.67,903,1.5,905,2.171,908,1.67,909,1.67,910,1.67,916,1.67,926,0.987,930,1.364,933,3.188,936,1.899,937,2.467,940,2.467,941,2.467,942,2.467,943,2.467,944,2.902,945,3.522,946,3.245,947,2.467,948,2.467,949,2.467,952,2.902,953,1.899,954,2.902,955,2.902,956,0.987,959,2.902,960,1.899,961,1.899,964,1.899,965,1.899,966,2.902,967,2.902,968,2.902,969,1.899,970,1.899,971,2.902,972,2.902,973,1.899,975,1.899,976,1.899,978,1.899,979,1.899,980,3.752,982,1.5,983,1.5,985,2.902,987,1.899,989,1.899,992,1.899,994,1.899,995,2.902,1000,1.899,1001,1.899,1003,1.899,1004,1.67,1005,1.899,1006,1.899,1008,2.902,1009,1.899,1011,2.902,1013,2.902,1015,1.123,1016,0.739,1017,1.899,1018,1.123,1019,1.123,1020,1.123,1021,1.123,1023,1.123,1024,1.123,1027,1.899,1028,1.899,1030,1.123,1032,1.67,1033,1.123,1034,1.123,1036,1.899,1037,1.123,1038,1.123,1039,1.899,1040,1.123,1041,2.467,1042,0.887,1043,2.902,1044,2.902,1045,1.123,1046,2.467,1047,2.902,1048,1.123,1049,1.899,1050,2.467,1051,2.467,1052,1.899,1053,1.67,1054,1.899,1055,1.899,1056,1.123,1057,1.123,1058,2.467,1059,3.245,1060,1.123,1061,1.123,1062,1.123,1063,1.949,1064,0.987,1065,1.123,1066,1.123,1067,2.467,1068,1.123,1069,1.123,1070,1.123,1071,1.123,1072,1.123,1073,2.467,1074,1.123,1075,1.123,1076,1.123,1077,1.123,1078,1.123,1079,1.123,1080,1.899,1081,1.123,1082,1.123,1083,1.899,1084,1.899,1085,1.899,1086,1.899,1087,1.123,1088,1.123,1089,1.123,1091,1.899,1092,1.123,1093,1.123,1094,1.899,1095,1.899,1096,1.899,1097,1.899,1098,1.899,1099,1.899,1100,1.899,1101,1.899,1102,1.899,1103,1.899,1104,1.899,1110,4.146,1111,2.918,1112,2.918,1113,3.838,1114,3.432,1115,2.245,1116,3.432,1117,2.245,1118,1.327,1119,2.245,1120,1.327,1121,1.327,1122,1.327,1123,1.327,1124,1.327,1125,1.327,1126,1.327,1127,1.327,1128,1.327,1129,2.245,1130,1.327,1131,2.245,1132,1.327,1133,1.327,1134,2.245,1135,1.327,1136,1.327,1137,2.245,1138,2.245,1139,1.327,1140,1.327,1141,1.327,1142,1.327,1143,1.327,1144,1.327,1145,1.123,1146,2.918,1147,2.245,1148,1.327,1149,1.327,1150,1.327,1151,2.918,1152,1.327,1153,1.327,1154,2.245,1155,1.327,1156,1.327,1157,2.245]],["title/modules/ListMonsterPageModule.html",[106,0.714,1158,2.274]],["body/modules/ListMonsterPageModule.html",[0,0.506,3,0.411,4,0.411,9,0.367,35,0.026,53,0.729,54,0.607,55,1.266,61,0.411,62,0.506,73,1.034,90,0.964,92,2.256,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,106,0.964,108,1.545,109,1.768,110,2.51,111,1.895,112,1.895,113,1.768,120,1.895,121,1.895,122,1.895,125,2.322,130,1.446,133,2.492,150,1.895,169,2.034,170,2.189,171,1.768,172,1.446,315,2.682,316,2.034,317,2.682,318,2.034,320,2.189,880,3.891,881,3.891,933,2.363,1110,3.073,1158,4.431,1159,3.891,1160,3.891]],["title/components/ListTypenPage.html",[0,0.374,93,1.144]],["body/components/ListTypenPage.html",[0,0.577,1,1.132,2,1.897,3,0.301,4,0.301,5,1.388,6,1.49,7,1.49,8,1.49,9,0.269,11,1.1,15,2.069,16,1.49,17,2.91,19,2.036,21,2.036,23,0.567,24,1.355,26,0.991,31,1.351,34,1.355,35,0.026,36,1.238,37,1.19,38,1.355,39,1.543,51,0.927,52,1.897,53,0.649,54,0.445,61,0.301,62,0.37,63,1.355,64,2.798,65,1.132,73,0.757,74,1.77,75,1.897,76,1.388,77,1.49,78,2.494,79,1.49,80,1.49,81,1.132,82,1.21,83,1.49,84,1.132,85,1.654,86,1.49,87,1.132,88,2.036,89,1.132,90,1.408,91,1.49,92,1.132,93,1.895,94,1.49,95,1.059,96,1.49,97,1.132,98,1.388,99,1.49,100,1.49,101,0.013,102,0.013,103,0.013,104,0.013,105,0.013,137,1.626,182,2.323,184,3.769,186,1.444,197,1.186,209,0.991,217,2.191,222,2.901,230,2.191,233,2.684,234,3.141,235,2.684,242,1.77,245,2.366,246,1.897,247,2.036,248,1.603,249,2.32,251,1.49,253,1.603,269,1.059,274,1.603,283,2.047,286,2.507,287,1.876,288,1.731,289,1.21,291,1.49,295,1.21,425,1.731,527,3.077,706,2.798,709,1.876,719,3.427,720,2.191,726,2.251,734,2.047,930,2.798,933,2.897,956,2.507,982,2.251,983,2.251,1161,2.85,1162,5.249,1163,4.607,1164,5.642,1165,4.607,1166,3.37,1167,4.607,1168,2.507,1169,2.507,1170,3.37,1171,3.37,1172,3.37,1173,4.607]],["title/modules/ListTypenPageModule.html",[106,0.714,1174,2.274]],["body/modules/ListTypenPageModule.html",[0,0.508,3,0.413,4,0.413,9,0.368,35,0.026,53,0.73,54,0.609,55,1.271,61,0.413,62,0.508,73,1.037,90,0.968,93,2.258,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,106,0.968,108,1.551,109,1.775,110,2.514,111,1.902,112,1.902,113,1.775,120,1.902,121,1.902,122,1.902,125,2.327,130,1.451,133,2.498,150,1.902,169,2.041,170,2.192,171,1.775,172,1.451,184,3.084,315,2.688,316,2.041,317,2.688,318,2.041,320,2.197,933,2.371,1174,4.435,1175,3.905,1176,3.905,1177,4.618,1178,4.618]],["title/injectables/MessageService.html",[321,1.144,338,1.896]],["body/injectables/MessageService.html",[3,0.421,4,0.246,9,0.219,11,1.197,18,1.31,23,0.463,24,1.175,26,0.81,31,1.47,33,2.052,34,1.611,35,0.027,36,1.148,37,1.201,38,1.862,39,1.81,51,1.42,52,2.534,53,0.517,54,0.363,55,0.758,61,0.246,62,0.303,63,1.776,65,1.919,67,1.517,101,0.01,102,0.01,103,0.01,104,0.01,105,0.01,171,1.536,197,1.028,200,2.047,207,1.058,242,1.536,244,3.47,257,2.669,265,1.766,289,0.989,321,1.342,323,1.414,330,2.454,338,2.225,356,1.937,369,3.379,374,2.225,378,1.31,385,1.84,386,2.329,388,1.533,392,3.379,400,1.673,414,4.075,440,2.973,505,2.427,527,2.669,557,2.049,608,2.427,672,2.329,779,2.049,782,2.049,803,3.379,858,4.632,928,2.329,1016,2.225,1179,2.049,1180,3.996,1181,4.703,1182,4.632,1183,3.996,1184,4.831,1185,2.754,1186,5.159,1187,3.996,1188,4.703,1189,3.996,1190,6.56,1191,2.754,1192,5.464,1193,5.878,1194,5.714,1195,5.714,1196,3.996,1197,2.754,1198,3.996,1199,4.363,1200,2.754,1201,3.996,1202,2.754,1203,3.379,1204,2.329,1205,2.329,1206,2.329,1207,2.329,1208,5.159,1209,2.754,1210,3.996,1211,3.996,1212,3.996,1213,2.754,1214,3.996,1215,2.754,1216,2.754,1217,2.754,1218,2.754,1219,2.754,1220,2.754,1221,2.754,1222,2.754,1223,3.996,1224,2.754,1225,2.754,1226,2.754,1227,2.754,1228,2.754,1229,2.754,1230,2.754,1231,2.754,1232,2.754,1233,2.754,1234,2.754,1235,2.754,1236,2.754,1237,2.754,1238,2.754,1239,2.754]],["title/injectables/MinimalHeaderService.html",[235,1.62,321,1.144]],["body/injectables/MinimalHeaderService.html",[0,0.401,3,0.326,4,0.326,9,0.291,11,1.145,18,1.735,23,0.614,24,1.429,26,1.072,31,1.5,34,1.429,35,0.026,36,1.018,37,1.137,38,1.429,39,1.714,51,1.003,53,0.641,54,0.481,55,1.003,61,0.326,62,0.401,63,1.714,67,1.429,95,1.527,101,0.014,102,0.014,103,0.014,104,0.014,105,0.014,130,1.146,171,1.401,172,1.717,197,1.251,217,2.599,230,2.311,235,2.311,246,2.665,247,2.148,248,2.311,249,2.759,251,2.148,253,2.599,254,2.311,255,2.951,265,1.612,287,3.379,321,1.632,323,1.873,326,4.109,330,2.772,356,2.4,388,2.03,400,2.951,434,2.436,508,4.169,536,5.132,752,2.713,884,2.713,885,2.951,896,4.109,902,3.245,903,3.245,930,3.318,983,2.436,1004,2.713,1042,3.245,1240,5.597,1241,6.674,1242,3.084,1243,3.647,1244,3.614,1245,6.069,1246,5.464,1247,3.647,1248,3.614,1249,3.647,1250,3.647,1251,3.647,1252,3.647,1253,3.647,1254,3.647,1255,3.647,1256,3.647,1257,3.647,1258,4.859,1259,3.647,1260,3.647,1261,3.647,1262,3.647,1263,3.647,1264,3.647,1265,3.647]],["title/interfaces/Monster.html",[192,1.402,281,1.223]],["body/interfaces/Monster.html",[3,0.305,4,0.305,9,0.272,11,1.243,23,0.574,35,0.027,36,1.283,37,1.306,53,0.375,61,0.305,90,1.283,101,0.013,102,0.013,103,0.013,104,0.013,105,0.013,137,1.278,182,2.521,186,1.632,192,2.175,194,2.071,196,2.912,197,1.195,198,1.923,200,2.089,201,3.928,205,2.334,206,3.455,207,1.785,208,2.586,209,1.366,210,3.102,211,3.455,269,1.459,281,2.418,371,2.586,419,3.928,707,2.821,716,3.455,791,4.795,794,5.176,801,3.928,854,4.218,859,4.795,862,4.795,864,4.795,866,4.795,1266,2.884,1267,5.671,1268,3.455,1269,4.645,1270,4.645,1271,5.671,1272,4.645,1273,5.671,1274,4.645,1275,4.645,1276,4.645,1277,4.645,1278,5.671,1279,4.645,1280,4.645,1281,4.645,1282,4.645,1283,4.645,1284,4.645,1285,4.645,1286,4.645,1287,4.645]],["title/components/PopoverPage.html",[0,0.374,95,1.07]],["body/components/PopoverPage.html",[0,0.563,1,1.081,2,1.839,3,0.288,4,0.288,5,1.326,6,1.423,7,1.423,8,1.423,9,0.257,11,1.074,15,2.052,16,1.423,17,2.886,19,1.974,21,1.974,23,0.542,24,1.313,26,0.947,31,1.319,33,2.293,34,1.313,35,0.027,36,1.16,37,1,38,1.313,39,1.507,51,0.886,52,2.279,53,0.491,54,0.425,55,0.886,61,0.288,62,0.354,63,1.507,65,1.081,67,0.947,73,0.723,74,1.716,75,1.839,76,1.326,77,1.423,78,2.446,79,1.423,80,1.423,81,1.081,82,1.156,83,1.423,84,1.081,85,1.603,86,1.423,87,1.081,88,1.974,89,1.081,90,1.338,91,1.423,92,1.081,93,1.081,94,1.423,95,1.739,96,1.423,97,1.081,98,1.326,99,1.423,100,1.423,101,0.012,102,0.012,103,0.012,104,0.012,105,0.012,172,2.031,182,2.279,197,1.149,200,1.61,208,3.081,209,0.947,246,2.661,265,1.423,269,1.012,289,1.156,718,2.293,720,2.124,727,2.632,776,2.982,902,4.317,1240,5.215,1242,2.723,1288,2.723,1289,4.465,1290,4.465,1291,5.125,1292,4.465,1293,5.534,1294,6.287,1295,4.465,1296,4.465,1297,4.465,1298,3.22,1299,4.465,1300,5.534,1301,4.465,1302,4.465,1303,3.775,1304,3.775,1305,3.22,1306,3.22,1307,3.22,1308,3.22,1309,4.465,1310,5.534,1311,3.22,1312,3.22,1313,4.465,1314,3.22]],["title/modules/PopoverPageModule.html",[106,0.714,119,2.068]],["body/modules/PopoverPageModule.html",[0,0.51,3,0.415,4,0.415,9,0.37,35,0.026,53,0.731,54,0.613,55,1.278,61,0.415,62,0.51,73,1.043,95,2.115,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,106,0.973,108,1.559,109,1.784,110,2.52,111,1.912,112,1.912,113,1.784,119,4.038,120,1.912,121,1.912,122,1.912,125,2.335,130,1.459,133,2.506,150,1.912,169,2.053,170,2.198,171,1.784,172,1.459,315,2.697,316,2.053,317,2.697,318,2.053,320,2.209,1315,3.926,1316,3.926,1317,4.643,1318,4.643]],["title/components/TabsPage.html",[0,0.374,97,1.144]],["body/components/TabsPage.html",[0,0.647,1,1.431,2,2.213,3,0.381,4,0.381,5,1.754,6,1.883,7,1.883,8,1.883,9,0.339,11,0.893,12,2.992,13,4.545,15,2.148,16,1.883,17,3.022,19,2.376,21,2.376,26,1.253,31,1.097,35,0.026,36,1.126,53,0.468,54,0.562,61,0.381,62,0.468,64,3.264,73,0.957,74,2.065,75,2.213,76,1.754,77,1.883,78,2.733,79,1.883,80,1.883,81,1.431,82,1.53,83,1.883,84,1.431,85,1.93,86,1.883,87,1.431,88,2.376,89,1.431,90,1.234,91,1.883,92,1.431,93,1.431,94,1.883,95,1.339,96,1.883,97,2.076,98,2.625,99,1.883,100,1.883,101,0.016,102,0.016,103,0.016,104,0.016,105,0.016,196,2.556,281,1.93,982,3.59,1042,3.59,1244,3.998,1319,3.603,1320,5.888,1321,5.375,1322,4.261]],["title/modules/TabsPageModule.html",[106,0.714,1323,2.274]],["body/modules/TabsPageModule.html",[0,0.481,3,0.392,4,0.392,9,0.349,35,0.026,53,0.721,54,0.578,55,1.205,61,0.392,62,0.481,73,0.984,90,1.347,97,2.233,98,2.251,101,0.016,102,0.016,103,0.016,104,0.016,105,0.016,106,0.917,108,1.47,109,1.683,110,2.455,111,1.803,112,1.803,113,1.683,120,1.803,121,1.803,122,1.803,125,2.251,130,1.376,133,2.417,150,1.803,169,1.935,170,2.141,171,1.683,172,2.019,173,4.623,196,2.083,281,1.963,315,2.601,316,1.935,317,2.601,318,1.935,320,2.083,934,2.924,1110,2.924,1323,4.378,1324,3.702,1325,3.702,1326,4.378,1327,4.378,1328,4.378,1329,5.468,1330,4.378,1331,4.378]],["title/interfaces/Typ.html",[186,0.937,192,1.402]],["body/interfaces/Typ.html",[3,0.289,4,0.289,9,0.258,11,0.677,15,1.407,23,0.544,35,0.026,36,1.076,37,1.082,61,0.496,63,0.951,67,1.316,101,0.012,102,0.012,103,0.012,104,0.012,105,0.012,137,1.232,186,1.935,192,2.115,194,1.963,196,1.538,197,1.152,198,2.185,200,1.94,205,1.725,206,3.33,207,1.72,208,2.859,209,1.316,210,2.99,211,3.33,252,2.99,295,2.466,358,1.963,370,2.299,573,1.8,576,3.119,680,2.99,718,3.582,720,1.538,913,2.405,1016,1.8,1063,2.159,1205,4.343,1248,2.405,1268,2.405,1332,1.963,1333,3.233,1334,4.477,1335,4.477,1336,4.477,1337,4.687,1338,3.33,1339,3.33,1340,3.33,1341,3.33,1342,3.33,1343,3.33,1344,3.33,1345,3.33,1346,3.33,1347,3.33,1348,3.33,1349,3.33,1350,3.33,1351,3.33,1352,3.33,1353,3.33,1354,3.33,1355,3.33,1356,3.33,1357,3.33,1358,2.733,1359,3.785,1360,2.733,1361,2.733,1362,2.733,1363,2.733,1364,2.733,1365,2.733,1366,2.733,1367,2.733,1368,2.733,1369,2.733,1370,2.733,1371,2.733,1372,2.733,1373,2.733,1374,2.733,1375,2.733,1376,2.733,1377,2.733,1378,2.733,1379,2.733,1380,2.733,1381,2.733,1382,2.733,1383,2.733,1384,2.733,1385,2.733,1386,2.733,1387,2.733,1388,2.733,1389,2.733,1390,2.733,1391,2.733,1392,2.733,1393,2.733,1394,2.733,1395,2.733,1396,2.733,1397,2.733,1398,2.733,1399,2.733,1400,2.733,1401,2.733,1402,2.733,1403,2.733,1404,2.733,1405,2.733,1406,2.733,1407,2.733,1408,2.733,1409,2.733,1410,2.733,1411,3.233]],["title/coverage.html",[1412,4.64]],["body/coverage.html",[0,0.725,1,1.265,9,0.3,10,3.185,35,0.026,37,0.735,62,0.414,81,1.265,84,1.265,87,1.265,89,1.265,92,1.265,93,1.265,95,1.183,97,1.265,101,0.014,102,0.014,103,0.014,104,0.014,105,0.014,154,2.802,156,3.185,177,2.515,180,2.515,184,2.515,186,1.036,188,2.515,192,2.43,193,2.287,195,3.185,215,2.802,216,3.185,233,1.791,235,1.791,281,1.352,285,2.802,287,2.097,295,1.994,321,2.189,322,2.287,324,3.185,338,2.097,370,1.934,378,1.791,385,3.315,424,2.515,425,3.031,426,3.185,428,2.287,486,3.185,576,2.287,688,3.014,689,3.185,699,2.515,702,2.515,727,1.934,788,3.692,882,2.287,883,2.515,884,3.692,920,3.185,933,2.851,934,2.515,935,3.185,1110,2.515,1161,3.185,1168,2.802,1169,2.802,1179,2.802,1266,3.185,1288,3.185,1319,3.185,1332,3.372,1413,3.766,1414,3.766,1415,3.766,1416,3.766,1417,3.766,1418,7.043,1419,4.964,1420,4.695,1421,6.518,1422,6.422,1423,3.766,1424,3.766,1425,5.552,1426,4.964,1427,3.766,1428,3.766,1429,3.766,1430,3.766,1431,3.766,1432,3.766,1433,3.766,1434,4.964,1435,3.766,1436,3.766,1437,3.766,1438,3.766,1439,3.766,1440,3.185,1441,3.185,1442,4.197,1443,3.185,1444,4.964,1445,3.185,1446,3.766,1447,3.766]],["title/dependencies.html",[109,1.573,1448,2.848]],["body/dependencies.html",[35,0.026,43,3.842,49,3.842,54,0.599,55,1.25,56,3.731,57,3.38,59,3.38,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,127,4.731,128,3.737,130,1.428,136,4.162,137,1.25,139,2.759,141,2.759,143,3.035,144,3.38,316,2.008,318,2.008,337,3.842,384,2.333,391,3.035,476,3.842,1449,4.543,1450,6.702,1451,4.543,1452,4.543,1453,4.543,1454,6.062,1455,4.543,1456,6.062,1457,4.543,1458,4.543,1459,6.326,1460,4.543,1461,4.543,1462,5.594,1463,4.543,1464,4.543,1465,4.543,1466,4.543,1467,4.543,1468,4.543,1469,4.543,1470,4.543,1471,4.543,1472,4.543,1473,4.543,1474,3.842,1475,4.543,1476,4.543,1477,4.543]],["title/miscellaneous/enumerations.html",[1478,2.118,1479,3.461]],["body/miscellaneous/enumerations.html",[23,0.838,35,0.025,37,0.972,101,0.018,102,0.018,103,0.018,104,0.018,105,0.018,269,1.982,414,3.706,680,3.327,1016,2.773,1179,3.706,1182,4.212,1184,5.001,1192,4.212,1193,4.212,1199,5.001,1204,4.212,1206,4.212,1207,4.212,1332,3.025,1337,5.001,1338,3.706,1339,3.706,1340,3.706,1341,3.706,1342,3.706,1343,3.706,1344,3.706,1345,3.706,1346,3.706,1347,3.706,1348,3.706,1349,3.706,1350,3.706,1351,3.706,1352,3.706,1353,3.706,1354,3.706,1355,3.706,1356,3.706,1357,3.706,1479,4.212,1480,3.706,1481,4.982,1482,3.706]],["title/miscellaneous/functions.html",[1478,2.118,1483,4.093]],["body/miscellaneous/functions.html",[11,1.073,23,0.862,34,1.506,35,0.024,36,1.337,38,1.506,39,1.506,51,1.409,101,0.019,102,0.019,103,0.019,104,0.019,105,0.019,186,1.756,192,2.109,200,1.61,370,2.63,576,3.651,913,3.811,1168,4.473,1248,3.811,1268,3.811,1332,3.111,1404,4.332,1405,4.332,1406,4.332,1407,4.332,1408,4.332,1409,4.332,1410,4.332,1480,3.811,1482,3.811,1484,5.123]],["title/index.html",[23,0.479,1485,2.408,1486,2.408]],["body/index.html",[15,1.889,35,0.024,101,0.019,102,0.019,103,0.019,104,0.019,105,0.019,137,1.756,139,3.111,141,3.651,143,3.421,172,1.61,391,3.421,449,4.473,453,5.084,630,4.332,718,2.63,885,3.111,1032,3.811,1487,5.123,1488,5.123,1489,5.123,1490,6.585,1491,5.123,1492,5.123,1493,5.123,1494,5.123,1495,5.123,1496,5.123,1497,5.123,1498,5.123]],["title/license.html",[1485,2.408,1486,2.408,1499,2.408]],["body/license.html",[35,0.021,76,1.891,101,0.017,102,0.017,103,0.017,104,0.017,105,0.017,249,2.03,307,3.884,391,3.761,602,4.762,924,3.884,1053,3.417,1064,3.417,1145,3.884,1244,3.417,1499,3.884,1500,6.091,1501,4.593,1502,4.593,1503,4.593,1504,5.632,1505,4.593,1506,4.593,1507,4.593,1508,4.593,1509,4.593,1510,4.593,1511,6.834,1512,4.593,1513,4.593,1514,4.593,1515,4.593,1516,6.091,1517,4.593,1518,5.632,1519,4.593,1520,4.593,1521,4.593,1522,4.593,1523,4.593,1524,4.593,1525,4.593,1526,4.593,1527,5.632,1528,4.593,1529,4.593,1530,4.593,1531,4.593,1532,4.593,1533,5.632,1534,5.632,1535,4.593,1536,4.593,1537,4.593,1538,4.593,1539,4.593,1540,4.593,1541,4.593,1542,4.593,1543,4.593,1544,4.593,1545,4.593,1546,4.593,1547,4.593,1548,4.593,1549,4.593,1550,4.593,1551,4.593,1552,4.593,1553,4.593,1554,4.593,1555,4.593,1556,4.593,1557,4.593,1558,4.593,1559,4.593,1560,4.593,1561,4.593]],["title/modules.html",[108,1.558]],["body/modules.html",[35,0.021,101,0.018,102,0.018,103,0.026,104,0.018,105,0.018,107,3.201,108,1.609,118,2.91,119,2.91,128,4.596,311,3.201,783,3.201,877,3.201,1105,3.201,1158,3.201,1174,3.201,1323,3.201,1562,6.881,1563,6.881,1564,6.881,1565,6.919,1566,4.793,1567,4.793]],["title/overview.html",[1568,4.64]],["body/overview.html",[1,2.223,2,1.766,35,0.026,73,0.964,81,1.983,84,1.983,87,1.983,89,1.983,92,1.983,93,1.983,95,1.856,97,1.983,101,0.016,102,0.016,103,0.016,104,0.016,105,0.016,106,0.899,107,4.512,108,1.44,109,1.648,110,1.766,111,1.766,112,1.766,113,1.648,114,3.627,115,3.627,116,3.627,117,3.627,118,3.587,119,3.879,120,1.766,121,1.766,122,1.766,170,1.54,194,2.605,299,2.203,311,4.14,312,3.627,313,3.627,323,2.203,783,4.14,784,3.627,785,3.627,877,4.14,878,3.627,879,3.627,1105,4.14,1106,3.627,1107,3.627,1158,4.14,1159,3.627,1160,3.627,1174,4.14,1175,3.627,1176,3.627,1315,3.627,1316,3.627,1323,4.14,1324,3.627,1325,3.627,1474,3.627,1569,4.289,1570,4.289,1571,4.289,1572,4.289,1573,4.289,1574,4.289]],["title/routes.html",[170,1.666]],["body/routes.html",[35,0.023,101,0.02,102,0.02,103,0.02,104,0.02,105,0.02,170,1.975]],["title/miscellaneous/variables.html",[1478,2.118,1575,4.093]],["body/miscellaneous/variables.html",[15,1.404,23,0.542,35,0.026,36,0.676,37,1.262,82,1.842,90,1.219,101,0.012,102,0.012,103,0.012,104,0.012,105,0.012,172,1.74,182,2.395,186,1.91,198,2.158,200,1.013,209,1.814,217,2.126,246,2.112,247,2.267,265,1.975,267,2.154,269,1.939,285,3.324,295,2.466,310,3.779,358,1.958,385,3.698,576,2.714,680,2.154,709,1.795,718,3.558,720,1.534,727,2.295,776,3.425,902,4.019,1016,1.795,1063,2.154,1169,3.324,1203,3.779,1303,4.682,1304,3.779,1332,1.958,1338,2.398,1339,2.398,1340,2.398,1341,2.398,1342,2.398,1343,2.398,1344,2.398,1345,2.398,1346,2.398,1347,2.398,1348,2.398,1349,2.398,1350,2.398,1351,2.398,1352,2.398,1353,2.398,1354,2.398,1355,2.398,1356,2.398,1357,2.398,1358,2.726,1359,3.779,1360,2.726,1361,2.726,1362,2.726,1363,2.726,1364,2.726,1365,2.726,1366,2.726,1367,2.726,1368,2.726,1369,2.726,1370,2.726,1371,2.726,1372,2.726,1373,2.726,1374,2.726,1375,2.726,1376,2.726,1377,2.726,1378,2.726,1379,2.726,1380,2.726,1381,2.726,1382,2.726,1383,2.726,1384,2.726,1385,2.726,1386,2.726,1387,2.726,1388,2.726,1389,2.726,1390,2.726,1391,2.726,1392,2.726,1393,2.726,1394,2.726,1395,2.726,1396,2.726,1397,2.726,1398,2.726,1399,2.726,1400,2.726,1401,2.726,1402,2.726,1403,2.726,1420,2.726,1440,2.726,1441,2.726,1442,2.726,1443,3.779,1445,3.779,1480,2.398,1482,2.398,1576,3.224,1577,4.469,1578,3.224,1579,3.224,1580,5.129,1581,3.224,1582,3.224,1583,5.129,1584,4.469,1585,4.469,1586,5.129]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":295,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"interfaces/Typ.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0).then(_",{"_index":402,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["0.9.1",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1313,"title":{},"body":{"components/PopoverPage.html":{}}}],["1",{"_index":299,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"overview.html":{}}}],["1.0",{"_index":677,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["1.9.0",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":685,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["10",{"_index":1570,"title":{},"body":{"overview.html":{}}}],["10/10",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["14/14",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":301,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{}}}],["2.1.2",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1502,"title":{},"body":{"license.html":{}}}],["21",{"_index":595,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["22/22",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["24/24",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["26/26",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1153,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["3.3.0",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1574,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":1237,"title":{},"body":{"injectables/MessageService.html":{}}}],["32/32",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1573,"title":{},"body":{"overview.html":{}}}],["4.7.1",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":781,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["5.0.0",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["5.19.1",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["5.20.0",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["516",{"_index":406,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["6.0.2",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1474,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["8.1.0",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["8.1.2",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1571,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["a.id",{"_index":650,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["a[0].name",{"_index":775,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["abdeckung",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["abhängigkeiten",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1532,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1285,"title":{},"body":{"interfaces/Monster.html":{}}}],["access",{"_index":559,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["according",{"_index":450,"title":{},"body":{"injectables/DbImageService.html":{}}}],["action",{"_index":1556,"title":{},"body":{"license.html":{}}}],["actionsheetcontroller",{"_index":460,"title":{},"body":{"injectables/DbImageService.html":{}}}],["activatedroute",{"_index":698,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["active",{"_index":601,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["actual",{"_index":358,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["adapt",{"_index":1032,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"index.html":{}}}],["add",{"_index":557,"title":{},"body":{"injectables/DbTypenService.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{}}}],["added",{"_index":599,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["addition",{"_index":1150,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["additional",{"_index":1195,"title":{},"body":{"injectables/MessageService.html":{}}}],["address",{"_index":929,"title":{},"body":{"interfaces/Image.html":{}}}],["aehnliche",{"_index":844,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["aehnlicheformen",{"_index":791,"title":{},"body":{"components/DetailMonsterPage.html":{},"interfaces/Monster.html":{}}}],["affairs",{"_index":706,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["against",{"_index":716,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"interfaces/Monster.html":{}}}],["alert",{"_index":1182,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["alert(message",{"_index":1189,"title":{},"body":{"injectables/MessageService.html":{}}}],["alerts",{"_index":442,"title":{},"body":{"injectables/DbImageService.html":{}}}],["alle",{"_index":638,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["allformattedtypen",{"_index":906,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["allgemeines",{"_index":768,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["allpromises",{"_index":744,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["alltypen",{"_index":489,"title":{},"body":{"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["alltypenformatted",{"_index":889,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["alltypes",{"_index":610,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["alltypes[neededids[i",{"_index":614,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["alltyps",{"_index":604,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["already",{"_index":407,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{}}}],["amount",{"_index":572,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["ancestors",{"_index":810,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["anchestor",{"_index":829,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["anchestormonster",{"_index":812,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["and/or",{"_index":307,"title":{},"body":{"components/CalcTypPage.html":{},"license.html":{}}}],["android",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["anfällig",{"_index":869,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["angular/common",{"_index":316,"title":{},"body":{"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":318,"title":{},"body":{"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"injectables/MinimalHeaderService.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["animated",{"_index":1238,"title":{},"body":{"injectables/MessageService.html":{}}}],["another",{"_index":1246,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["anzahl",{"_index":585,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"interfaces/Typ.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":107,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":154,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":118,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbitrary",{"_index":220,"title":{},"body":{"components/CalcTypPage.html":{}}}],["arising",{"_index":1559,"title":{},"body":{"license.html":{}}}],["around",{"_index":538,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["aroute",{"_index":704,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["asc",{"_index":1137,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["assets/monster_images/${imageid}.png",{"_index":475,"title":{},"body":{"injectables/DbImageService.html":{}}}],["associated",{"_index":1512,"title":{},"body":{"license.html":{}}}],["async",{"_index":330,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{}}}],["atacked",{"_index":268,"title":{},"body":{"components/CalcTypPage.html":{}}}],["att",{"_index":736,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["att_typen",{"_index":792,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["att_typen_icons",{"_index":692,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attack",{"_index":272,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["attack's",{"_index":516,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["attacke",{"_index":193,"title":{"interfaces/Attacke.html":{}},"body":{"interfaces/Attacke.html":{},"components/DetailAttackePage.html":{},"components/ListAttackenPage.html":{},"coverage.html":{}}}],["attacke'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["attacke.beschreibung",{"_index":770,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.module#detailattackepagemodule",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["attacke.module.ts",{"_index":786,"title":{},"body":{"modules/DetailAttackePageModule.html":{}}}],["attacke.name",{"_index":767,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page",{"_index":787,"title":{},"body":{"modules/DetailAttackePageModule.html":{}}}],["attacke.page.html",{"_index":691,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page.scss",{"_index":690,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page.ts",{"_index":689,"title":{},"body":{"components/DetailAttackePage.html":{},"coverage.html":{}}}],["attacke.page.ts:127",{"_index":708,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page.ts:26",{"_index":712,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page.ts:30",{"_index":710,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page.ts:35",{"_index":717,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page.ts:40",{"_index":714,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page.ts:44",{"_index":722,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.page.ts:48",{"_index":703,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke.schaden",{"_index":769,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["attacke/:id",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["attacke/detail",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"coverage.html":{}}}],["attacke_id",{"_index":668,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["attacked",{"_index":239,"title":{},"body":{"components/CalcTypPage.html":{}}}],["attacken",{"_index":196,"title":{},"body":{"interfaces/Attacke.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"interfaces/Monster.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{}}}],["attacken'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["attacken.module#listattackenpagemodule",{"_index":1331,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["attacken.module.ts",{"_index":1108,"title":{},"body":{"modules/ListAttackenPageModule.html":{}}}],["attacken.page",{"_index":1109,"title":{},"body":{"modules/ListAttackenPageModule.html":{}}}],["attacken.page.html",{"_index":939,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.scss",{"_index":938,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts",{"_index":935,"title":{},"body":{"components/ListAttackenPage.html":{},"coverage.html":{}}}],["attacken.page.ts:102",{"_index":974,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:125",{"_index":958,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:188",{"_index":977,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:199",{"_index":984,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:208",{"_index":981,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:217",{"_index":988,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:230",{"_index":986,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:24",{"_index":999,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:246",{"_index":963,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:29",{"_index":1002,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:35",{"_index":997,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:39",{"_index":998,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:43",{"_index":993,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:47",{"_index":991,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:53",{"_index":1007,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:57",{"_index":990,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:62",{"_index":1014,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:66",{"_index":1012,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:70",{"_index":1010,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.page.ts:74",{"_index":957,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["attacken.service",{"_index":723,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{}}}],["attacken.service.ts",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["attacken/list",{"_index":934,"title":{},"body":{"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"modules/TabsPageModule.html":{},"coverage.html":{}}}],["attacking",{"_index":238,"title":{},"body":{"components/CalcTypPage.html":{}}}],["attacks",{"_index":707,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Monster.html":{}}}],["attid",{"_index":517,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["attid}`]).then(data",{"_index":669,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["atts[i",{"_index":1035,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["authors",{"_index":1549,"title":{},"body":{"license.html":{}}}],["await",{"_index":400,"title":{},"body":{"injectables/DatabaseService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{}}}],["b",{"_index":649,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["back",{"_index":1301,"title":{},"body":{"components/PopoverPage.html":{}}}],["background",{"_index":1015,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["bar",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["bar/ngx",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["before",{"_index":1257,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["beginning",{"_index":1088,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["behaviorsubject",{"_index":377,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["behaviorsubject(false",{"_index":379,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["behaviorsubject(null",{"_index":458,"title":{},"body":{"injectables/DbImageService.html":{}}}],["bei",{"_index":774,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["beim",{"_index":481,"title":{},"body":{"injectables/DbImageService.html":{}}}],["belonging",{"_index":447,"title":{},"body":{"injectables/DbImageService.html":{}}}],["bersicht",{"_index":1569,"title":{},"body":{"overview.html":{}}}],["beschreibung",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["between",{"_index":1269,"title":{},"body":{"interfaces/Monster.html":{}}}],["bildes",{"_index":484,"title":{},"body":{"injectables/DbImageService.html":{}}}],["black",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["boden",{"_index":1352,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":1271,"title":{},"body":{"interfaces/Monster.html":{}}}],["boolean",{"_index":257,"title":{},"body":{"components/CalcTypPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{}}}],["bootstrap",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["border",{"_index":777,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["bounds",{"_index":1054,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["browse",{"_index":1565,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":162,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer",{"_index":1013,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["bug",{"_index":1395,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":607,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["bunch",{"_index":1025,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["bundle",{"_index":1005,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["button",{"_index":261,"title":{},"body":{"components/CalcTypPage.html":{},"components/ListMonsterPage.html":{}}}],["c",{"_index":1501,"title":{},"body":{"license.html":{}}}],["calc",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"miscellaneous/variables.html":{}}}],["calctyppage",{"_index":81,"title":{"components/CalcTypPage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["calctyppagemodule",{"_index":311,"title":{"modules/CalcTypPageModule.html":{}},"body":{"modules/CalcTypPageModule.html":{},"modules.html":{},"overview.html":{}}}],["calculate",{"_index":218,"title":{},"body":{"components/CalcTypPage.html":{}}}],["calculator",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":259,"title":{},"body":{"components/CalcTypPage.html":{}}}],["caller",{"_index":1290,"title":{},"body":{"components/PopoverPage.html":{}}}],["capable",{"_index":764,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["case",{"_index":1050,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["catch((e",{"_index":404,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["catch(err",{"_index":479,"title":{},"body":{"injectables/DbImageService.html":{}}}],["change",{"_index":364,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["changed",{"_index":459,"title":{},"body":{"injectables/DbImageService.html":{}}}],["changes",{"_index":381,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["charge",{"_index":1508,"title":{},"body":{"license.html":{}}}],["chars",{"_index":1213,"title":{},"body":{"injectables/MessageService.html":{}}}],["chemie",{"_index":1346,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["children",{"_index":1328,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["chosen",{"_index":1300,"title":{},"body":{"components/PopoverPage.html":{}}}],["claim",{"_index":1552,"title":{},"body":{"license.html":{}}}],["class",{"_index":62,"title":{"classes/AppPage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"coverage.html":{}}}],["cleanup",{"_index":1049,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["click)=\"toggleoperator",{"_index":1098,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["close",{"_index":1293,"title":{},"body":{"components/PopoverPage.html":{}}}],["close(path",{"_index":1297,"title":{},"body":{"components/PopoverPage.html":{}}}],["closebuttontext",{"_index":1234,"title":{},"body":{"injectables/MessageService.html":{}}}],["closes",{"_index":1259,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["closing",{"_index":624,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["cluster_appmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_calctyppagemodule",{"_index":312,"title":{},"body":{"modules/CalcTypPageModule.html":{},"overview.html":{}}}],["cluster_calctyppagemodule_declarations",{"_index":313,"title":{},"body":{"modules/CalcTypPageModule.html":{},"overview.html":{}}}],["cluster_detailattackepagemodule",{"_index":784,"title":{},"body":{"modules/DetailAttackePageModule.html":{},"overview.html":{}}}],["cluster_detailattackepagemodule_declarations",{"_index":785,"title":{},"body":{"modules/DetailAttackePageModule.html":{},"overview.html":{}}}],["cluster_detailmonsterpagemodule",{"_index":878,"title":{},"body":{"modules/DetailMonsterPageModule.html":{},"overview.html":{}}}],["cluster_detailmonsterpagemodule_declarations",{"_index":879,"title":{},"body":{"modules/DetailMonsterPageModule.html":{},"overview.html":{}}}],["cluster_listattackenpagemodule",{"_index":1106,"title":{},"body":{"modules/ListAttackenPageModule.html":{},"overview.html":{}}}],["cluster_listattackenpagemodule_declarations",{"_index":1107,"title":{},"body":{"modules/ListAttackenPageModule.html":{},"overview.html":{}}}],["cluster_listmonsterpagemodule",{"_index":1159,"title":{},"body":{"modules/ListMonsterPageModule.html":{},"overview.html":{}}}],["cluster_listmonsterpagemodule_declarations",{"_index":1160,"title":{},"body":{"modules/ListMonsterPageModule.html":{},"overview.html":{}}}],["cluster_listtypenpagemodule",{"_index":1175,"title":{},"body":{"modules/ListTypenPageModule.html":{},"overview.html":{}}}],["cluster_listtypenpagemodule_declarations",{"_index":1176,"title":{},"body":{"modules/ListTypenPageModule.html":{},"overview.html":{}}}],["cluster_popoverpagemodule",{"_index":1315,"title":{},"body":{"modules/PopoverPageModule.html":{},"overview.html":{}}}],["cluster_popoverpagemodule_declarations",{"_index":1316,"title":{},"body":{"modules/PopoverPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule",{"_index":1324,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":1325,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["code",{"_index":1386,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["collect",{"_index":665,"title":{},"body":{"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["color",{"_index":1016,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["color=\"light",{"_index":1097,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["combination",{"_index":221,"title":{},"body":{"components/CalcTypPage.html":{}}}],["comma",{"_index":623,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["commit",{"_index":1398,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":315,"title":{},"body":{"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}}}],["communicate",{"_index":505,"title":{},"body":{"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{}}}],["compared",{"_index":1406,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["complete",{"_index":969,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["componentprops",{"_index":1255,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"overview.html":{}}}],["concatenated",{"_index":646,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["concerning",{"_index":488,"title":{},"body":{"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["conditions",{"_index":1531,"title":{},"body":{"license.html":{}}}],["connect",{"_index":1009,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["connection",{"_index":1560,"title":{},"body":{"license.html":{}}}],["const",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}}}],["construct",{"_index":672,"title":{},"body":{"injectables/DbTypenService.html":{},"injectables/MessageService.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"components/DetailAttackePage.html":{},"components/ListTypenPage.html":{},"components/TabsPage.html":{}}}],["constructor(aroute",{"_index":697,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["constructor(databaseservice",{"_index":502,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["constructor(db",{"_index":956,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["constructor(db_typen",{"_index":232,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/FullHeaderService.html":{}}}],["constructor(file",{"_index":432,"title":{},"body":{"injectables/DbImageService.html":{}}}],["constructor(platform",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(plt",{"_index":336,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["constructor(popovercontroller",{"_index":1242,"title":{},"body":{"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{}}}],["constructor(private",{"_index":289,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"components/PopoverPage.html":{}}}],["constructor(public",{"_index":1252,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["constructor(toastctrl",{"_index":1185,"title":{},"body":{"injectables/MessageService.html":{}}}],["contains",{"_index":598,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["content",{"_index":902,"title":{},"body":{"injectables/FullHeaderService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"miscellaneous/variables.html":{}}}],["content')).gettext",{"_index":165,"title":{},"body":{"classes/AppPage.html":{}}}],["content.title",{"_index":1310,"title":{},"body":{"components/PopoverPage.html":{}}}],["context",{"_index":1443,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":613,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["contract",{"_index":1557,"title":{},"body":{"license.html":{}}}],["controller",{"_index":255,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"injectables/MinimalHeaderService.html":{}}}],["convert",{"_index":435,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["copied",{"_index":403,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["copies",{"_index":1527,"title":{},"body":{"license.html":{}}}],["copy",{"_index":391,"title":{},"body":{"injectables/DatabaseService.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["copy/ngx",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{}}}],["copyright",{"_index":1500,"title":{},"body":{"license.html":{}}}],["cordova",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["correctly",{"_index":825,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["count",{"_index":580,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["course",{"_index":633,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["coverage",{"_index":1412,"title":{"coverage.html":{}},"body":{}}],["cpoy",{"_index":1491,"title":{},"body":{"index.html":{}}}],["create",{"_index":350,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["damage",{"_index":212,"title":{},"body":{"interfaces/Attacke.html":{}}}],["damages",{"_index":1553,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1207,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":508,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"injectables/MinimalHeaderService.html":{}}}],["data.rows.item(0).num",{"_index":589,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["data.rows.length",{"_index":584,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["database",{"_index":327,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["database.service",{"_index":462,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["databaseservice",{"_index":322,"title":{"injectables/DatabaseService.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"coverage.html":{}}}],["datatotyp",{"_index":491,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["datatotyp(data",{"_index":506,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["datei",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{},"coverage.html":{}}}],["datenbank",{"_index":411,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["db",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{},"dependencies.html":{},"index.html":{}}}],["db_att",{"_index":796,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["db_img",{"_index":797,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["db_mon",{"_index":701,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["db_typ",{"_index":700,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["db_typen",{"_index":241,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/FullHeaderService.html":{}}}],["dbattackenservice",{"_index":699,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"coverage.html":{}}}],["dbcopy",{"_index":337,"title":{},"body":{"injectables/DatabaseService.html":{},"dependencies.html":{}}}],["dbimageservice",{"_index":424,"title":{"injectables/DbImageService.html":{}},"body":{"injectables/DbImageService.html":{},"components/DetailMonsterPage.html":{},"coverage.html":{}}}],["dbmonsterservice",{"_index":702,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{},"coverage.html":{}}}],["dbname",{"_index":328,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["dbready",{"_index":329,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["dbtypenservice",{"_index":233,"title":{"injectables/DbTypenService.html":{}},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListTypenPage.html":{},"coverage.html":{}}}],["deal",{"_index":1515,"title":{},"body":{"license.html":{}}}],["dealed",{"_index":213,"title":{},"body":{"interfaces/Attacke.html":{}}}],["dealings",{"_index":1561,"title":{},"body":{"license.html":{}}}],["debug",{"_index":392,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/MessageService.html":{}}}],["decimal",{"_index":1273,"title":{},"body":{"interfaces/Monster.html":{}}}],["declarations",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["default",{"_index":209,"title":{},"body":{"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["defaulttyp",{"_index":492,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["definiert",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["dein",{"_index":1562,"title":{},"body":{"modules.html":{}}}],["delete",{"_index":355,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deleted",{"_index":423,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["deletedb",{"_index":331,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["delimiter",{"_index":1223,"title":{},"body":{"injectables/MessageService.html":{}}}],["delimiter[0",{"_index":1229,"title":{},"body":{"injectables/MessageService.html":{}}}],["delimiters",{"_index":1216,"title":{},"body":{"injectables/MessageService.html":{}}}],["delimiters[key",{"_index":1218,"title":{},"body":{"injectables/MessageService.html":{}}}],["deliver",{"_index":1065,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["der",{"_index":586,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["desc",{"_index":1138,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["description",{"_index":527,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{}}}],["detail",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["detailattackepage",{"_index":84,"title":{"components/DetailAttackePage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["detailattackepagemodule",{"_index":783,"title":{"modules/DetailAttackePageModule.html":{}},"body":{"modules/DetailAttackePageModule.html":{},"modules.html":{},"overview.html":{}}}],["detailmonsterpage",{"_index":87,"title":{"components/DetailMonsterPage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["detailmonsterpagemodule",{"_index":877,"title":{"modules/DetailMonsterPageModule.html":{}},"body":{"modules/DetailMonsterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["determine",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["dict",{"_index":1408,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["dictionary",{"_index":913,"title":{},"body":{"injectables/FullHeaderService.html":{},"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["didnt",{"_index":652,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["die",{"_index":410,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["direct",{"_index":809,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["directive",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["directives",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["directory",{"_index":353,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["dislike",{"_index":1369,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["dismissed",{"_index":1308,"title":{},"body":{"components/PopoverPage.html":{}}}],["display",{"_index":930,"title":{},"body":{"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["displayed",{"_index":903,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["displaying",{"_index":1495,"title":{},"body":{"index.html":{}}}],["disply",{"_index":1496,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1524,"title":{},"body":{"license.html":{}}}],["docs",{"_index":1490,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1513,"title":{},"body":{"license.html":{}}}],["dokumentation",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["done",{"_index":520,"title":{},"body":{"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{}}}],["dropdown",{"_index":1302,"title":{},"body":{"components/PopoverPage.html":{}}}],["dummy",{"_index":512,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{}}}],["duration",{"_index":1236,"title":{},"body":{"injectables/MessageService.html":{}}}],["dynamic",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["e.code",{"_index":405,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["e.g",{"_index":1262,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["e2e/src/app.po.ts",{"_index":156,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":160,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":159,"title":{},"body":{"classes/AppPage.html":{}}}],["e[0].name",{"_index":874,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["each",{"_index":1222,"title":{},"body":{"injectables/MessageService.html":{}}}],["eff",{"_index":296,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{}}}],["eff.tostring",{"_index":304,"title":{},"body":{"components/CalcTypPage.html":{}}}],["effective",{"_index":681,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{}}}],["effectiveagainst",{"_index":693,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["effectiveids",{"_index":753,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["effectiveids.push(i+1",{"_index":756,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["effectiveness",{"_index":219,"title":{},"body":{"components/CalcTypPage.html":{}}}],["effects",{"_index":204,"title":{},"body":{"interfaces/Attacke.html":{}}}],["effektiv",{"_index":303,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{}}}],["effektivitäten",{"_index":771,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["effektivitäts",{"_index":309,"title":{},"body":{"components/CalcTypPage.html":{}}}],["efficiencies",{"_index":740,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["efficiency",{"_index":525,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["einer",{"_index":471,"title":{},"body":{"injectables/DbImageService.html":{}}}],["eines",{"_index":483,"title":{},"body":{"injectables/DbImageService.html":{}}}],["eis",{"_index":1341,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["elektro",{"_index":1351,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["element(by.deepcss('app",{"_index":163,"title":{},"body":{"classes/AppPage.html":{}}}],["empty",{"_index":1063,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["emptylist",{"_index":590,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["end",{"_index":978,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["entered",{"_index":979,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["entire",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["entries",{"_index":342,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["entry",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/DbImageService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/TabsPage.html":{}}}],["entrycomponents",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["entwicklung",{"_index":873,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["enum",{"_index":1205,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/Typ.html":{}}}],["enumerations",{"_index":1479,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":385,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":390,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["environments/environment",{"_index":386,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/MessageService.html":{}}}],["ergebnis",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["ermitteln",{"_index":587,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["err",{"_index":594,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["error",{"_index":414,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["error(message",{"_index":1196,"title":{},"body":{"injectables/MessageService.html":{}}}],["errors",{"_index":443,"title":{},"body":{"injectables/DbImageService.html":{}}}],["establish",{"_index":1029,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["ev",{"_index":253,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["even",{"_index":397,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{}}}],["event",{"_index":249,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{},"license.html":{}}}],["event.target.complete",{"_index":1091,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["evolution",{"_index":793,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["exactly",{"_index":454,"title":{},"body":{"injectables/DbImageService.html":{}}}],["example",{"_index":684,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["exchange",{"_index":621,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["exist",{"_index":634,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["exists",{"_index":408,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["expansion",{"_index":985,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["export",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{}}}],["exports",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["express",{"_index":1541,"title":{},"body":{"license.html":{}}}],["extend",{"_index":895,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["eye",{"_index":1402,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["factor",{"_index":676,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["factorize",{"_index":675,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["false",{"_index":267,"title":{},"body":{"components/CalcTypPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"miscellaneous/variables.html":{}}}],["false//environment.production",{"_index":1209,"title":{},"body":{"injectables/MessageService.html":{}}}],["fehlen",{"_index":278,"title":{},"body":{"components/CalcTypPage.html":{}}}],["fehlt",{"_index":467,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["felix",{"_index":1498,"title":{},"body":{"index.html":{}}}],["fetching",{"_index":211,"title":{},"body":{"interfaces/Attacke.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{}}}],["feuer",{"_index":1340,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":373,"title":{},"body":{"injectables/DatabaseService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["fields",{"_index":894,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["file",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"dependencies.html":{},"index.html":{}}}],["files",{"_index":1514,"title":{},"body":{"license.html":{}}}],["fill=\"outline",{"_index":1094,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["filter",{"_index":600,"title":{},"body":{"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["filter_locked",{"_index":940,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["filter_on",{"_index":941,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["filtered",{"_index":1083,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["filtering",{"_index":909,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["filtervals",{"_index":1261,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["find",{"_index":449,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"index.html":{}}}],["findattacken",{"_index":950,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["finden",{"_index":591,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["findmonster",{"_index":1129,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["findmonsters",{"_index":1114,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["finsternis",{"_index":1343,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fired",{"_index":983,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["first",{"_index":1006,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["fitness",{"_index":1546,"title":{},"body":{"license.html":{}}}],["flame",{"_index":1365,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["flash",{"_index":1389,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["float",{"_index":529,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["flug",{"_index":1349,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["folliwing",{"_index":550,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["following",{"_index":1145,"title":{},"body":{"components/ListMonsterPage.html":{},"license.html":{}}}],["form",{"_index":437,"title":{},"body":{"injectables/DbImageService.html":{}}}],["format",{"_index":720,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":898,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["formen",{"_index":845,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["forms",{"_index":801,"title":{},"body":{"components/DetailMonsterPage.html":{},"interfaces/Monster.html":{}}}],["formsmodule",{"_index":317,"title":{},"body":{"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}}}],["found",{"_index":398,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["free",{"_index":1507,"title":{},"body":{"license.html":{}}}],["from_typ_id",{"_index":674,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["fromids",{"_index":526,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["fromtypen",{"_index":225,"title":{},"body":{"components/CalcTypPage.html":{}}}],["full",{"_index":886,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["fullheaderservice",{"_index":882,"title":{"injectables/FullHeaderService.html":{}},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"coverage.html":{}}}],["function",{"_index":370,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Typ.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionalities",{"_index":487,"title":{},"body":{"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{}}}],["functionality",{"_index":885,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MinimalHeaderService.html":{},"index.html":{}}}],["functions",{"_index":1483,"title":{"miscellaneous/functions.html":{}},"body":{}}],["funktion",{"_index":472,"title":{},"body":{"injectables/DbImageService.html":{}}}],["funktionen",{"_index":1484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1529,"title":{},"body":{"license.html":{}}}],["g",{"_index":1220,"title":{},"body":{"injectables/MessageService.html":{}}}],["gather",{"_index":237,"title":{},"body":{"components/CalcTypPage.html":{}}}],["gathered",{"_index":619,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["gefunden",{"_index":639,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["gegenteilmonster",{"_index":794,"title":{},"body":{"components/DetailMonsterPage.html":{},"interfaces/Monster.html":{}}}],["gegeteilmonster",{"_index":875,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["geist",{"_index":1344,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["generic",{"_index":1289,"title":{},"body":{"components/PopoverPage.html":{}}}],["gestein",{"_index":1353,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["getalltypen",{"_index":493,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["getattacketypen",{"_index":494,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["getattacketypen(attid",{"_index":514,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["getdatabase",{"_index":332,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["getdatabasestate",{"_index":333,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["getefficiency",{"_index":495,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["getefficiency(fromids",{"_index":522,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["getimage",{"_index":430,"title":{},"body":{"injectables/DbImageService.html":{}}}],["getimage(imageid",{"_index":445,"title":{},"body":{"injectables/DbImageService.html":{}}}],["getimages",{"_index":431,"title":{},"body":{"injectables/DbImageService.html":{}}}],["getimages(monsterid",{"_index":451,"title":{},"body":{"injectables/DbImageService.html":{}}}],["getinitstate",{"_index":890,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["getmonstersbyids",{"_index":543,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["getmonstertypen",{"_index":496,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["getmonstertypen(monid",{"_index":530,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["getparagraphtext",{"_index":157,"title":{},"body":{"classes/AppPage.html":{}}}],["getroffen",{"_index":872,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["getting",{"_index":1485,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettyp",{"_index":497,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["gettyp(id",{"_index":534,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["gettypen",{"_index":498,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["gettypen(neededids",{"_index":541,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["gettypenbyids",{"_index":499,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["gettypenbyids(neededids",{"_index":546,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["gewicht",{"_index":859,"title":{},"body":{"components/DetailMonsterPage.html":{},"interfaces/Monster.html":{}}}],["gift",{"_index":1342,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["git",{"_index":1397,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["globe",{"_index":1391,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["gorenpnp",{"_index":1503,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1506,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1566,"title":{},"body":{"modules.html":{}}}],["groesse",{"_index":1267,"title":{},"body":{"interfaces/Monster.html":{}}}],["größe",{"_index":856,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["guard",{"_index":992,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["habitat",{"_index":866,"title":{},"body":{"components/DetailMonsterPage.html":{},"interfaces/Monster.html":{}}}],["hammer",{"_index":1393,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["handle",{"_index":245,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["handled",{"_index":1092,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["header",{"_index":247,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{},"miscellaneous/variables.html":{}}}],["header.service",{"_index":288,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["header.service.ts",{"_index":884,"title":{},"body":{"injectables/FullHeaderService.html":{},"injectables/MinimalHeaderService.html":{},"coverage.html":{}}}],["header.service.ts:100",{"_index":900,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["header.service.ts:13",{"_index":1243,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["header.service.ts:18",{"_index":914,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["header.service.ts:20",{"_index":1249,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["header.service.ts:21",{"_index":1250,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["header.service.ts:23",{"_index":893,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["header.service.ts:30",{"_index":1247,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["header.service.ts:49",{"_index":899,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["header.service.ts:57",{"_index":897,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["header.service.ts:72",{"_index":907,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["header_color",{"_index":942,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["header_expanded",{"_index":943,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["header_popover",{"_index":727,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/PopoverPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_popover_content.module",{"_index":728,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{}}}],["header_popover_not_calc",{"_index":285,"title":{},"body":{"components/CalcTypPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["header_popover_not_list",{"_index":1169,"title":{},"body":{"components/ListTypenPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["headerservice",{"_index":234,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["headerservice.alltypenformatted",{"_index":1019,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["health",{"_index":1281,"title":{},"body":{"interfaces/Monster.html":{}}}],["heart",{"_index":1359,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1275,"title":{},"body":{"interfaces/Monster.html":{}}}],["height:1000px",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["helper",{"_index":369,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/MessageService.html":{}}}],["here",{"_index":554,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["hereby",{"_index":1505,"title":{},"body":{"license.html":{}}}],["hier",{"_index":1101,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["higher",{"_index":1284,"title":{},"body":{"interfaces/Monster.html":{}}}],["hit",{"_index":721,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["hitting",{"_index":836,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["hnliche",{"_index":876,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["holders",{"_index":1550,"title":{},"body":{"license.html":{}}}],["holds",{"_index":713,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["hp",{"_index":862,"title":{},"body":{"components/DetailMonsterPage.html":{},"interfaces/Monster.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"injectables/DbImageService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["httpclientmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["hugetoast",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["hypothetical",{"_index":271,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{}}}],["i.e",{"_index":202,"title":{},"body":{"interfaces/Attacke.html":{}}}],["i[0",{"_index":1173,"title":{},"body":{"components/ListTypenPage.html":{}}}],["i[0].name",{"_index":1104,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["icon",{"_index":718,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["icon:string",{"_index":1001,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["icons",{"_index":711,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["id",{"_index":198,"title":{},"body":{"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":371,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"interfaces/Monster.html":{}}}],["image",{"_index":428,"title":{"interfaces/Image.html":{}},"body":{"injectables/DbImageService.html":{},"components/DetailMonsterPage.html":{},"interfaces/Image.html":{},"coverage.html":{}}}],["image.service",{"_index":823,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["image.service.ts",{"_index":426,"title":{},"body":{"injectables/DbImageService.html":{},"coverage.html":{}}}],["image.service.ts:26",{"_index":456,"title":{},"body":{"injectables/DbImageService.html":{}}}],["image.service.ts:30",{"_index":457,"title":{},"body":{"injectables/DbImageService.html":{}}}],["image.service.ts:34",{"_index":433,"title":{},"body":{"injectables/DbImageService.html":{}}}],["image.service.ts:63",{"_index":444,"title":{},"body":{"injectables/DbImageService.html":{}}}],["image.service.ts:73",{"_index":446,"title":{},"body":{"injectables/DbImageService.html":{}}}],["image.service.ts:91",{"_index":452,"title":{},"body":{"injectables/DbImageService.html":{}}}],["imageid",{"_index":448,"title":{},"body":{"injectables/DbImageService.html":{}}}],["images",{"_index":453,"title":{},"body":{"injectables/DbImageService.html":{},"index.html":{}}}],["imageschanged",{"_index":429,"title":{},"body":{"injectables/DbImageService.html":{}}}],["implements",{"_index":936,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["implied",{"_index":1542,"title":{},"body":{"license.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{}}}],["importe",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}}}],["included",{"_index":1535,"title":{},"body":{"license.html":{}}}],["including",{"_index":1518,"title":{},"body":{"license.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index+1",{"_index":1055,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["indexable",{"_index":922,"title":{},"body":{"interfaces/Image.html":{}}}],["indicates",{"_index":994,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["indicator",{"_index":915,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["indices",{"_index":1407,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["infinite",{"_index":966,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{}}}],["inform",{"_index":439,"title":{},"body":{"injectables/DbImageService.html":{}}}],["information",{"_index":244,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{}}}],["inidividual",{"_index":748,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["init",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"injectables/MessageService.html":{},"components/PopoverPage.html":{}}}],["initalize",{"_index":1017,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["initdb",{"_index":334,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["initialize",{"_index":293,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{}}}],["initializeapp",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["initializing",{"_index":521,"title":{},"body":{"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{}}}],["initiate",{"_index":592,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["initready",{"_index":888,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["inits",{"_index":325,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["inizialize",{"_index":975,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["injectable",{"_index":321,"title":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":323,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"overview.html":{}}}],["inprod",{"_index":1181,"title":{},"body":{"injectables/MessageService.html":{}}}],["input",{"_index":470,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["insekt",{"_index":1354,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["installed",{"_index":1488,"title":{},"body":{"index.html":{}}}],["instance",{"_index":518,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["instances",{"_index":372,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{}}}],["int",{"_index":528,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["interact",{"_index":1494,"title":{},"body":{"index.html":{}}}],["interface",{"_index":192,"title":{"interfaces/Attacke.html":{},"interfaces/Image.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{}},"body":{"interfaces/Attacke.html":{},"interfaces/Image.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interfaces",{"_index":194,"title":{},"body":{"interfaces/Attacke.html":{},"interfaces/Image.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{},"overview.html":{}}}],["interfaces/attacke",{"_index":724,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["interfaces/image",{"_index":463,"title":{},"body":{"injectables/DbImageService.html":{}}}],["interfaces/monster",{"_index":821,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["interfaces/typ",{"_index":284,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{}}}],["intialized",{"_index":383,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{}}}],["ion",{"_index":164,"title":{},"body":{"classes/AppPage.html":{}}}],["ionic",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}}}],["ionicmodule.forroot",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["ist",{"_index":1102,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["item",{"_index":670,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["item_list",{"_index":1164,"title":{},"body":{"components/ListTypenPage.html":{}}}],["jet",{"_index":1384,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["js",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(e",{"_index":415,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["json.stringify(err",{"_index":485,"title":{},"body":{"injectables/DbImageService.html":{}}}],["json.stringify(m",{"_index":1225,"title":{},"body":{"injectables/MessageService.html":{}}}],["json.stringify(this.database",{"_index":468,"title":{},"body":{"injectables/DbImageService.html":{}}}],["json.stringify(this.db",{"_index":578,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["k",{"_index":832,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["kein",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":928,"title":{},"body":{"interfaces/Image.html":{},"injectables/MessageService.html":{}}}],["kg",{"_index":861,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["kilograms",{"_index":1274,"title":{},"body":{"interfaces/Monster.html":{}}}],["kind",{"_index":1540,"title":{},"body":{"license.html":{}}}],["klasse",{"_index":1572,"title":{},"body":{"overview.html":{}}}],["klassen",{"_index":155,"title":{},"body":{"classes/AppPage.html":{}}}],["konstruktor",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["kopieren",{"_index":413,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["laden",{"_index":651,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["laser",{"_index":1355,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":622,"title":{},"body":{"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["lasttyp",{"_index":603,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["latest",{"_index":1011,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["latest_search",{"_index":1051,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["leaf",{"_index":1361,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":782,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/MessageService.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["lesen",{"_index":482,"title":{},"body":{"injectables/DbImageService.html":{}}}],["less",{"_index":679,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{}}}],["liability",{"_index":1554,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1551,"title":{},"body":{"license.html":{}}}],["license",{"_index":1499,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1519,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1543,"title":{},"body":{"license.html":{}}}],["link",{"_index":252,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"interfaces/Typ.html":{}}}],["links",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"miscellaneous/variables.html":{}}}],["list_items",{"_index":944,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["listattackenpage",{"_index":89,"title":{"components/ListAttackenPage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["listattackenpagemodule",{"_index":1105,"title":{"modules/ListAttackenPageModule.html":{}},"body":{"modules/ListAttackenPageModule.html":{},"modules.html":{},"overview.html":{}}}],["liste",{"_index":1304,"title":{},"body":{"components/PopoverPage.html":{},"miscellaneous/variables.html":{}}}],["listids",{"_index":335,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["listids(instances",{"_index":367,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["listmonsterpage",{"_index":92,"title":{"components/ListMonsterPage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["listmonsterpagemodule",{"_index":1158,"title":{"modules/ListMonsterPageModule.html":{}},"body":{"modules/ListMonsterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["lists",{"_index":294,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{}}}],["listtypenpage",{"_index":93,"title":{"components/ListTypenPage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["listtypenpagemodule",{"_index":1174,"title":{"modules/ListTypenPageModule.html":{}},"body":{"modules/ListTypenPageModule.html":{},"modules.html":{},"overview.html":{}}}],["load",{"_index":964,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["loadattacken",{"_index":951,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["loadattacken(event",{"_index":962,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["loadchildren",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageModule.html":{}}}],["loaded",{"_index":553,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["loading",{"_index":1003,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["loadingrangsort",{"_index":1111,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["loadmonsters",{"_index":1115,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["loadmonsters(event",{"_index":1119,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["location",{"_index":419,"title":{},"body":{"injectables/DatabaseService.html":{},"interfaces/Monster.html":{}}}],["lock",{"_index":959,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["locked",{"_index":1036,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["log2(factor",{"_index":682,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["logo",{"_index":1373,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["look",{"_index":549,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["looking",{"_index":1020,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["lookup",{"_index":659,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["m",{"_index":858,"title":{},"body":{"components/DetailMonsterPage.html":{},"injectables/MessageService.html":{}}}],["m.replace(/\\s+/g",{"_index":1226,"title":{},"body":{"injectables/MessageService.html":{}}}],["m.replace(delimiter[1",{"_index":1228,"title":{},"body":{"injectables/MessageService.html":{}}}],["magie",{"_index":1356,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":504,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["mapping",{"_index":1358,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["maps",{"_index":1405,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["margin",{"_index":1312,"title":{},"body":{"components/PopoverPage.html":{}}}],["matching",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.log(2",{"_index":687,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["math.round(factor",{"_index":678,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["math.round(math.log(factor",{"_index":686,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["max",{"_index":1280,"title":{},"body":{"interfaces/Monster.html":{}}}],["merchantability",{"_index":1545,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1522,"title":{},"body":{"license.html":{}}}],["message",{"_index":1193,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["message.service",{"_index":387,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["messages",{"_index":1180,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageservice",{"_index":338,"title":{"injectables/MessageService.html":{}},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["messagetype",{"_index":1199,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["met",{"_index":1279,"title":{},"body":{"interfaces/Monster.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["metall",{"_index":1345,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["meters",{"_index":1276,"title":{},"body":{"interfaces/Monster.html":{}}}],["methoden",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{}}}],["minheaderservice",{"_index":892,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["minimal",{"_index":896,"title":{},"body":{"injectables/FullHeaderService.html":{},"injectables/MinimalHeaderService.html":{}}}],["minimalheaderservice",{"_index":235,"title":{"injectables/MinimalHeaderService.html":{}},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{},"coverage.html":{}}}],["minimizes",{"_index":565,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["miscellaneous",{"_index":1478,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{}}],["mit",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"license.html":{}}}],["modal",{"_index":1258,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["modalcontroller",{"_index":461,"title":{},"body":{"injectables/DbImageService.html":{}}}],["modified",{"_index":912,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["modify",{"_index":1521,"title":{},"body":{"license.html":{}}}],["module",{"_index":106,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":995,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["mon_typen",{"_index":694,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["mon_typen_icons",{"_index":795,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monid",{"_index":533,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["monid}`]).then(data",{"_index":664,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["mons",{"_index":597,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["monster",{"_index":281,"title":{"interfaces/Monster.html":{}},"body":{"components/CalcTypPage.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Monster.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"coverage.html":{}}}],["monster's",{"_index":532,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailMonsterPage.html":{}}}],["monster'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["monster.beschreibung",{"_index":868,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.db",{"_index":375,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["monster.gewicht",{"_index":860,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.groesse",{"_index":857,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.habitat",{"_index":867,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.hp",{"_index":863,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.id",{"_index":853,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.module#detailmonsterpagemodule",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["monster.module#listmonsterpagemodule",{"_index":1330,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["monster.module.ts",{"_index":880,"title":{},"body":{"modules/DetailMonsterPageModule.html":{},"modules/ListMonsterPageModule.html":{}}}],["monster.name",{"_index":852,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page",{"_index":881,"title":{},"body":{"modules/DetailMonsterPageModule.html":{},"modules/ListMonsterPageModule.html":{}}}],["monster.page.html",{"_index":790,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{}}}],["monster.page.scss",{"_index":789,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{}}}],["monster.page.ts",{"_index":788,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{},"coverage.html":{}}}],["monster.page.ts:114",{"_index":1122,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:134",{"_index":1118,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:189",{"_index":799,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page.ts:201",{"_index":1123,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:212",{"_index":1125,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:221",{"_index":1124,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:23",{"_index":1133,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:230",{"_index":1127,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:244",{"_index":1126,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:259",{"_index":1121,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:271",{"_index":1120,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:28",{"_index":1135,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:29",{"_index":817,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page.ts:33",{"_index":816,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page.ts:34",{"_index":1132,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:38",{"_index":805,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{}}}],["monster.page.ts:42",{"_index":1130,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:43",{"_index":815,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page.ts:46",{"_index":1128,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:48",{"_index":806,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page.ts:52",{"_index":819,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{}}}],["monster.page.ts:56",{"_index":818,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{}}}],["monster.page.ts:61",{"_index":1143,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:62",{"_index":808,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page.ts:65",{"_index":1142,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:67",{"_index":814,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page.ts:69",{"_index":1140,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:72",{"_index":798,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.page.ts:73",{"_index":1141,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:80",{"_index":1139,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:84",{"_index":1136,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.page.ts:88",{"_index":1117,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["monster.rang",{"_index":855,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.schadensverhinderung",{"_index":865,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["monster.service",{"_index":725,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{}}}],["monster.service.ts",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["monster/:id",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["monster/detail",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"coverage.html":{}}}],["monster/list",{"_index":1110,"title":{},"body":{"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"modules/TabsPageModule.html":{},"coverage.html":{}}}],["monster_attacke_typen",{"_index":667,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["monster_id",{"_index":663,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["monster_monster_typen",{"_index":662,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["monster_typ",{"_index":582,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["monster_typ_efficiency",{"_index":673,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["monsterid",{"_index":455,"title":{},"body":{"injectables/DbImageService.html":{}}}],["monsters",{"_index":573,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Typ.html":{}}}],["monsters[i",{"_index":1149,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["moon",{"_index":1371,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":965,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["mstrings",{"_index":1221,"title":{},"body":{"injectables/MessageService.html":{}}}],["mstrings.join",{"_index":1232,"title":{},"body":{"injectables/MessageService.html":{}}}],["mstrings.push(m",{"_index":1230,"title":{},"body":{"injectables/MessageService.html":{}}}],["mushroom",{"_index":341,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{}}}],["mushroomid",{"_index":477,"title":{},"body":{"injectables/DbImageService.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"interfaces/Typ.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name:string",{"_index":1167,"title":{},"body":{"components/ListTypenPage.html":{}}}],["names",{"_index":719,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["native/core",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["native/file",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["native/file/ngx",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/DbImageService.html":{}}}],["native/ionic",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/DbImageService.html":{},"dependencies.html":{}}}],["native/splash",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/sqlite",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"dependencies.html":{}}}],["native/sqlite/ngx",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["native/status",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["navigate",{"_index":1245,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["navigateto",{"_index":158,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":982,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/TabsPage.html":{}}}],["navparams",{"_index":1294,"title":{},"body":{"components/PopoverPage.html":{}}}],["needed",{"_index":254,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["neededids",{"_index":544,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["neededids[neededids.length",{"_index":635,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["negative",{"_index":683,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["nein",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":378,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"coverage.html":{}}}],["newly",{"_index":552,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["next",{"_index":1004,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["next_list",{"_index":1077,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["next_list.push(event.detail.value",{"_index":1078,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["nextsortbyrang",{"_index":1116,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["ngmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}}}],["ngoninit",{"_index":952,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["nicht",{"_index":412,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["nichts",{"_index":1103,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["noeffectagainst",{"_index":695,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["noeffectids",{"_index":755,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["none",{"_index":306,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{}}}],["noninfringement",{"_index":1548,"title":{},"body":{"license.html":{}}}],["normal",{"_index":680,"title":{},"body":{"injectables/DbTypenService.html":{},"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["normaleffektiv",{"_index":300,"title":{},"body":{"components/CalcTypPage.html":{}}}],["note",{"_index":201,"title":{},"body":{"interfaces/Attacke.html":{},"interfaces/Monster.html":{}}}],["notes",{"_index":1487,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":1042,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MinimalHeaderService.html":{},"components/TabsPage.html":{}}}],["notice",{"_index":1533,"title":{},"body":{"license.html":{}}}],["notify",{"_index":363,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{}}}],["nuclear",{"_index":1378,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":374,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{}}}],["num",{"_index":581,"title":{},"body":{"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["num_typen",{"_index":490,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["number",{"_index":205,"title":{},"body":{"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{}}}],["number|string",{"_index":932,"title":{},"body":{"interfaces/Image.html":{}}}],["object",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(delimiters",{"_index":1227,"title":{},"body":{"injectables/MessageService.html":{}}}],["object.keys(delimiters",{"_index":1217,"title":{},"body":{"injectables/MessageService.html":{}}}],["object.keys(strtotyp)[typinstance.typ",{"_index":1411,"title":{},"body":{"interfaces/Typ.html":{}}}],["observable",{"_index":362,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["observetyp",{"_index":500,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["obtaining",{"_index":1510,"title":{},"body":{"license.html":{}}}],["oder",{"_index":1099,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["offset",{"_index":945,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["onchangesearch",{"_index":953,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["onchangesearch(event",{"_index":976,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["one",{"_index":207,"title":{},"body":{"interfaces/Attacke.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{}}}],["ones",{"_index":575,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["oninit",{"_index":937,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["open",{"_index":251,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["opened",{"_index":564,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["operation",{"_index":1256,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["operator",{"_index":1008,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["operatortypenisor",{"_index":946,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"miscellaneous/functions.html":{}}}],["optionalparams",{"_index":1190,"title":{},"body":{"injectables/MessageService.html":{}}}],["or/and",{"_index":987,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["origin",{"_index":266,"title":{},"body":{"components/CalcTypPage.html":{}}}],["otherwise",{"_index":1064,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"license.html":{}}}],["out",{"_index":1053,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"license.html":{}}}],["output",{"_index":263,"title":{},"body":{"components/CalcTypPage.html":{}}}],["overview",{"_index":1568,"title":{"overview.html":{}},"body":{}}],["ovservable",{"_index":561,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["owntypes",{"_index":741,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["package",{"_index":1448,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1314,"title":{},"body":{"components/PopoverPage.html":{}}}],["paenthesis",{"_index":625,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["page",{"_index":217,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":709,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"miscellaneous/variables.html":{}}}],["pages/calc",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/detail",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/list",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/popover/popover.module",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/popover/popover.page",{"_index":1251,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["pages/tabs/tabs.module#tabspagemodule",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pairs",{"_index":1172,"title":{},"body":{"components/ListTypenPage.html":{}}}],["param",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{}}}],["parameter",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"miscellaneous/functions.html":{}}}],["parasit",{"_index":1347,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["parseint(this.aroute.snapshot.parammap.get('id",{"_index":733,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["part",{"_index":240,"title":{},"body":{"components/CalcTypPage.html":{}}}],["particular",{"_index":1244,"title":{},"body":{"injectables/MinimalHeaderService.html":{},"components/TabsPage.html":{},"license.html":{}}}],["party",{"_index":275,"title":{},"body":{"components/CalcTypPage.html":{}}}],["passendes",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"injectables/DbImageService.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":1504,"title":{},"body":{"license.html":{}}}],["permit",{"_index":924,"title":{},"body":{"interfaces/Image.html":{},"license.html":{}}}],["person",{"_index":1509,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1528,"title":{},"body":{"license.html":{}}}],["pflanze",{"_index":1338,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pie",{"_index":1380,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["place",{"_index":642,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["platform",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{}}}],["plt",{"_index":344,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["plugin",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["plugins",{"_index":1489,"title":{},"body":{"index.html":{}}}],["point",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/TabsPage.html":{}}}],["popover",{"_index":246,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"miscellaneous/variables.html":{}}}],["popover'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["popover.onwilldismiss().then((res",{"_index":1260,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["popover.page",{"_index":1318,"title":{},"body":{"modules/PopoverPageModule.html":{}}}],["popover.page.html",{"_index":1292,"title":{},"body":{"components/PopoverPage.html":{}}}],["popover.page.scss",{"_index":1291,"title":{},"body":{"components/PopoverPage.html":{}}}],["popover.present",{"_index":1265,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["popovercontroller",{"_index":1240,"title":{},"body":{"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{}}}],["popoverpage",{"_index":95,"title":{"components/PopoverPage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["popoverpagemodule",{"_index":119,"title":{"modules/PopoverPageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PopoverPageModule.html":{},"modules.html":{},"overview.html":{}}}],["portions",{"_index":1537,"title":{},"body":{"license.html":{}}}],["potential",{"_index":1074,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["predecessor",{"_index":830,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["predecessors",{"_index":811,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["predmonster",{"_index":813,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["preloadallmodules",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prematurely",{"_index":631,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["prepopulated",{"_index":1492,"title":{},"body":{"index.html":{}}}],["prepopulatedtypes",{"_index":609,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["prepopulatedtypes.concat(types).sort(function(a",{"_index":648,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["prepopulatedtypes.push(temptype",{"_index":618,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["present",{"_index":1296,"title":{},"body":{"components/PopoverPage.html":{}}}],["presentpopover",{"_index":230,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["presentpopover(ev",{"_index":248,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["presenttoast",{"_index":1183,"title":{},"body":{"injectables/MessageService.html":{}}}],["presenttoast(type",{"_index":1198,"title":{},"body":{"injectables/MessageService.html":{}}}],["prevent",{"_index":1052,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["primary",{"_index":1131,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["private",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"components/PopoverPage.html":{}}}],["prod",{"_index":1203,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":356,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{}}}],["promise.all(allpromises).then(ret",{"_index":749,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["properly",{"_index":382,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{}}}],["properties",{"_index":197,"title":{},"body":{"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{}}}],["protractor",{"_index":161,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1538,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":388,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{}}}],["providers",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["provides",{"_index":326,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/MinimalHeaderService.html":{}}}],["psycho",{"_index":1357,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":536,"title":{},"body":{"injectables/DbTypenService.html":{},"injectables/MinimalHeaderService.html":{}}}],["publish",{"_index":1523,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1547,"title":{},"body":{"license.html":{}}}],["query",{"_index":510,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["query.slice(0",{"_index":626,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["radius",{"_index":780,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["rang",{"_index":854,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Monster.html":{}}}],["rangsortindex",{"_index":1112,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["rangsorting",{"_index":1113,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["rangsorting[rangsortindex",{"_index":1157,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["rank",{"_index":1282,"title":{},"body":{"interfaces/Monster.html":{}}}],["rdy",{"_index":291,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["reachable",{"_index":349,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["reaction",{"_index":751,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["read",{"_index":548,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["readable",{"_index":436,"title":{},"body":{"injectables/DbImageService.html":{},"interfaces/Image.html":{}}}],["readonly",{"_index":931,"title":{},"body":{"interfaces/Image.html":{}}}],["ready",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/DatabaseService.html":{}}}],["rechner",{"_index":310,"title":{},"body":{"components/CalcTypPage.html":{},"miscellaneous/variables.html":{}}}],["recieve",{"_index":243,"title":{},"body":{"components/CalcTypPage.html":{}}}],["redirectto",{"_index":1329,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["regexp(`\\s*${key}\\s",{"_index":1219,"title":{},"body":{"injectables/MessageService.html":{}}}],["related",{"_index":800,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["render",{"_index":730,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["rendering",{"_index":1000,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["replace",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["represent",{"_index":1334,"title":{},"body":{"interfaces/Typ.html":{}}}],["representation",{"_index":921,"title":{},"body":{"interfaces/Image.html":{}}}],["representing",{"_index":1333,"title":{},"body":{"interfaces/Typ.html":{}}}],["represents",{"_index":567,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["require",{"_index":1445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":545,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["res[\"data\"][\"path",{"_index":1263,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["reset",{"_index":351,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["resistant",{"_index":820,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["resistence",{"_index":1287,"title":{},"body":{"interfaces/Monster.html":{}}}],["reslocation",{"_index":474,"title":{},"body":{"injectables/DbImageService.html":{},"interfaces/Image.html":{}}}],["resolve",{"_index":1204,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["resolve(this.db_typ.getefficiency([i",{"_index":838,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["resolve(this.db_typ.getefficiency(owntypes",{"_index":745,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["resolves",{"_index":747,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["rest",{"_index":630,"title":{},"body":{"injectables/DbTypenService.html":{},"index.html":{}}}],["restriction",{"_index":1517,"title":{},"body":{"license.html":{}}}],["result",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":1066,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["ret[i",{"_index":757,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["retrieve",{"_index":434,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailMonsterPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["retrieving",{"_index":539,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["return",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{}}}],["returned",{"_index":1248,"title":{},"body":{"injectables/MinimalHeaderService.html":{},"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["returnlist",{"_index":647,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1404,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":779,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/MessageService.html":{}}}],["rights",{"_index":1520,"title":{},"body":{"license.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{}}}],["root'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["round",{"_index":1075,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["route",{"_index":705,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["router",{"_index":1241,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["routereusestrategy",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}}}],["routermodule.forchild(routes",{"_index":320,"title":{},"body":{"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{}}}],["routermodule.forroot(routes",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":170,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":384,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"dependencies.html":{}}}],["same",{"_index":206,"title":{},"body":{"interfaces/Attacke.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{}}}],["save",{"_index":340,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["schaden",{"_index":199,"title":{},"body":{"interfaces/Attacke.html":{},"components/DetailAttackePage.html":{}}}],["schadensverhinderung",{"_index":864,"title":{},"body":{"components/DetailMonsterPage.html":{},"interfaces/Monster.html":{}}}],["schließen",{"_index":1235,"title":{},"body":{"injectables/MessageService.html":{}}}],["schwach",{"_index":772,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["schwebe",{"_index":1350,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["screen",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["screen/ngx",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["scroll",{"_index":967,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["search",{"_index":887,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["searched",{"_index":540,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["searches",{"_index":961,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["searching",{"_index":925,"title":{},"body":{"interfaces/Image.html":{}}}],["searchtypen",{"_index":905,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["searchword",{"_index":947,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["secondary",{"_index":996,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["section.topic",{"_index":1309,"title":{},"body":{"components/PopoverPage.html":{}}}],["sehr",{"_index":302,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["select",{"_index":509,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["selected",{"_index":910,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["sell",{"_index":1526,"title":{},"body":{"license.html":{}}}],["send",{"_index":1299,"title":{},"body":{"components/PopoverPage.html":{}}}],["service",{"_index":242,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{}}}],["services/db",{"_index":282,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["session",{"_index":1070,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["set",{"_index":274,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["setfromtypen",{"_index":226,"title":{},"body":{"components/CalcTypPage.html":{}}}],["setting",{"_index":908,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["settings",{"_index":1376,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["settotypen",{"_index":227,"title":{},"body":{"components/CalcTypPage.html":{}}}],["setup",{"_index":729,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["shall",{"_index":1534,"title":{},"body":{"license.html":{}}}],["shape=\"round",{"_index":1095,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["show",{"_index":803,"title":{},"body":{"components/DetailMonsterPage.html":{},"injectables/MessageService.html":{}}}],["showclosebutton",{"_index":1233,"title":{},"body":{"injectables/MessageService.html":{}}}],["showing",{"_index":973,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["shown",{"_index":1194,"title":{},"body":{"injectables/MessageService.html":{}}}],["shrink",{"_index":1311,"title":{},"body":{"components/PopoverPage.html":{}}}],["side",{"_index":203,"title":{},"body":{"interfaces/Attacke.html":{},"components/CalcTypPage.html":{}}}],["signal",{"_index":569,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["similar",{"_index":1268,"title":{},"body":{"interfaces/Monster.html":{},"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["single",{"_index":746,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["size=\"small",{"_index":1096,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["snapchat",{"_index":1374,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["snow",{"_index":1367,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["software",{"_index":1511,"title":{},"body":{"license.html":{}}}],["sole",{"_index":641,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["sometime",{"_index":563,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["soow",{"_index":1134,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["sort",{"_index":645,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListMonsterPage.html":{}}}],["sorting",{"_index":210,"title":{},"body":{"interfaces/Attacke.html":{},"components/ListMonsterPage.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"modules/PopoverPageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"interfaces/Typ.html":{}}}],["sources",{"_index":1497,"title":{},"body":{"index.html":{}}}],["space",{"_index":1215,"title":{},"body":{"injectables/MessageService.html":{}}}],["spec\\.ts",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":739,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["species",{"_index":1278,"title":{},"body":{"interfaces/Monster.html":{}}}],["specific",{"_index":264,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbImageService.html":{}}}],["speedometer",{"_index":1382,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":972,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["splash",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["splashscreen",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["sqlite",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"dependencies.html":{},"index.html":{}}}],["sqlitedbcopy",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatabaseService.html":{}}}],["sqliteobject",{"_index":359,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["src/.../environment.prod.ts",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../header_popover_content.module.ts",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.service.ts",{"_index":1481,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typ.ts",{"_index":1482,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/header_popover_content.module",{"_index":286,"title":{},"body":{"components/CalcTypPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["src/app/header_popover_content.module.ts",{"_index":1420,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/interfaces/attacke.ts",{"_index":195,"title":{},"body":{"interfaces/Attacke.html":{},"coverage.html":{}}}],["src/app/interfaces/image",{"_index":822,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["src/app/interfaces/image.ts",{"_index":920,"title":{},"body":{"interfaces/Image.html":{},"coverage.html":{}}}],["src/app/interfaces/image.ts:4",{"_index":923,"title":{},"body":{"interfaces/Image.html":{}}}],["src/app/interfaces/monster.ts",{"_index":1266,"title":{},"body":{"interfaces/Monster.html":{},"coverage.html":{}}}],["src/app/interfaces/typ",{"_index":726,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListTypenPage.html":{}}}],["src/app/interfaces/typ.ts",{"_index":1332,"title":{},"body":{"interfaces/Typ.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/calc",{"_index":215,"title":{},"body":{"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"coverage.html":{}}}],["src/app/pages/detail",{"_index":688,"title":{},"body":{"components/DetailAttackePage.html":{},"modules/DetailAttackePageModule.html":{},"components/DetailMonsterPage.html":{},"modules/DetailMonsterPageModule.html":{},"coverage.html":{}}}],["src/app/pages/list",{"_index":933,"title":{},"body":{"components/ListAttackenPage.html":{},"modules/ListAttackenPageModule.html":{},"components/ListMonsterPage.html":{},"modules/ListMonsterPageModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"coverage.html":{}}}],["src/app/pages/popover/popover.module.ts",{"_index":1317,"title":{},"body":{"modules/PopoverPageModule.html":{}}}],["src/app/pages/popover/popover.page.ts",{"_index":1288,"title":{},"body":{"components/PopoverPage.html":{},"coverage.html":{}}}],["src/app/pages/popover/popover.page.ts:25",{"_index":1295,"title":{},"body":{"components/PopoverPage.html":{}}}],["src/app/pages/popover/popover.page.ts:42",{"_index":1298,"title":{},"body":{"components/PopoverPage.html":{}}}],["src/app/pages/tabs/tabs.module.ts",{"_index":1326,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/pages/tabs/tabs.page.ts",{"_index":1319,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/pages/tabs/tabs.page.ts:11",{"_index":1322,"title":{},"body":{"components/TabsPage.html":{}}}],["src/app/services/database.service.ts",{"_index":324,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/app/services/database.service.ts:109",{"_index":354,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:120",{"_index":368,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:22",{"_index":376,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:26",{"_index":380,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:30",{"_index":339,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:61",{"_index":360,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:69",{"_index":357,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/database.service.ts:77",{"_index":366,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/app/services/db",{"_index":425,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListTypenPage.html":{},"coverage.html":{}}}],["src/app/services/full",{"_index":883,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"coverage.html":{}}}],["src/app/services/message.service.ts",{"_index":1179,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/message.service.ts:26",{"_index":1187,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:42",{"_index":1202,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:56",{"_index":1191,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:70",{"_index":1197,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/message.service.ts:84",{"_index":1200,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/services/minimal",{"_index":287,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MinimalHeaderService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1441,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1442,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":824,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["started",{"_index":1486,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":361,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{}}}],["statements",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["statusbar",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["sth",{"_index":399,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["stop",{"_index":971,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["storage",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["store",{"_index":752,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/MinimalHeaderService.html":{}}}],["stored",{"_index":606,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["stores",{"_index":562,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["string",{"_index":200,"title":{},"body":{"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string_of_enum",{"_index":1168,"title":{},"body":{"components/ListTypenPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["string_of_enum(typinstance",{"_index":1410,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["strings",{"_index":802,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["stronger",{"_index":1286,"title":{},"body":{"interfaces/Monster.html":{}}}],["strtotyp",{"_index":576,"title":{},"body":{"injectables/DbTypenService.html":{},"interfaces/Typ.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1493,"title":{},"body":{"index.html":{}}}],["style",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["styling",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":1530,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1525,"title":{},"body":{"license.html":{}}}],["subscription",{"_index":1030,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["substantial",{"_index":1536,"title":{},"body":{"license.html":{}}}],["success",{"_index":1184,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["success(message",{"_index":1201,"title":{},"body":{"injectables/MessageService.html":{}}}],["successes",{"_index":441,"title":{},"body":{"injectables/DbImageService.html":{}}}],["svg",{"_index":1564,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1270,"title":{},"body":{"interfaces/Monster.html":{}}}],["synchronize",{"_index":960,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["system",{"_index":347,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["t.id",{"_index":743,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["table",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{}}}],["tabs.page",{"_index":1327,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabs.page.html",{"_index":1321,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":1320,"title":{},"body":{"components/TabsPage.html":{}}}],["tabspage",{"_index":97,"title":{"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"coverage.html":{},"overview.html":{}}}],["tabspagemodule",{"_index":1323,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["target",{"_index":970,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["templates",{"_index":438,"title":{},"body":{"injectables/DbImageService.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["temptype",{"_index":612,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["temptype.id",{"_index":616,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["text",{"_index":279,"title":{},"body":{"components/CalcTypPage.html":{},"components/ListMonsterPage.html":{}}}],["text_output",{"_index":228,"title":{},"body":{"components/CalcTypPage.html":{}}}],["th",{"_index":1283,"title":{},"body":{"interfaces/Monster.html":{}}}],["then((db",{"_index":420,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["then(data",{"_index":583,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["things",{"_index":427,"title":{},"body":{"injectables/DbImageService.html":{}}}],["this.aehnlicheformen.push([mons[i",{"_index":848,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.alltypen",{"_index":916,"title":{},"body":{"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.alltypen.asobservable",{"_index":596,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.alltypen.getvalue",{"_index":605,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.alltypen.getvalue().slice",{"_index":611,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.alltypes",{"_index":615,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.att_typen.push([atts[i",{"_index":851,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.att_typen_icons",{"_index":738,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.attacke",{"_index":731,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.attacke.typen.map(t",{"_index":742,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.database",{"_index":396,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{}}}],["this.databaseservice.getdatabase",{"_index":465,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["this.databaseservice.getdatabasestate().subscribe(rdy",{"_index":464,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["this.databaseservice.listids(types",{"_index":640,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.datatotyp(data",{"_index":629,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.db",{"_index":577,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.db.defaultattacke",{"_index":732,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.db.defaultmonster",{"_index":827,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db.executesql(\"select",{"_index":579,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.db.executesql(`select",{"_index":660,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.db.executesql(query",{"_index":627,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.db.findbytype(typ_latest",{"_index":1072,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.db.findbyword(word_latest",{"_index":1071,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.db.getallsortedbyrang(this.rangsortindex).then(_",{"_index":1155,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["this.db.getalltypen().then(typen",{"_index":1170,"title":{},"body":{"components/ListTypenPage.html":{}}}],["this.db.getattacke(id).then(att",{"_index":735,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.db.getattacken(this.offset).then(_",{"_index":1026,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["this.db.getdatabasestate().subscribe(rdy",{"_index":734,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["this.db.getevolution(id).then(ev",{"_index":831,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db.getmonster(id).then(data",{"_index":828,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db.getmonsters(this.offset).then(_",{"_index":1147,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["this.db.getmonstersbylist(this.monster.aehnlicheformen).then(mons",{"_index":847,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db.getmonstersbylist(this.monster.gegenteilmonster).then(mons",{"_index":842,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db.limit",{"_index":1028,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.db.num_attacken",{"_index":1090,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["this.db.num_monster",{"_index":1156,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["this.db.observeattacke().subscribe(atts",{"_index":1031,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["this.db.observemonster().subscribe(monsters",{"_index":1148,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["this.db.typicons(this.attacke.id).then(icons",{"_index":737,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.db.typicons(this.monster.id).then(icons",{"_index":839,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db_att.getattackenbylist(this.monster.attacken).then(atts",{"_index":850,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db_att.getdatabasestate().subscribe(rdy",{"_index":849,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db_img.getimage(this.monster.id).then(image",{"_index":834,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.db_mon.getdatabasestate().subscribe(rdy",{"_index":763,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.db_mon.getmonstersbyattacke(this.attacke.id).then(mons",{"_index":765,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.db_typ.gettypen(noeffectids).then(typs",{"_index":761,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["this.db_typ.gettypen(weakids).then(typs",{"_index":759,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["this.db_typen.getalltypen().then(typen",{"_index":292,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/FullHeaderService.html":{}}}],["this.db_typen.getdatabasestate().subscribe(rdy",{"_index":290,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/FullHeaderService.html":{}}}],["this.dbcopy.copy(this.dbname",{"_index":401,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.dbcopy.remove(this.dbname",{"_index":422,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.dbname",{"_index":418,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.dbready",{"_index":365,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{}}}],["this.dbready.asobservable",{"_index":395,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["this.dbready.next(true",{"_index":421,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{}}}],["this.defaulttyp",{"_index":656,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.deletedb().then(_",{"_index":393,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.effectiveagainst",{"_index":758,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["this.evolution[k].push([ev[k][i",{"_index":833,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.filter_locked.asobservable().subscribe(_",{"_index":1024,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.filter_locked.getvalue",{"_index":1037,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.filter_locked.next(false",{"_index":1076,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.filter_locked.next(true",{"_index":1045,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.filter_on",{"_index":1067,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.findattacken",{"_index":1022,"title":{},"body":{"components/ListAttackenPage.html":{}}}],["this.findmonsters",{"_index":1146,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["this.gegenteilmonster.push([mons[i",{"_index":843,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.getimage(monsterid).then(image",{"_index":478,"title":{},"body":{"injectables/DbImageService.html":{}}}],["this.gettypenbyids([id]).then(typs",{"_index":654,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.gettypenbyids(neededids",{"_index":658,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.header_expanded",{"_index":1080,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.header_popover",{"_index":1305,"title":{},"body":{"components/PopoverPage.html":{}}}],["this.headerservice.getinitstate().subscribe(rdy",{"_index":1018,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.headerservice.presentpopover(ev",{"_index":308,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.headerservice.toggletypset(id",{"_index":1081,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.image",{"_index":835,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.initdb",{"_index":394,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.initializeapp",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initready.asobservable",{"_index":918,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["this.initready.next(true",{"_index":917,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["this.inprod",{"_index":1208,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.list_items",{"_index":1033,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.list_items[i",{"_index":1034,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.loadingrangsort",{"_index":1154,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["this.messageservice.alert(\"nicht",{"_index":637,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.messageservice.error(\"die",{"_index":466,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{}}}],["this.messageservice.error(\"fehlerhafter",{"_index":469,"title":{},"body":{"injectables/DbImageService.html":{}}}],["this.messageservice.error(\"konnte",{"_index":409,"title":{},"body":{"injectables/DatabaseService.html":{},"injectables/DbTypenService.html":{}}}],["this.messageservice.error(\"problem",{"_index":480,"title":{},"body":{"injectables/DbImageService.html":{}}}],["this.minheaderservice.presentpopover(ev",{"_index":919,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["this.mon_typen.push([mons[i",{"_index":766,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["this.mon_typen_icons",{"_index":840,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.monster",{"_index":826,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.monster.aehnlicheformen.length",{"_index":846,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.monster.gegenteilmonster.length",{"_index":841,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.monster.typen.map(t",{"_index":837,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["this.mushrooms",{"_index":343,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.navparams.get('data",{"_index":1306,"title":{},"body":{"components/PopoverPage.html":{}}}],["this.noeffectagainst",{"_index":762,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["this.num_typen",{"_index":588,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.offset",{"_index":1027,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.offset+1",{"_index":1089,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.operatortypenisor",{"_index":1073,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.platform.ready().then",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["this.plt.ready().then",{"_index":416,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.popovercontroller.create",{"_index":1253,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["this.popovercontroller.dismiss",{"_index":1307,"title":{},"body":{"components/PopoverPage.html":{}}}],["this.presenttoast(messagetype.alert",{"_index":1211,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.presenttoast(messagetype.error",{"_index":1212,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.presenttoast(messagetype.success",{"_index":1210,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.rangsortindex",{"_index":1151,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["this.rangsortindex+1",{"_index":1152,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["this.router.navigatebyurl(path",{"_index":1264,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["this.searchtypen",{"_index":1082,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.searchtypen.length",{"_index":1087,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.splashscreen.hide",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sqlite.create",{"_index":417,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.statusbar.styledefault",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["this.text_output",{"_index":297,"title":{},"body":{"components/CalcTypPage.html":{}}}],["this.toastctrl.create",{"_index":1231,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.typ_search_buffer.asobservable().subscribe(_",{"_index":1023,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.typ_search_buffer.getvalue",{"_index":1041,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.typ_search_buffer.next",{"_index":1061,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.typ_search_buffer.next(typ_search",{"_index":1086,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.typ_search_buffer.next(typ_search_items.slice(index+1",{"_index":1062,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.typen",{"_index":558,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.updatetypen(types",{"_index":644,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["this.weakagainst",{"_index":760,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["this.word_search_buffer.asobservable().subscribe(_",{"_index":1021,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.word_search_buffer.getvalue",{"_index":1039,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.word_search_buffer.next",{"_index":1056,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.word_search_buffer.next(next_list",{"_index":1079,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["this.word_search_buffer.next(word_search_items.slice(index+1",{"_index":1057,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["thorugh",{"_index":1093,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["though",{"_index":632,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["three",{"_index":750,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["through",{"_index":560,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["throughout",{"_index":1336,"title":{},"body":{"interfaces/Typ.html":{}}}],["thrown",{"_index":968,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["time",{"_index":1144,"title":{},"body":{"components/ListMonsterPage.html":{}}}],["title",{"_index":1303,"title":{},"body":{"components/PopoverPage.html":{},"miscellaneous/variables.html":{}}}],["toast",{"_index":1192,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["toast.present",{"_index":1239,"title":{},"body":{"injectables/MessageService.html":{}}}],["toastcontroller",{"_index":1186,"title":{},"body":{"injectables/MessageService.html":{}}}],["toastctrl",{"_index":1188,"title":{},"body":{"injectables/MessageService.html":{}}}],["toggle",{"_index":260,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["toggle_expand_header",{"_index":954,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["toggled",{"_index":989,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["toggleoperator",{"_index":955,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["toggleset",{"_index":231,"title":{},"body":{"components/CalcTypPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["toggleset(id",{"_index":256,"title":{},"body":{"components/CalcTypPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["toggletypset",{"_index":891,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["toggletypset(id",{"_index":904,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["toids",{"_index":523,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["top",{"_index":778,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["topic",{"_index":776,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/PopoverPage.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1558,"title":{},"body":{"license.html":{}}}],["total",{"_index":571,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["totypen",{"_index":229,"title":{},"body":{"components/CalcTypPage.html":{}}}],["translucent",{"_index":1254,"title":{},"body":{"injectables/MinimalHeaderService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["trifft",{"_index":773,"title":{},"body":{"components/DetailAttackePage.html":{}}}],["true",{"_index":265,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"components/PopoverPage.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["typ",{"_index":186,"title":{"interfaces/Typ.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"interfaces/Monster.html":{},"interfaces/Typ.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typ'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["typ.module#calctyppagemodule",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["typ.module.ts",{"_index":314,"title":{},"body":{"modules/CalcTypPageModule.html":{}}}],["typ.page",{"_index":319,"title":{},"body":{"modules/CalcTypPageModule.html":{}}}],["typ.page.html",{"_index":224,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ.page.scss",{"_index":223,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ.page.ts",{"_index":216,"title":{},"body":{"components/CalcTypPage.html":{},"coverage.html":{}}}],["typ.page.ts:118",{"_index":250,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ.page.ts:21",{"_index":270,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ.page.ts:25",{"_index":280,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ.page.ts:30",{"_index":273,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ.page.ts:34",{"_index":276,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ.page.ts:39",{"_index":236,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ.page.ts:71",{"_index":258,"title":{},"body":{"components/CalcTypPage.html":{}}}],["typ/calc",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CalcTypPage.html":{},"modules/CalcTypPageModule.html":{},"coverage.html":{}}}],["typ_id",{"_index":661,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typ_latest",{"_index":1058,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typ_latest.length",{"_index":1069,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typ_search",{"_index":1084,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typ_search.push(this.searchtypen",{"_index":1085,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typ_search_buffer",{"_index":948,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typ_search_items",{"_index":1040,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typ_search_items.length",{"_index":1044,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typ_search_items[index",{"_index":1060,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typ_search_new",{"_index":1059,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["typclass",{"_index":671,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"injectables/MinimalHeaderService.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["typen",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Attacke.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListTypenPage.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"miscellaneous/variables.html":{}}}],["typen'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["typen.module#listtypenpagemodule",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["typen.module.ts",{"_index":1177,"title":{},"body":{"modules/ListTypenPageModule.html":{}}}],["typen.page",{"_index":1178,"title":{},"body":{"modules/ListTypenPageModule.html":{}}}],["typen.page.html",{"_index":1163,"title":{},"body":{"components/ListTypenPage.html":{}}}],["typen.page.scss",{"_index":1162,"title":{},"body":{"components/ListTypenPage.html":{}}}],["typen.page.ts",{"_index":1161,"title":{},"body":{"components/ListTypenPage.html":{},"coverage.html":{}}}],["typen.page.ts:23",{"_index":1165,"title":{},"body":{"components/ListTypenPage.html":{}}}],["typen.page.ts:51",{"_index":1166,"title":{},"body":{"components/ListTypenPage.html":{}}}],["typen.service",{"_index":283,"title":{},"body":{"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListTypenPage.html":{}}}],["typen.service.ts",{"_index":486,"title":{},"body":{"injectables/DbTypenService.html":{},"coverage.html":{}}}],["typen.service.ts:103",{"_index":556,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:116",{"_index":513,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:132",{"_index":547,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:196",{"_index":535,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:21",{"_index":566,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:211",{"_index":542,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:220",{"_index":531,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:242",{"_index":515,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:25",{"_index":568,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:264",{"_index":507,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:282",{"_index":511,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:294",{"_index":524,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:30",{"_index":570,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:35",{"_index":503,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:87",{"_index":519,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen.service.ts:95",{"_index":551,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typen/list",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ListTypenPage.html":{},"modules/ListTypenPageModule.html":{},"coverage.html":{}}}],["typenservice",{"_index":593,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typenum",{"_index":1337,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{}}}],["typenum.boden",{"_index":1392,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.chemie",{"_index":1379,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.eis",{"_index":1368,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.elektro",{"_index":1390,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.feuer",{"_index":1366,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.finsternis",{"_index":1372,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.flug",{"_index":1385,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.geist",{"_index":1375,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.gestein",{"_index":1394,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.gift",{"_index":1370,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.insekt",{"_index":1396,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.laser",{"_index":1399,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.magie",{"_index":1401,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.metall",{"_index":1377,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.normal",{"_index":1360,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.parasit",{"_index":1381,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.pflanze",{"_index":1362,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.psycho",{"_index":1403,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.schwebe",{"_index":1388,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.unsichtbar",{"_index":1383,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typenum.wasser",{"_index":1364,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1224,"title":{},"body":{"injectables/MessageService.html":{}}}],["types",{"_index":214,"title":{},"body":{"interfaces/Attacke.html":{},"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["types.length",{"_index":636,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typical",{"_index":1277,"title":{},"body":{"interfaces/Monster.html":{}}}],["typids",{"_index":666,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typinstance",{"_index":1409,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/functions.html":{}}}],["typs",{"_index":222,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{}}}],["typs.length",{"_index":655,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["typs[0",{"_index":657,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["und",{"_index":1100,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["uniform",{"_index":1335,"title":{},"body":{"interfaces/Typ.html":{}}}],["unique",{"_index":927,"title":{},"body":{"interfaces/Image.html":{}}}],["unloaded",{"_index":574,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["unsichtbar",{"_index":1348,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["unterstützt",{"_index":1563,"title":{},"body":{"modules.html":{}}}],["until",{"_index":346,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["up",{"_index":348,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["update",{"_index":643,"title":{},"body":{"injectables/DbTypenService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["updates",{"_index":262,"title":{},"body":{"components/CalcTypPage.html":{}}}],["updatetypen",{"_index":501,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["updatetypen(typs",{"_index":555,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["use",{"_index":602,"title":{},"body":{"injectables/DbTypenService.html":{},"license.html":{}}}],["useclass",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":208,"title":{},"body":{"interfaces/Attacke.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"interfaces/Typ.html":{}}}],["user",{"_index":440,"title":{},"body":{"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"injectables/MessageService.html":{}}}],["using",{"_index":901,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["utf",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["valid",{"_index":473,"title":{},"body":{"injectables/DbImageService.html":{}}}],["validate",{"_index":476,"title":{},"body":{"injectables/DbImageService.html":{},"dependencies.html":{}}}],["value",{"_index":269,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DatabaseService.html":{},"injectables/DbImageService.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"injectables/FullHeaderService.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"interfaces/Monster.html":{},"components/PopoverPage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":608,"title":{},"body":{"injectables/DbTypenService.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"injectables/MessageService.html":{}}}],["values).then(async",{"_index":628,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["values.length",{"_index":620,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["values.push(`${neededids[i",{"_index":617,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["var",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"components/PopoverPage.html":{},"components/TabsPage.html":{}}}],["variable",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["variablen",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variables",{"_index":1575,"title":{"miscellaneous/variables.html":{}},"body":{}}],["verfügbar",{"_index":1567,"title":{},"body":{"modules.html":{}}}],["vergrößern",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["verkleinern",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["verschiedenes",{"_index":1480,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["very",{"_index":715,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["via",{"_index":926,"title":{},"body":{"interfaces/Image.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["view",{"_index":804,"title":{},"body":{"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{},"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{},"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{},"components/ListTypenPage.html":{},"injectables/MessageService.html":{},"components/PopoverPage.html":{}}}],["wait",{"_index":345,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["wand",{"_index":1400,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["warning",{"_index":1206,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":1544,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1539,"title":{},"body":{"license.html":{}}}],["wasser",{"_index":1339,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["water",{"_index":1363,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["weak",{"_index":807,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["weakagainst",{"_index":696,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["weakids",{"_index":754,"title":{},"body":{"components/DetailAttackePage.html":{},"components/DetailMonsterPage.html":{}}}],["webview",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/DbImageService.html":{},"dependencies.html":{},"index.html":{}}}],["webview/ngx",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/DbImageService.html":{}}}],["weight",{"_index":1272,"title":{},"body":{"interfaces/Monster.html":{}}}],["werte",{"_index":277,"title":{},"body":{"components/CalcTypPage.html":{}}}],["whether",{"_index":1555,"title":{},"body":{"license.html":{}}}],["whitespace",{"_index":1214,"title":{},"body":{"injectables/MessageService.html":{}}}],["widerstandsfähig",{"_index":870,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["willdelete",{"_index":389,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["wird",{"_index":871,"title":{},"body":{"components/DetailMonsterPage.html":{}}}],["wirkungslos",{"_index":298,"title":{},"body":{"components/CalcTypPage.html":{},"injectables/DbTypenService.html":{}}}],["without",{"_index":1516,"title":{},"body":{"license.html":{}}}],["word",{"_index":980,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["word_latest",{"_index":1046,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["word_latest.length",{"_index":1068,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["word_search_buffer",{"_index":949,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["word_search_items",{"_index":1038,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["word_search_items.length",{"_index":1043,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["word_search_items[index",{"_index":1048,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["word_search_new",{"_index":1047,"title":{},"body":{"components/ListAttackenPage.html":{},"components/ListMonsterPage.html":{}}}],["work",{"_index":653,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["working",{"_index":1387,"title":{},"body":{"interfaces/Typ.html":{},"miscellaneous/variables.html":{}}}],["wrapper",{"_index":537,"title":{},"body":{"injectables/DbTypenService.html":{}}}],["write",{"_index":1171,"title":{},"body":{"components/ListTypenPage.html":{}}}],["www",{"_index":352,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["x",{"_index":305,"title":{},"body":{"components/CalcTypPage.html":{}}}],["y/n",{"_index":911,"title":{},"body":{"injectables/FullHeaderService.html":{}}}],["zone.js",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["zurücksetzen",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/CalcTypPageModule.html":{},"modules/DetailAttackePageModule.html":{},"modules/DetailMonsterPageModule.html":{},"modules/ListAttackenPageModule.html":{},"modules/ListMonsterPageModule.html":{},"modules/ListTypenPageModule.html":{},"modules/PopoverPageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/app.component.ts\n\n\n    \n        Beschreibung\n    \n    \n        entry point for the entire app\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                    \n                \n                        \n                            \n                                Definiert in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            init app\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                determine when it is ready\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                the splash screen\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                to style it in black\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n                    replace splash screen with status bar styling\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n/**\n * entry point for the entire app\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n\n\t/**\n\t * init app\n\t * @param platform     determine when it is ready\n\t * @param splashScreen the splash screen\n\t * @param statusBar    to style it in black\n\t */\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n\t/**\n\t * replace splash screen with status bar styling\n\t * @return void\n\t */\n  initializeApp(): void {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                .hugeToast {--height:1000px}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPopoverPageModule\n\nPopoverPageModule\n\nAppModule -->\n\nPopoverPageModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Importe\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            PopoverPageModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }  from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { SqliteDbCopy } from '@ionic-native/sqlite-db-copy/ngx';\nimport { SQLite } from \"@ionic-native/sqlite/ngx\";\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from \"@ionic-native/ionic-webview/ngx\";\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PopoverPageModule } from './pages/popover/popover.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n\t\tBrowserModule,\n\t\tIonicModule.forRoot(),\n\t\tAppRoutingModule,\n\t\tHttpClientModule,\n\t\tPopoverPageModule\n\t],\n  providers: [\n    StatusBar,\n    SplashScreen,\n\t\tSqliteDbCopy,\n\t\tSQLite,\n\t\tFile,\n\t\tWebView,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Klassen\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Definiert in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Definiert in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n\t{ path: '', loadChildren: './pages/tabs/tabs.module#TabsPageModule' },\n\t{ path: 'detail-monster/:id', loadChildren: './pages/detail-monster/detail-monster.module#DetailMonsterPageModule' },\n\t{ path: 'detail-attacke/:id', loadChildren: './pages/detail-attacke/detail-attacke.module#DetailAttackePageModule' },\n\t{ path: 'list-typen', loadChildren: './pages/list-typen/list-typen.module#ListTypenPageModule' },\n  { path: 'calc-typ', loadChildren: './pages/calc-typ/calc-typ.module#CalcTypPageModule' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"interfaces/Attacke.html":{"url":"interfaces/Attacke.html","title":"interface - Attacke","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Attacke\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/interfaces/attacke.ts\n        \n\n            \n                Beschreibung\n            \n            \n                an interface for attacken\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        beschreibung\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        schaden\n                                \n                                \n                                        typen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        beschreibung\n                                    \n                                \n                                \n                                    \n                                        beschreibung:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    note on i.e. side effects\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id, same as the one in db, used for default sorting an fetching\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of the attacke\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schaden\n                                    \n                                \n                                \n                                    \n                                        schaden:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    damage dealed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typen\n                                    \n                                \n                                \n                                    \n                                        typen:         Typ[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Typ[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    list of all types\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Typ } from './typ';\n\n/**\n * an interface for attacken\n */\nexport interface Attacke {\n\t/**\n\t * id, same as the one in db, used for default sorting an fetching\n\t */\n\tid: number,\n\t/**\n\t * name of the attacke\n\t */\n\tname: string,\n\t/**\n\t * damage dealed\n\t */\n\tschaden: string,\n\t/**\n\t * note on i.e. side effects\n\t */\n\tbeschreibung: string,\n\t/**\n\t * list of all types\n\t */\n\ttypen: Typ[]\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"components/CalcTypPage.html":{"url":"components/CalcTypPage.html","title":"component - CalcTypPage","body":"\n                   \n\n\n\n\n\n  Components\n  CalcTypPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/pages/calc-typ/calc-typ.page.ts\n\n\n    \n        Beschreibung\n    \n    \n        page to calculate the effectiveness of every arbitrary combination of typs\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calc-typ\n            \n\n            \n                styleUrls\n                ./calc-typ.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./calc-typ.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fromTypen\n                            \n                            \n                                setFromTypen\n                            \n                            \n                                setToTypen\n                            \n                            \n                                text_output\n                            \n                            \n                                toTypen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                presentPopover\n                            \n                            \n                                toggleSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor(db_typen: DbTypenService, headerService: MinimalHeaderService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/pages/calc-typ/calc-typ.page.ts:39\n                            \n                        \n\n                \n                    \n                            gather all typs for attacking and attacked part\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        db_typen\n                                                  \n                                                        \n                                                                        DbTypenService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                DB service to recieve typ information\n\n                                                        \n                                                \n                                                \n                                                        headerService\n                                                  \n                                                        \n                                                                        MinimalHeaderService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                handle information-popover in header\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            presentPopover\n                        \n                        \n                    \n                \n            \n            \n                \npresentPopover(ev: Event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/calc-typ/calc-typ.page.ts:118\n                \n            \n\n\n            \n                \n                    open popover with link to typ list (in header)\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event to the popover, needed for controller\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSet\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSet(id: number, from: boolean)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/calc-typ/calc-typ.page.ts:71\n                \n            \n\n\n            \n                \n                    called on toggle of any typ button, updates output information on effectiveness\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        id of the specific type\n\n                                    \n                                \n                                \n                                    from\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        true if origin is from (attacking side), false if origin is to (atacked side)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/calc-typ/calc-typ.page.ts:21\n                            \n                        \n\n                \n                    \n                        list if all typs of a hypothetical attack\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFromTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/calc-typ/calc-typ.page.ts:30\n                            \n                        \n\n                \n                    \n                        all typs set of attacking party\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setToTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/calc-typ/calc-typ.page.ts:34\n                            \n                        \n\n                \n                    \n                        all types set of attacked party\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text_output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Werte fehlen.\"\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/calc-typ/calc-typ.page.ts:39\n                            \n                        \n\n                \n                    \n                        some text as output on effectiveness\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/calc-typ/calc-typ.page.ts:25\n                            \n                        \n\n                \n                    \n                        list of all typs of a hypothetical monster\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { DbTypenService } from \"../../services/db-typen.service\";\nimport { Typ } from '../../interfaces/typ';\nimport { header_popover_not_calc } from 'src/app/header_popover_content.module';\nimport { MinimalHeaderService } from 'src/app/services/minimal-header.service';\n\n/**\n * page to calculate the effectiveness of every arbitrary combination of typs\n */\n@Component({\n  selector: 'app-calc-typ',\n  templateUrl: './calc-typ.page.html',\n  styleUrls: ['./calc-typ.page.scss'],\n})\nexport class CalcTypPage {\n\n\t/**\n\t * list if all typs of a hypothetical attack\n\t */\n\tfromTypen = [];\n\t/**\n\t * list of all typs of a hypothetical monster\n\t */\n\ttoTypen = [];\n\n\t/**\n\t * all typs set of attacking party\n\t */\n\tsetFromTypen: number[] = [];\n\t/**\n\t * all types set of attacked party\n\t */\n\tsetToTypen: number[] = [];\n\n\t/**\n\t * some text as output on effectiveness\n\t */\n\ttext_output: string = \"Werte fehlen.\";\n\n\t/**\n\t * gather all typs for attacking and attacked part\n\t * @param db_typen      DB service to recieve typ information\n\t * @param headerService handle information-popover in header\n\t */\n  constructor(private db_typen: DbTypenService,\n\t\t\t\t\t\t\tprivate headerService: MinimalHeaderService) {\n\n\t\tthis.db_typen.getDatabaseState().subscribe(rdy => {\n\t\t\tif (rdy) {\n\t\t\t\tthis.db_typen.getAllTypen().then(typen => {\n\n\t\t\t\t\t// initialize typ lists\n\t\t\t\t\tlet typ: Typ;\n\t\t\t\t\tfor (let i = 0; i  {\n\n\t\t\t\tif (eff === 0) {this.text_output = \"wirkungslos\"; return;}\n\n\t\t\t\tif (eff === 1) {this.text_output = \"normaleffektiv\"; return;}\n\n\t\t\t\tif (eff  2\n\t\t\t\tthis.text_output = \"sehr effektiv. \" + eff.toString() + \" x\";\n\t\t\t});\n\n\t\t// if none in from and/or to is not set\n\t\t} else {\n\t\t\tthis.text_output = \"Werte fehlen.\";\n\t\t}\n\t}\n\n\t/**\n\t * open popover with link to typ list (in header)\n\t * @param  ev event to the popover, needed for controller\n\t * @return    void\n\t */\n\tpresentPopover(ev: Event): void {\n\t\t\tthis.headerService.presentPopover(ev, header_popover_not_calc);\n\t}\n}\n\n    \n\n    \n        \n  \n\t\t\n\t\t \t\n\t\t \n\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n    Effektivitäts-Rechner\n  \n\n\n\n\t\n\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\n\n\t\t\n\t\t\t\n\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t\n\t\t\n\n\t\t{{ text_output }}\n\t\n\n\n    \n\n    \n                \n                    ./calc-typ.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t\t\t\t \t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t    Effektivitäts-Rechner  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ text_output }}\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalcTypPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/CalcTypPageModule.html":{"url":"modules/CalcTypPageModule.html","title":"module - CalcTypPageModule","body":"\n                   \n\n\n\n\n    Modules\n    CalcTypPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalcTypPageModule\n\n\n\ncluster_CalcTypPageModule_declarations\n\n\n\n\nCalcTypPage\n\nCalcTypPage\n\n\n\nCalcTypPageModule\n\nCalcTypPageModule\n\nCalcTypPageModule -->\n\nCalcTypPage->CalcTypPageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/pages/calc-typ/calc-typ.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalcTypPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CalcTypPage } from './calc-typ.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CalcTypPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CalcTypPage]\n})\nexport class CalcTypPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/services/database.service.ts\n        \n\n            \n                Beschreibung\n            \n            \n                inits the sqlite db and provides it\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                            \n                                    Private\n                                dbName\n                            \n                            \n                                    Private\n                                dbReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteDB\n                            \n                            \n                                getDatabase\n                            \n                            \n                                getDatabaseState\n                            \n                            \n                                    Private\n                                    Async\n                                initDB\n                            \n                            \n                                listIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Konstruktor\n        \n            \n                \n                    \nconstructor(plt: Platform, sqlite: SQLite, dbCopy: SqliteDbCopy, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/services/database.service.ts:30\n                            \n                        \n\n                \n                    \n                            open database and save all mushroom entries in this.mushrooms\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        plt\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                \nwait until it is ready, so db in file system is set up and reachable\n\n\n                                                        \n                                                \n                                                \n                                                        sqlite\n                                                  \n                                                        \n                                                                    SQLite\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                \ncreate or open db in file system\n\n\n                                                        \n                                                \n                                                \n                                                        dbCopy\n                                                  \n                                                        \n                                                                    SqliteDbCopy\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                \nreset db to one in www/ directory\n\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            deleteDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteDB()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/database.service.ts:109\n                \n            \n\n\n            \n                \n                    delete db\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDatabase\n                        \n                        \n                    \n                \n            \n            \n                \ngetDatabase()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/database.service.ts:69\n                \n            \n\n\n            \n                \n                    get the actual database\n\n\n                    \n                    \n                    \n                        Returns :     SQLiteObject\n\n                    \n                    \n                        \nthe database\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDatabaseState\n                        \n                        \n                    \n                \n            \n            \n                \ngetDatabaseState()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/database.service.ts:61\n                \n            \n\n\n            \n                \n                    get database state as observable, so notify on change\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of this.dbReady\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            initDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initDB()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/database.service.ts:77\n                \n            \n\n\n            \n                \n                    init and open db, set dbReady to true\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listIds\n                        \n                        \n                    \n                \n            \n            \n                \nlistIds(instances: any[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/database.service.ts:120\n                \n            \n\n\n            \n                \n                    helper function, get a list of ids\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    instances\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \nlist of instances with id field\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        number[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SQLiteObject\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/database.service.ts:30\n                            \n                        \n\n                \n                    \n                        actual sqlite db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dbName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"monster.db\"\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/database.service.ts:22\n                            \n                        \n\n                \n                    \n                        db name in file system\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dbReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/database.service.ts:26\n                            \n                        \n\n                \n                    \n                        changes to true if this service is properly intialized\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n\nimport { SqliteDbCopy } from '@ionic-native/sqlite-db-copy/ngx';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { MessageService } from './message.service';\n\n/**\n * inits the sqlite db and provides it\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n\t/**\n\t * db name in file system\n\t */\n\tprivate dbName = \"monster.db\";\n\t/**\n\t * changes to true if this service is properly intialized\n\t */\n\tprivate dbReady: BehaviorSubject = new BehaviorSubject(false);\n\t/**\n\t * actual sqlite db\n\t */\n\tprivate database: SQLiteObject = null;\n\n\t/**\n\t * open database and save all mushroom entries in this.mushrooms\n\t * @constructor\n\t * @param {Platform} plt\t\t\t\t- wait until it is ready, so db in file system is set up and reachable\n\t * @param {SQLite} sqlite\t\t\t\t- create or open db in file system\n\t * @param {SqliteDbCopy} dbCopy - reset db to one in www/ directory\n\t */\n\tconstructor(private plt: Platform,\n\t\t\t\t\t\t\tprivate sqlite: SQLite,\n\t\t\t\t\t\t\tprivate dbCopy: SqliteDbCopy,\n\t\t\t\t\t\t\tprivate messageService: MessageService) {\n\n\t\tlet willDelete = !environment.production;\n\n\t\t// delete and copy db on debug\n\t\tif (willDelete) {\n\t\t\t// will delete db\n\t\t\tthis.deleteDB().then(_ => {\n\t\t\t\tthis.initDB();\n\t\t\t});\n\t\t} else {\n\t\t\tthis.initDB();\n\t\t}\n\t}\n\n\t/**\n\t * get database state as observable, so notify on change\n\t * @return {Observable} observable of this.dbReady\n\t */\n\tgetDatabaseState(): Observable {\n\t\treturn this.dbReady.asObservable();\n\t}\n\n\t/**\n\t * get the actual database\n\t * @return {SQLiteObject} - the database\n\t */\n\tgetDatabase(): SQLiteObject {\n\t\treturn this.database;\n\t}\n\n\t/**\n\t * init and open db, set dbReady to true\n\t * @return {Promise}\n\t */\n\tprivate async initDB(): Promise {\n\n\t\t// copy even if none to delete found or sth.\n\t\tawait this.dbCopy.copy(this.dbName, 0).then(_ => {\n\t\t\t// db is copied\n\t\t}).catch((e) => {\n\t\t\tif (e.code ===  516) {\n\t\t\t\t// db already exists, did not copy\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.messageService.error(\"Konnte die Datenbank nicht kopieren\", \"ERROR: could not copy db: \", JSON.stringify(e));\n\t\t});\n\n\t\t// (create and) open db in file system\n\t\tthis.plt.ready().then(() => {\n\t\t\tthis.sqlite.create({\n\t\t\t\tname: this.dbName,\n\t\t\t\tlocation: 'default'\n\t\t\t})\n\t\t\t\t.then((db: SQLiteObject) => {\n\t\t\t\t\tthis.database = db;\n\t\t\t\t\tthis.dbReady.next(true);\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * delete db\n\t * @private\n\t * @async\n\t * @return {Promise}\n\t */\n\tprivate async deleteDB(): Promise {\n\t\tthis.dbCopy.remove(this.dbName, 0).then(_ => {\n\t\t\t// db is deleted\n\t\t});\n\t}\n\n\t/**\n\t * helper function, get a list of ids\n\t * @param  instances - list of instances with id field\n\t * @return number[]\n\t */\n\tlistIds(instances: any[]): number[] {\n\t\t// handle null\n\t\tif (instances === null) {return null;}\n\n\t\tlet ids: number[] = [];\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"injectables/DbImageService.html":{"url":"injectables/DbImageService.html","title":"injectable - DbImageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DbImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/services/db-image.service.ts\n        \n\n            \n                Beschreibung\n            \n            \n                service for all things image entries\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                            \n                                    Private\n                                dbReady\n                            \n                            \n                                    Private\n                                imagesChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                getDatabaseState\n                            \n                            \n                                    Async\n                                getImage\n                            \n                            \n                                    Async\n                                getImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Konstruktor\n        \n            \n                \n                    \nconstructor(file: File, webview: WebView, databaseService: DatabaseService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/services/db-image.service.ts:34\n                            \n                        \n\n                \n                    \n                            retrieve db and set this.dbReady to true\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                  \n                                                        \n                                                                    File\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                -\n\n                                                        \n                                                \n                                                \n                                                        webview\n                                                  \n                                                        \n                                                                    WebView\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                \nto convert the path to an image in a readable form for html-templates\n\n\n                                                        \n                                                \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                \nto get the actual db\n\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                \nto inform the user about successes, alerts, errors\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDatabaseState\n                        \n                        \n                    \n                \n            \n            \n                \ngetDatabaseState()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-image.service.ts:63\n                \n            \n\n\n            \n                \n                    get database state as observable, so notify on change\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable of this.dbReady\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImage(imageId: number)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-image.service.ts:73\n                \n            \n\n\n            \n                \n                    get the image belonging to the @param {number} imageId\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    imageId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \nthe id to find according image entry\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \nthe image found or null\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getImages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImages(monsterId: number)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-image.service.ts:91\n                \n            \n\n\n            \n                \n                    get all images to a specific monster (there is exactly one)\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    monsterId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \nthe id of a monster to find images for\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nthe images found\n\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SQLiteObject\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/db-image.service.ts:26\n                            \n                        \n\n                \n                    \n                        actual sqlite db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dbReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/db-image.service.ts:30\n                            \n                        \n\n                \n                    \n                        changes to true if this service is properly intialized\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            imagesChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/db-image.service.ts:34\n                            \n                        \n\n                \n                    \n                        to notify when images changed\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActionSheetController, ModalController } from '@ionic/angular';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { WebView } from \"@ionic-native/ionic-webview/ngx\";\n\nimport { DatabaseService } from './database.service';\nimport { MessageService } from \"./message.service\";\n\nimport { Image } from \"../interfaces/image\";\n\n/**\n * service for all things image entries\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbImageService {\n\n\t/**\n\t * actual sqlite db\n\t */\n\tprivate database: SQLiteObject = null;\n\t/**\n\t * changes to true if this service is properly intialized\n\t */\n\tprivate dbReady: BehaviorSubject = new BehaviorSubject(false);\n\t/**\n\t * to notify when images changed\n\t */\n\tprivate imagesChanged: BehaviorSubject = new BehaviorSubject(null);\n\n\t/**\n\t * retrieve db and set this.dbReady to true\n\t * @param {File} file\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-\n\t * @param {WebView} webview     \t\t\t\t\t\t\t\t\t\t\t\t- to convert the path to an image in a readable form for html-templates\n\t * @param {DatabaseService} databaseService\t\t\t\t\t\t\t- to get the actual db\n\t * @param {MessageService} messageService\t\t\t\t\t\t\t\t- to inform the user about successes, alerts, errors\n\t */\n\tconstructor(private file: File,\n\t\t\t\t\t\t\tprivate webview: WebView,\n\t\t\t\t\t\t\tprivate databaseService: DatabaseService,\n\t\t\t\t\t\t\tprivate messageService: MessageService) {\n\n\t\tthis.databaseService.getDatabaseState().subscribe(rdy => {\n      if (rdy) {\n      \tthis.database = this.databaseService.getDatabase();\n\t\t\t\tif (!this.database) {\n\t\t\t\t\tthis.messageService.error(\"Die Datenbank fehlt\", \"in INIT IMAGE DB: got no db: \", JSON.stringify(this.database));\n\t\t\t\t}\n\t\t\t\tthis.dbReady.next(true);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * get database state as observable, so notify on change\n\t * @return {Observable} observable of this.dbReady\n\t */\n\tgetDatabaseState(): Observable {\n\t\treturn this.dbReady.asObservable();\n\t}\n\n\t/**\n\t * get the image belonging to the @param {number} imageId\n\t * @async\n\t * @param {number} imageId - the id to find according image entry\n\t * @return {Promise} - the image found or null\n\t */\n\tasync getImage(imageId: number): Promise {\n\n\t\tif (!imageId) {\n\t\t\tthis.messageService.error(\"Fehlerhafter Input einer Funktion\", \"in GET IMAGE: image id not valid: \", imageId);\n\t\t\treturn null;\n\t\t}\n\n\t\t// set resLocation\n\t\treturn {id: imageId, resLocation: `assets/monster_images/${imageId}.png`};\n\t}\n\n\n\t/**\n\t * get all images to a specific monster (there is exactly one)\n\t * @async\n\t * @param {number} monsterId\t\t- the id of a monster to find images for\n\t * @return {Promise}\t- the images found\n\t */\n\tasync getImages(monsterId: number): Promise {\n\n\t\t// validate mushroomId\n\t\tif (!monsterId) {\n\t\t\tthis.messageService.error(\"Fehlerhafter Input einer Funktion\", \"in GET IMAGES FROM: mushroom id not valid: \", monsterId);\n\t\t\treturn null;\n\t\t}\n\n\t\t// get the one image\n\t\treturn this.getImage(monsterId).then(image => {\n\t\t\treturn image? image : null;\n\n\t\t}).catch(err => {\n\t\t\tthis.messageService.error(\"Problem beim Lesen eines Bildes\", \"in  GET IMAGES -> GET IMAGE: \", JSON.stringify(err));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"injectables/DbTypenService.html":{"url":"injectables/DbTypenService.html","title":"injectable - DbTypenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DbTypenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/services/db-typen.service.ts\n        \n\n            \n                Beschreibung\n            \n            \n                service for all functionalities concerning typs\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allTypen\n                            \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                dbReady\n                            \n                            \n                                NUM_TYPEN\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                dataToTyp\n                            \n                            \n                                defaultTyp\n                            \n                            \n                                    Async\n                                getAllTypen\n                            \n                            \n                                    Async\n                                getAttackeTypen\n                            \n                            \n                                getDatabaseState\n                            \n                            \n                                    Async\n                                getEfficiency\n                            \n                            \n                                    Async\n                                getMonsterTypen\n                            \n                            \n                                    Async\n                                getTyp\n                            \n                            \n                                    Async\n                                getTypen\n                            \n                            \n                                    Private\n                                    Async\n                                getTypenByIds\n                            \n                            \n                                observeTyp\n                            \n                            \n                                    Private\n                                updateTypen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Konstruktor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/services/db-typen.service.ts:35\n                            \n                        \n\n                \n                    \n                            init db service\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                main db service to retrieve the db\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                to communicate to the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dataToTyp\n                        \n                        \n                    \n                \n            \n            \n                \ndataToTyp(data)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:264\n                \n            \n\n\n            \n                \n                    convert db data result from select query with typs to list of typ instances\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        db data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Typ[]\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            defaultTyp\n                        \n                        \n                    \n                \n            \n            \n                \ndefaultTyp()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:282\n                \n            \n\n\n            \n                \n                    get dummy typ\n\n\n                    \n                    \n                    \n                        Returns :         Typ\n\n                    \n                    \n                        Typ\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTypen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTypen()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:116\n                \n            \n\n\n            \n                \n                    returns a list of all typs\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAttackeTypen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAttackeTypen(attId: number)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:242\n                \n            \n\n\n            \n                \n                    get typen to an attack's id\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    attId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        id of an attack instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDatabaseState\n                        \n                        \n                    \n                \n            \n            \n                \ngetDatabaseState()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:87\n                \n            \n\n\n            \n                \n                    communicate if this service is done initializing\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEfficiency\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEfficiency(fromIds: number[], toIds: number[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:294\n                \n            \n\n\n            \n                \n                    get efficiency of hypothetical attack with typs of fromIds to hypothetical monster with typs of toIds\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    fromIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        [description]\n\n                                    \n                                \n                                \n                                    toIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        [description]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise (INT, not FLOAT; 0 ^= wirkungslos, >1 ^= sehr effektiv, \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMonsterTypen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMonsterTypen(monId: number)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:220\n                \n            \n\n\n            \n                \n                    get typen to a monster's id\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    monId\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        id of a monster\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTyp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTyp(id: number)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:196\n                \n            \n\n\n            \n                \n                    public wrapper around getTypenByIds() for retrieving one typ\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        id of the searched typ\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypen(neededIds: number[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:211\n                \n            \n\n\n            \n                \n                    public wrapper around getMonstersByIds()\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    neededIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        needed ids of required typs\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTypenByIds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypenByIds(neededIds: number[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:132\n                \n            \n\n\n            \n                \n                    only function to read Typ entries from the db\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    neededIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \nlook for Typen with folliwing IDs\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \nthe Typen found\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            observeTyp\n                        \n                        \n                    \n                \n            \n            \n                \nobserveTyp()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:95\n                \n            \n\n\n            \n                \n                    get all newly loaded typs from here\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateTypen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTypen(typs: Typ[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/db-typen.service.ts:103\n                \n            \n\n\n            \n                \n                    add input list of typs to this.typen, access changes through ovservable\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typs\n                                    \n                                                Typ[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            allTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/db-typen.service.ts:35\n                            \n                        \n\n                \n                    \n                        stores all typ instances loaded sometime while the app is opened.\nminimizes database access\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SQLiteObject\n\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/db-typen.service.ts:21\n                            \n                        \n\n                \n                    \n                        represents the actual database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dbReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/db-typen.service.ts:25\n                            \n                        \n\n                \n                    \n                        signal if this service is done initializing\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NUM_TYPEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/db-typen.service.ts:30\n                            \n                        \n\n                \n                    \n                        total amount of all monsters (also unloaded ones)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { DatabaseService } from \"./database.service\";\nimport { MessageService } from \"./message.service\"\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { SQLiteObject } from '@ionic-native/sqlite/ngx';\n\nimport { Typ, StrToTyp } from \"../interfaces/typ\";\n\n/**\n * service for all functionalities concerning typs\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbTypenService {\n\n\t/**\n\t * represents the actual database\n\t */\n\tprivate db: SQLiteObject;\n\t/**\n\t * signal if this service is done initializing\n\t */\n\tprivate dbReady: BehaviorSubject = new BehaviorSubject(false);\n\n\t/**\n\t * total amount of all monsters (also unloaded ones)\n\t */\n\tNUM_TYPEN: number = 0;\n\t/**\n\t * stores all typ instances loaded sometime while the app is opened.\n\t * minimizes database access\n\t */\n\tprivate allTypen = new BehaviorSubject([]);\n\n\t/**\n\t * init db service\n\t * @param databaseService main db service to retrieve the db\n\t * @param messageService  to communicate to the user\n\t */\n  constructor(private databaseService: DatabaseService,\n\t\t\t\t\t\t\tprivate messageService: MessageService) {\n\n\t\tthis.databaseService.getDatabaseState().subscribe(rdy => {\n\t\t\tif (rdy) {\n\t\t\t\t// get db from DatabaseService\n\t\t\t\tthis.db = this.databaseService.getDatabase();\n\t\t\t\tif (!this.db) {\n\t\t\t\t\tthis.messageService.error(\"Die Datenbank fehlt\", \"in INIT TYPEN DB: got no db: \", JSON.stringify(this.db));\n\t\t\t\t}\n\n\t\t\t\t// get NUM_Typen\n\t\t\t\tthis.db.executeSql(\"SELECT COUNT(*) AS num FROM monster_typ\", []).then(data => {\n\t\t\t\t\tif (!data || !data.rows.length) {\n\t\t\t\t\t\tthis.messageService.error(\"Konnte Anzahl der Typen nicht ermitteln\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.NUM_TYPEN = data.rows.item(0).num;\n\n\t\t\t\t\t// init allTypen\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tlet emptyList = []\n\t\t\t\t\twhile (i++  {\n\t\t\t\t\tthis.messageService.error(\"Konnte Typen nicht finden\", \"Could not initiate TypenService.\", err);\n\t\t\t\t\tthis.NUM_TYPEN = 21;\n\n\t\t\t\t\t// init allTypen\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tlet emptyList = []\n\t\t\t\t\twhile (i++ \n\t */\n\tgetDatabaseState(): Observable {\n\t\treturn this.dbReady.asObservable();\n\t}\n\n\t/**\n\t * get all newly loaded typs from here\n\t * @return Observable\n\t */\n\tobserveTyp(): Observable {\n\t\treturn this.allTypen.asObservable();\n\t}\n\n\t/**\n\t * add input list of typs to this.typen, access changes through ovservable\n\t * @param mons - contains all Typen to be added\n\t */\n\tprivate updateTypen(typs: Typ[]): void {\n\t\t// filter is not active, use allTypen and lastTyp\n\t\tlet allTyps: Typ[] = this.allTypen.getValue();\n\t\tfor (let i = 0; i \n\t */\n\tasync getAllTypen(): Promise {\n\n\t\t// get all typen by id so they are stored in allTypen\n\t\tlet ids: number[] = [];\n\t\tfor (let i = 1; i  {\n\t\t// build query and values\n\t\tlet query = `SELECT * FROM monster_typ WHERE id IN (`;\n\t\tlet values = [];\n\n\t\tlet prepopulatedTypes: Typ[] = [];\n\n\t\tlet allTypes = this.allTypen.getValue().slice();\n\n\t\tlet tempType;\n\t\tfor (let i = 0; i  this.NUM_TYPEN) {continue;}\n\n\t\t\ttempType = allTypes[neededIds[i]-1];\n\n\t\t\t// if no information about Typ in this.allTypes, add to query\n\t\t\tif (tempType === null || tempType.id === 0) {\n\t\t\t\tquery += \"?,\";\n\t\t\t\tvalues.push(`${neededIds[i]}`);\n\t\t\t} else {\n\t\t\t\tprepopulatedTypes.push(tempType);\n\t\t\t}\n\t\t}\n\n\t\t// if all information already gathered, return it\n\t\tif (values.length === 0) {return prepopulatedTypes;}\n\n\t\t// exchange last comma with closing paenthesis\n\t\tquery = query.slice(0, -1) + \")\";\n\n\t\treturn this.db.executeSql(query, values).then(async data => {\n\t\t\tlet types = this.dataToTyp(data);\n\n\t\t\tif (types === null || types === []) {\n\t\t\t\tthis.messageService.error(\"Konnte Typ nicht finden\", \"in getTypen: could not get Typen with ids \", neededIds);\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// return rest prematurely, even though not all ids found (of course, if they do not exist!)\n\t\t\tif (neededIds[neededIds.length-1] > this.NUM_TYPEN) {return types;}\n\n\t\t\tif (types.length != values.length) {\n\t\t\t\tthis.messageService.alert(\"Nicht alle Typ gefunden\", \"in GET Typ: could not get all Typ with ids: \", values, \" found: \", this.databaseService.listIds(types));\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// sole place to update\n\t\t\tthis.updateTypen(types);\n\n\t\t\t// sort concatenated lists in place\n\t\t\tlet returnList = prepopulatedTypes.concat(types).sort(function(a, b) {return a.id  {\n\t\t\tthis.messageService.error(\"Konnte Typen nicht laden\", \"GET TYPEN BY IDS: DB query didnt work\", err);\n\t\t\treturn []\n\t\t});\n  }\n\n\t/**\n\t * public wrapper around getTypenByIds() for retrieving one typ\n\t * @param  id id of the searched typ\n\t * @return Promise\n\t */\n\tasync getTyp(id: number): Promise {\n\t\treturn this.getTypenByIds([id]).then(typs => {\n\t\t\tif (!(typs && typs.length)) {\n\t\t\t\tthis.messageService.error(\"Konnte Typ nicht finden\", \"GET Typ: could not find Typ with id\", id);\n\t\t\t\treturn this.defaultTyp();\n\t\t\t}\n\t\t\treturn typs[0];\n\t\t});\n\t}\n\n\t/**\n\t * public wrapper around getMonstersByIds()\n\t * @param  neededIds\tneeded ids of required typs\n\t * @return Promise\n\t */\n\tasync getTypen(neededIds: number[]): Promise {\n\t\treturn this.getTypenByIds(neededIds);\n\t}\n\n\t/**\n\t * get typen to a monster's id\n\t * @param  monId id of a monster\n\t * @return Promise\n\t */\n\tasync getMonsterTypen(monId: number): Promise {\n\n\t\t// lookup needed ids of typs\n\t\treturn this.db.executeSql(`SELECT typ_id FROM monster_monster_typen WHERE monster_id=?`, [`${monId}`]).then(data => {\n\n\t\t\t// collect type ids\n\t\t\tlet typIds: number[] = [];\n\t\t\tfor (let i = 0; i   {\n\t\t\t\treturn typen;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * get typen to an attack's id\n\t * @param  attId id of an attack instance\n\t * @return Promise\n\t */\n\tasync getAttackeTypen(attId: number): Promise {\n\n\t\t// lookup needed ids of typs\n\t\treturn this.db.executeSql(`SELECT typ_id FROM monster_attacke_typen WHERE attacke_id=?`, [`${attId}`]).then(data => {\n\n\t\t\t// collect type ids\n\t\t\tlet typIds: number[] = [];\n\t\t\tfor (let i = 0; i   {\n\t\t\t\treturn typen;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * convert db data result from select query with typs to list of typ instances\n\t * @param  data db data\n\t * @return Promise\n\t */\n\tdataToTyp(data): Typ[] {\n\t\tlet typen: Typ[] = [];\n\t\tlet item;\n\t\tlet typClass: Typ;\n\t\tfor (let i = 0; i  (INT, not FLOAT; 0 ^= wirkungslos, >1 ^= sehr effektiv,  {\n\n\t\t// construct query from\n\t\tlet query = \"SELECT efficiency AS eff FROM monster_typ_efficiency WHERE from_typ_id IN (\";\n\t\tfor (let i = 0; i  {\n\n\t\t\t// factorize all\n\t\t\tlet factor: number = 1.0;\n\t\t\tlet dummy: number;\n\t\t\tfor (let i = 0; i = 1.0) {\n\t\t\t\treturn Math.round(factor);\n\t\t\t}\n\n\t\t\t// less than normal effective\n\t\t\t// log2(factor), is an int and negative\n\t\t\t// example: 1/4 => -2\n\t\t\treturn Math.round(Math.log(factor) / Math.log(2));\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"components/DetailAttackePage.html":{"url":"components/DetailAttackePage.html","title":"component - DetailAttackePage","body":"\n                   \n\n\n\n\n\n  Components\n  DetailAttackePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/pages/detail-attacke/detail-attacke.page.ts\n\n\n    \n        Beschreibung\n    \n    \n        detail page for attacken\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detail-attacke\n            \n\n            \n                styleUrls\n                ./detail-attacke.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./detail-attacke.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                att_typen_icons\n                            \n                            \n                                attacke\n                            \n                            \n                                effectiveAgainst\n                            \n                            \n                                mon_typen\n                            \n                            \n                                noEffectAgainst\n                            \n                            \n                                weakAgainst\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                presentPopover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor(aRoute: ActivatedRoute, headerService: MinimalHeaderService, db: DbAttackenService, db_typ: DbTypenService, db_mon: DbMonsterService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/pages/detail-attacke/detail-attacke.page.ts:48\n                            \n                        \n\n                \n                    \n                            [constructor description]\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        aRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                route to get id from for attack\n\n                                                        \n                                                \n                                                \n                                                        headerService\n                                                  \n                                                        \n                                                                        MinimalHeaderService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                handle header affairs\n\n                                                        \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbAttackenService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for attacks\n\n                                                        \n                                                \n                                                \n                                                        db_typ\n                                                  \n                                                        \n                                                                        DbTypenService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for typs\n\n                                                        \n                                                \n                                                \n                                                        db_mon\n                                                  \n                                                        \n                                                                        DbMonsterService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for monsters\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            presentPopover\n                        \n                        \n                    \n                \n            \n            \n                \npresentPopover(ev: Event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/detail-attacke/detail-attacke.page.ts:127\n                \n            \n\n\n            \n                \n                    open popover with link to typ pages (in header)\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event to the popover, needed for controller\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            att_typen_icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-attacke/detail-attacke.page.ts:30\n                            \n                        \n\n                \n                    \n                        all icons of attacken typen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attacke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Attacke\n\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-attacke/detail-attacke.page.ts:26\n                            \n                        \n\n                \n                    \n                        holds the attack of this page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveAgainst\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Typ[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-attacke/detail-attacke.page.ts:40\n                            \n                        \n\n                \n                    \n                        list of monster typs this attack is very effective against\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mon_typen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-attacke/detail-attacke.page.ts:35\n                            \n                        \n\n                \n                    \n                        list of monsters with their typ icon names\nformat: [[Monster, string[]], ..]\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noEffectAgainst\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Typ[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-attacke/detail-attacke.page.ts:48\n                            \n                        \n\n                \n                    \n                        list of monster typs this attack can not hit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weakAgainst\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Typ[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-attacke/detail-attacke.page.ts:44\n                            \n                        \n\n                \n                    \n                        list of monster typs this attack is less effective against\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DbAttackenService } from '../../services/db-attacken.service';\n\nimport { Attacke } from \"../../interfaces/attacke\";\nimport { DbMonsterService } from 'src/app/services/db-monster.service';\nimport { DbTypenService } from 'src/app/services/db-typen.service';\nimport { Typ } from 'src/app/interfaces/typ';\nimport { MinimalHeaderService } from 'src/app/services/minimal-header.service';\n\nimport { header_popover } from \"../../header_popover_content.module\";\n\n/**\n * detail page for attacken\n */\n@Component({\n  selector: 'app-detail-attacke',\n  templateUrl: './detail-attacke.page.html',\n  styleUrls: ['./detail-attacke.page.scss'],\n})\nexport class DetailAttackePage {\n\n\t/**\n\t * holds the attack of this page\n\t */\n\tattacke: Attacke;\n\t/**\n\t * all icons of attacken typen\n\t */\n\tatt_typen_icons: string[] = [];\n\t/**\n\t * list of monsters with their typ icon names\n\t * format: [[Monster, string[]], ..]\n\t */\n\tmon_typen = [];\n\n\t/**\n\t * list of monster typs this attack is very effective against\n\t */\n\teffectiveAgainst: Typ[] = [];\n\t/**\n\t * list of monster typs this attack is less effective against\n\t */\n\tweakAgainst: Typ[] = [];\n\t/**\n\t * list of monster typs this attack can not hit\n\t */\n\tnoEffectAgainst: Typ[] = [];\n\n\t/**\n\t * [constructor description]\n\t * @param aRoute        route to get id from for attack\n\t * @param headerService handle header affairs\n\t * @param db            db service for attacks\n\t * @param db_typ        db service for typs\n\t * @param db_mon        db service for monsters\n\t */\n  constructor(private aRoute: ActivatedRoute,\n\t\t\t\t\t\t\tprivate headerService: MinimalHeaderService,\n\t\t\t\t\t\t\tprivate db: DbAttackenService,\n\t\t\t\t\t\t\tprivate db_typ: DbTypenService,\n\t\t\t\t\t\t\tprivate db_mon: DbMonsterService) {\n\n\t\t// setup dummy attack to be able to render the page\n\t\tthis.attacke = this.db.defaultAttacke();\n\t\tlet id: number = parseInt(this.aRoute.snapshot.paramMap.get('id'));\n\n\t\t// get attack of this page\n\t\tthis.db.getDatabaseState().subscribe(rdy => {\n      if (rdy) {\n\t\t\t\tthis.db.getAttacke(id).then(att => {\n\t\t\t\t\tthis.attacke = att;\n\n\t\t\t\t\t// get all icons of attack typs\n\t\t\t\t\tthis.db.typIcons(this.attacke.id).then(icons => {this.att_typen_icons = icons;});\n\n\n\t\t\t\t\t// get all special efficiencies (in types) for this attack\n\t\t\t\t\tlet ownTypes = this.attacke.typen.map(t => {return t.id});\n\t\t\t\t\tlet allPromises: Promise[] = [];\n\t\t\t\t\tfor (let i = 1; i  {resolve(this.db_typ.getEfficiency(ownTypes, [i]))}));\n\t\t\t\t\t}\n\n\t\t\t\t\t// one promise for every single type\n\t\t\t\t\t// resolves to efficiency for own types on every inidividual type\n\t\t\t\t\tPromise.all(allPromises).then(ret => {\n\n\t\t\t\t\t\t// sort typs in three lists by their reaction to own typs\n\t\t\t\t\t\t// store typ ids\n\t\t\t\t\t\tlet effectiveIds: number[] = [];\n\t\t\t\t\t\tlet weakIds: number[] = [];\n\t\t\t\t\t\tlet noEffectIds: number[] = [];\n\t\t\t\t\t\tfor (let i = 0; i  1) {effectiveIds.push(i+1);}\n\t\t\t\t\t\t\tif (ret[i]  {this.effectiveAgainst = typs})\n\t\t\t\t\t\tthis.db_typ.getTypen(weakIds).then(typs => {this.weakAgainst = typs})\n\t\t\t\t\t\tthis.db_typ.getTypen(noEffectIds).then(typs => {this.noEffectAgainst = typs})\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.db_mon.getDatabaseState().subscribe(rdy => {\n\t\t\t      if (rdy) {\n\n\t\t\t\t\t\t\t// get all monsters with typ icons capable of this attack\n\t\t\t\t\t\t\tthis.db_mon.getMonstersByAttacke(this.attacke.id).then(mons => {\n\t\t\t\t\t\t\t\tfor (let i = 0; i  {this.mon_typen.push([mons[i], icons]);});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * open popover with link to typ pages (in header)\n\t * @param  ev event to the popover, needed for controller\n\t * @return    void\n\t */\n\tpresentPopover(ev: Event): void {\n\t\tthis.headerService.presentPopover(ev, header_popover);\n\t}\n}\n\n    \n\n    \n        \n  \n\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n    {{ attacke.name }}\n  \n\n\n\n\t\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t  \n\t\t\t    \n\t\t\t    \n\t\t\t      \n\t\t\t\t\t\t\t\n\t\t\t        \tAllgemeines\n\t\t\t\t\t\t\t\n\t\t\t      \n\n\t\t\t\t\t\t\n\t\t\t        Schaden\n\t\t\t        {{ attacke.schaden }}\n\t\t\t      \n\t\t\t\t\t\t\n\t\t\t        Beschreibung\n\t\t\t        {{ attacke.beschreibung }}\n\t\t\t      \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tEffektivitäten\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tsehr effektiv\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tschwach\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\ttrifft nicht\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tbei Monster:\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{ a[0].name }}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./detail-attacke.page.scss\n                \n                .topic { border-top-right-radius: 40%;  border-top-left-radius: 40%;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    {{ attacke.name }}  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t    \t\t\t    \t\t\t      \t\t\t\t\t\t\t\t\t\t        \tAllgemeines\t\t\t\t\t\t\t\t\t\t      \t\t\t\t\t\t\t\t\t        Schaden\t\t\t        {{ attacke.schaden }}\t\t\t      \t\t\t\t\t\t\t\t\t        Beschreibung\t\t\t        {{ attacke.beschreibung }}\t\t\t      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEffektivitäten\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsehr effektiv\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tschwach\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttrifft nicht\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbei Monster:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ a[0].name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailAttackePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/DetailAttackePageModule.html":{"url":"modules/DetailAttackePageModule.html","title":"module - DetailAttackePageModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailAttackePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DetailAttackePageModule\n\n\n\ncluster_DetailAttackePageModule_declarations\n\n\n\n\nDetailAttackePage\n\nDetailAttackePage\n\n\n\nDetailAttackePageModule\n\nDetailAttackePageModule\n\nDetailAttackePageModule -->\n\nDetailAttackePage->DetailAttackePageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/pages/detail-attacke/detail-attacke.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailAttackePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DetailAttackePage } from './detail-attacke.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailAttackePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DetailAttackePage]\n})\nexport class DetailAttackePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"components/DetailMonsterPage.html":{"url":"components/DetailMonsterPage.html","title":"component - DetailMonsterPage","body":"\n                   \n\n\n\n\n\n  Components\n  DetailMonsterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/pages/detail-monster/detail-monster.page.ts\n\n\n    \n        Beschreibung\n    \n    \n        detail page for monsters\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detail-monster\n            \n\n            \n                styleUrls\n                ./detail-monster.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./detail-monster.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aehnlicheFormen\n                            \n                            \n                                att_typen\n                            \n                            \n                                effectiveAgainst\n                            \n                            \n                                evolution\n                            \n                            \n                                gegenteilmonster\n                            \n                            \n                                image\n                            \n                            \n                                mon_typen_icons\n                            \n                            \n                                monster\n                            \n                            \n                                noEffectAgainst\n                            \n                            \n                                weakAgainst\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                presentPopover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor(aRoute: ActivatedRoute, headerService: MinimalHeaderService, db: DbMonsterService, db_att: DbAttackenService, db_img: DbImageService, db_typ: DbTypenService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/pages/detail-monster/detail-monster.page.ts:72\n                            \n                        \n\n                \n                    \n                            initialize all needed values\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        aRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                route to get id from for monster\n\n                                                        \n                                                \n                                                \n                                                        headerService\n                                                  \n                                                        \n                                                                        MinimalHeaderService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                handle header affairs\n\n                                                        \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbMonsterService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for monsters\n\n                                                        \n                                                \n                                                \n                                                        db_att\n                                                  \n                                                        \n                                                                        DbAttackenService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for attacks\n\n                                                        \n                                                \n                                                \n                                                        db_img\n                                                  \n                                                        \n                                                                        DbImageService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service to retrieve the monster's image\n\n                                                        \n                                                \n                                                \n                                                        db_typ\n                                                  \n                                                        \n                                                                        DbTypenService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for typs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            presentPopover\n                        \n                        \n                    \n                \n            \n            \n                \npresentPopover(ev: Event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:189\n                \n            \n\n\n            \n                \n                    open popover with link to typ pages (in header)\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event to the popover, needed for controller\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aehnlicheFormen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:72\n                            \n                        \n\n                \n                    \n                        list of all related forms with their typ icons (as strings to show them in the view)\nformat: [[Monster, [icon; string,...]], ...]\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            att_typen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:38\n                            \n                        \n\n                \n                    \n                        list of attacks with their typ icon names\nformat: [[Attack, string[]], ..]\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            effectiveAgainst\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Typ[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:48\n                            \n                        \n\n                \n                    \n                        list of attack typs this monster is very weak against\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            evolution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [[], []]\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:62\n                            \n                        \n\n                \n                    \n                        direct ancestors and predecessors of this monster\nformat: : [[ [anchestorMonster, [icon: string, ..]], ..], [ [predMonster, [icon: string, ..]], ...]]\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gegenteilmonster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:67\n                            \n                        \n\n                \n                    \n                        list of all gegenteilmonster with their typ icons (as strings to show them in the view)\nformat: [[Monster, [icon; string,...]], ...]\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Image\n\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:43\n                            \n                        \n\n                \n                    \n                        the image to this monster\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mon_typen_icons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:33\n                            \n                        \n\n                \n                    \n                        all icons of monster typen\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monster\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Monster\n\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:29\n                            \n                        \n\n                \n                    \n                        holds monster of this page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noEffectAgainst\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Typ[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:56\n                            \n                        \n\n                \n                    \n                        list of attack typs that can not hit this monster\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weakAgainst\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Typ[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/detail-monster/detail-monster.page.ts:52\n                            \n                        \n\n                \n                    \n                        list of attack typs this monster is very resistant against\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\n\nimport { DbMonsterService } from '../../services/db-monster.service';\nimport { DbAttackenService } from '../../services/db-attacken.service';\n\nimport { Monster } from \"../../interfaces/monster\";\nimport { Image } from 'src/app/interfaces/image';\nimport { DbImageService } from 'src/app/services/db-image.service';\nimport { DbTypenService } from 'src/app/services/db-typen.service';\nimport { Typ } from 'src/app/interfaces/typ';\nimport { MinimalHeaderService } from 'src/app/services/minimal-header.service';\n\nimport { header_popover } from \"../../header_popover_content.module\";\n\n/**\n * detail page for monsters\n */\n@Component({\n  selector: 'app-detail-monster',\n  templateUrl: './detail-monster.page.html',\n  styleUrls: ['./detail-monster.page.scss'],\n})\nexport class DetailMonsterPage {\n\n\t/**\n\t * holds monster of this page\n\t */\n\tmonster: Monster;\n\t/**\n\t * all icons of monster typen\n\t */\n\tmon_typen_icons: string[] = [];\n\t/**\n\t * list of attacks with their typ icon names\n\t * format: [[Attack, string[]], ..]\n\t */\n\tatt_typen = [];\n\n\t/**\n\t * the image to this monster\n\t */\n\timage: Image;\n\n\t/**\n\t * list of attack typs this monster is very weak against\n\t */\n\teffectiveAgainst: Typ[] = [];\n\t/**\n\t * list of attack typs this monster is very resistant against\n\t */\n\tweakAgainst: Typ[] = [];\n\t/**\n\t * list of attack typs that can not hit this monster\n\t */\n\tnoEffectAgainst: Typ[] = [];\n\n\t/**\n\t * direct ancestors and predecessors of this monster\n\t * format: : [[ [anchestorMonster, [icon: string, ..]], ..], [ [predMonster, [icon: string, ..]], ...]]\n\t */\n\tevolution = [[], []];\n\t/**\n\t * list of all gegenteilmonster with their typ icons (as strings to show them in the view)\n\t * format: [[Monster, [icon; string,...]], ...]\n\t */\n\tgegenteilmonster = [];\n\t/**\n\t * list of all related forms with their typ icons (as strings to show them in the view)\n\t * format: [[Monster, [icon; string,...]], ...]\n\t */\n\taehnlicheFormen = [];\n\n\t/**\n\t * initialize all needed values\n\t * @param aRoute        route to get id from for monster\n\t * @param headerService handle header affairs\n\t * @param db            db service for monsters\n\t * @param db_att        db service for attacks\n\t * @param db_img        db service to retrieve the monster's image\n\t * @param db_typ        db service for typs\n\t */\n  constructor(private aRoute: ActivatedRoute,\n\t\t\t\t\t\t\tprivate headerService: MinimalHeaderService,\n\t\t\t\t\t\t\tprivate db: DbMonsterService,\n\t\t\t\t\t\t\tprivate db_att: DbAttackenService,\n\t\t\t\t\t\t\tprivate db_img: DbImageService,\n\t\t\t\t\t\t\tprivate db_typ: DbTypenService\n\t\t\t\t\t\t) {\n\n\t\t// set default monster to start correctly\n\t\tthis.monster = this.db.defaultMonster();\n\t\tlet id: number = parseInt(this.aRoute.snapshot.paramMap.get('id'));\n\n\t\tthis.db.getDatabaseState().subscribe(rdy => {\n      if (rdy) {\n\n\t\t\t\t// get monster\n\t\t\t\tthis.db.getMonster(id).then(data => {\n\t\t\t\t\tthis.monster = data;\n\n\t\t\t\t\t// get direct anchestor and predecessor\n\t\t\t\t\tthis.db.getEvolution(id).then(ev => {\n\t\t\t\t\t\tfor (let k = 0; k  {this.evolution[k].push([ev[k][i], icons]);});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// get monster image\n\t\t\t\t\tthis.db_img.getImage(this.monster.id).then(image => {this.image = image;})\n\n\n\t\t\t\t\t// get all special efficiencies (in types) of attacks hitting this monster\n\t\t\t\t\tlet ownTypes = this.monster.typen.map(t => {return t.id});\n\t\t\t\t\tlet allPromises: Promise[] = [];\n\t\t\t\t\tfor (let i = 1; i  {resolve(this.db_typ.getEfficiency([i], ownTypes))}));\n\t\t\t\t\t}\n\n\t\t\t\t\t// one promise for every single type\n\t\t\t\t\t// resolves to efficiency for every inidividual type on own typs\n\t\t\t\t\tPromise.all(allPromises).then(ret => {\n\n\t\t\t\t\t\t// sort typs in three lists by the reaction of own typs\n\t\t\t\t\t\t// store typ ids\n\t\t\t\t\t\tlet effectiveIds: number[] = [];\n\t\t\t\t\t\tlet weakIds: number[] = [];\n\t\t\t\t\t\tlet noEffectIds: number[] = [];\n\t\t\t\t\t\tfor (let i = 0; i  1) {effectiveIds.push(i+1);}\n\t\t\t\t\t\t\tif (ret[i]  {this.effectiveAgainst = typs})\n\t\t\t\t\t\tthis.db_typ.getTypen(weakIds).then(typs => {this.weakAgainst = typs})\n\t\t\t\t\t\tthis.db_typ.getTypen(noEffectIds).then(typs => {this.noEffectAgainst = typs})\n\t\t\t\t\t});\n\n\n\t\t\t\t\t// get all icons of monster typen\n\t\t\t\t\tthis.db.typIcons(this.monster.id).then(icons => {this.mon_typen_icons = icons;});\n\n\t\t\t\t\t// get all gegenteilmonster\n\t\t\t\t\tif (this.monster.gegenteilmonster.length) {\n\t\t\t\t\t\tthis.db.getMonstersByList(this.monster.gegenteilmonster).then(mons => {\n\t\t\t\t\t\t\tfor (let i = 0; i  {this.gegenteilmonster.push([mons[i], icons]);});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// get all aehnliche formen\n\t\t\t\t\tif (this.monster.aehnlicheFormen.length) {\n\t\t\t\t\t\tthis.db.getMonstersByList(this.monster.aehnlicheFormen).then(mons => {\n\t\t\t\t\t\t\tfor (let i = 0; i  {this.aehnlicheFormen.push([mons[i], icons]);});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// get all attacken of monster with their typen\n\t\t\t\t\tthis.db_att.getDatabaseState().subscribe(rdy => {\n\t\t\t      if (rdy) {\n\t\t\t\t\t\t\tthis.db_att.getAttackenByList(this.monster.attacken).then(atts => {\n\n\t\t\t\t\t\t\t\tfor (let i = 0; i  {this.att_typen.push([atts[i], icons])});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * open popover with link to typ pages (in header)\n\t * @param  ev event to the popover, needed for controller\n\t * @return    void\n\t */\n\tpresentPopover(ev: Event) {\n\t\tthis.headerService.presentPopover(ev, header_popover);\n\t}\n}\n\n    \n\n    \n        \n  \n\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n    {{ monster.name }}\n  \n\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\n\t\t\t  \n\t\t\t    \n\t\t\t    \n\t\t\t      \n\t\t\t\t\t\t\t\n\t\t\t        \tAllgemeines\n\t\t\t\t\t\t\t\n\t\t\t      \n\n\t\t\t\t\t\t\n\t\t\t        ID\n\t\t\t        {{ monster.id }}\n\t\t\t      \n\t\t\t\t\t\t\n\t\t\t        Rang\n\t\t\t        {{ monster.rang }}\n\t\t\t      \n\t\t\t\t\t\t\n\t\t\t        Größe\n\t\t\t        {{ monster.groesse }} m\n\t\t\t      \n\t\t\t\t\t\t\n\t\t\t        Gewicht\n\t\t\t        {{ monster.gewicht }} kg\n\t\t\t      \n\t\t\t\t\t\t\n\t\t\t        HP\n\t\t\t        {{ monster.hp }} HP\n\t\t\t      \n\t\t\t\t\t\t\n\t\t\t        Schadensverhinderung\n\t\t\t        {{ monster.schadensverhinderung }}\n\t\t\t      \n\t\t\t\t\t\t\n\t\t\t        Habitat\n\t\t\t        {{ monster.habitat }}\n\t\t\t      \n\t\t\t\t\t\t\n\t\t\t        Beschreibung\n\t\t\t        {{ monster.beschreibung }}\n\t\t\t      \n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tEffektivitäten\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tsehr anfällig\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\twiderstandsfähig\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\twird nicht getroffen\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tAttacken\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{ a[0].name }}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tEntwicklung\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{ e[0].name }}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{ monster.name }}\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{ e[0].name }}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tGegeteilmonster\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{ e[0].name }}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tähnliche Formen\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{ e[0].name }}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./detail-monster.page.scss\n                \n                .topic { border-top-right-radius: 40%;  border-top-left-radius: 40%;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    {{ monster.name }}  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t    \t\t\t    \t\t\t      \t\t\t\t\t\t\t\t\t\t        \tAllgemeines\t\t\t\t\t\t\t\t\t\t      \t\t\t\t\t\t\t\t\t        ID\t\t\t        {{ monster.id }}\t\t\t      \t\t\t\t\t\t\t\t\t        Rang\t\t\t        {{ monster.rang }}\t\t\t      \t\t\t\t\t\t\t\t\t        Größe\t\t\t        {{ monster.groesse }} m\t\t\t      \t\t\t\t\t\t\t\t\t        Gewicht\t\t\t        {{ monster.gewicht }} kg\t\t\t      \t\t\t\t\t\t\t\t\t        HP\t\t\t        {{ monster.hp }} HP\t\t\t      \t\t\t\t\t\t\t\t\t        Schadensverhinderung\t\t\t        {{ monster.schadensverhinderung }}\t\t\t      \t\t\t\t\t\t\t\t\t        Habitat\t\t\t        {{ monster.habitat }}\t\t\t      \t\t\t\t\t\t\t\t\t        Beschreibung\t\t\t        {{ monster.beschreibung }}\t\t\t      \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEffektivitäten\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsehr anfällig\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twiderstandsfähig\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twird nicht getroffen\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttacken\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ a[0].name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEntwicklung\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ e[0].name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ monster.name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ e[0].name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGegeteilmonster\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ e[0].name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tähnliche Formen\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ e[0].name }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailMonsterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/DetailMonsterPageModule.html":{"url":"modules/DetailMonsterPageModule.html","title":"module - DetailMonsterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailMonsterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DetailMonsterPageModule\n\n\n\ncluster_DetailMonsterPageModule_declarations\n\n\n\n\nDetailMonsterPage\n\nDetailMonsterPage\n\n\n\nDetailMonsterPageModule\n\nDetailMonsterPageModule\n\nDetailMonsterPageModule -->\n\nDetailMonsterPage->DetailMonsterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/pages/detail-monster/detail-monster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailMonsterPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DetailMonsterPage } from './detail-monster.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailMonsterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DetailMonsterPage]\n})\nexport class DetailMonsterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"injectables/FullHeaderService.html":{"url":"injectables/FullHeaderService.html","title":"injectable - FullHeaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FullHeaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/services/full-header.service.ts\n        \n\n            \n                Beschreibung\n            \n            \n                service for all functionality of a full header with type search\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allTypen\n                            \n                            \n                                    Private\n                                initReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                allTypenFormatted\n                            \n                            \n                                getInitState\n                            \n                            \n                                    Async\n                                presentPopover\n                            \n                            \n                                toggleTypSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Konstruktor\n        \n            \n                \n                    \nconstructor(db_typen: DbTypenService, minHeaderService: MinimalHeaderService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/services/full-header.service.ts:23\n                            \n                        \n\n                \n                    \n                            initialize all needed fields\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        db_typen\n                                                  \n                                                        \n                                                                        DbTypenService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for typs\n\n                                                        \n                                                \n                                                \n                                                        minHeaderService\n                                                  \n                                                        \n                                                                        MinimalHeaderService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                extend functionalities of the minimal header service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allTypenFormatted\n                        \n                        \n                    \n                \n            \n            \n                \nallTypenFormatted()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/full-header.service.ts:57\n                \n            \n\n\n            \n                \n                    get all formatted typs\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        [{\"id\": , \"icon\": , \"set\": }, {}]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitState\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitState()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/full-header.service.ts:49\n                \n            \n\n\n            \n                \n                    communicate if init is done\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentPopover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPopover(ev: Event, data: any)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/full-header.service.ts:100\n                \n            \n\n\n            \n                \n                    open popover, using MinimalHeaderService\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event to the popover, needed for controller\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        the content to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleTypSet\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleTypSet(id: number, searchTypen: number[], allFormattedTypen: any)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/full-header.service.ts:72\n                \n            \n\n\n            \n                \n                    toggle setting of a typ\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        id of typ to toggle\n\n                                    \n                                \n                                \n                                    searchTypen\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        list of typ-ids set for filtering\n\n                                    \n                                \n                                \n                                    allFormattedTypen\n                                    \n                                                any\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        list of formatted typs with selected y/n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { \"search\": {}; \"all\": {}; }\n\n                    \n                    \n                        the modified lists in a dictionary\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            allTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Typ[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/full-header.service.ts:23\n                            \n                        \n\n                \n                    \n                        list of all formatted typs for search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/full-header.service.ts:18\n                            \n                        \n\n                \n                    \n                        indicator if initializing done\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { DbTypenService } from 'src/app/services/db-typen.service';\nimport { Typ } from 'src/app/interfaces/typ';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { MinimalHeaderService } from './minimal-header.service';\n\n/**\n * service for all functionality of a full header with type search\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FullHeaderService {\n\t/**\n\t * indicator if initializing done\n\t */\n\tprivate initReady: BehaviorSubject = new BehaviorSubject(false);\n\n\t/**\n\t * list of all formatted typs for search\n\t */\n\tprivate allTypen: Typ[] = [];\n\n\t/**\n\t * initialize all needed fields\n\t * @param db_typen         db service for typs\n\t * @param minHeaderService extend functionalities of the minimal header service\n\t */\n  constructor(private db_typen: DbTypenService,\n\t\t\t\t\t\t\tprivate minHeaderService: MinimalHeaderService) {\n\n\t\tthis.db_typen.getDatabaseState().subscribe(rdy => {\n\t\t\tif (rdy) {\n\t\t\t\t// get all typen formatted\n\t\t\t\tthis.db_typen.getAllTypen().then(typen => {\n\t\t\t\t\tthis.allTypen = typen;\n\n\t\t\t\t\tthis.initReady.next(true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * communicate if init is done\n\t * @return Observable\n\t */\n\tgetInitState(): Observable {\n\t\treturn this.initReady.asObservable();\n\t}\n\n\t/**\n\t * get all formatted typs\n\t * @return [{\"id\": , \"icon\": , \"set\": }, {}]\n\t */\n\tallTypenFormatted(): any {\n\t\tlet formatted = [];\n\t\tfor (let i = 0; i  {\n\n\t\t\treturn {\"search\": searchTypen, \"all\": this.allTypen};\n\t\t}\n\t}\n\n\t/**\n\t * open popover, using MinimalHeaderService\n\t * @param  ev\t\tevent to the popover, needed for controller\n\t * @param  data\tthe content to be displayed\n\t * @return Promise\n\t */\n\tasync presentPopover(ev: Event, data: any): Promise {\n\t\tthis.minHeaderService.presentPopover(ev, data);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"interfaces/Image.html":{"url":"interfaces/Image.html","title":"interface - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/interfaces/image.ts\n        \n\n            \n                Beschreibung\n            \n            \n                representation of an image entry\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        resLocation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [index: string]:    number | string\n\n                    \n                \n                        \n                            \n                                Definiert in src/app/interfaces/image.ts:4\n                            \n                        \n                \n                    \n                        permit searching via string index\n\n                    \n                \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unique key to an image entry\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resLocation\n                                    \n                                \n                                \n                                    \n                                        resLocation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    address readable in html template to display image\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Image {\n\t/**\n\t * permit searching via string index\n\t */\n\treadonly [index: string]: number|string;\n\t/**\n\t * unique key to an image entry\n\t */\n\tid: number,\n\t/**\n\t * address readable in html template to display image\n\t */\n\tresLocation: string,\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"components/ListAttackenPage.html":{"url":"components/ListAttackenPage.html","title":"component - ListAttackenPage","body":"\n                   \n\n\n\n\n\n  Components\n  ListAttackenPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/pages/list-attacken/list-attacken.page.ts\n\n\n    \n        Beschreibung\n    \n    \n        page with list to display and filter all attacks\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-attacken\n            \n\n            \n                styleUrls\n                ./list-attacken.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-attacken.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTypen\n                            \n                            \n                                    Private\n                                filter_locked\n                            \n                            \n                                    Private\n                                filter_on\n                            \n                            \n                                header_color\n                            \n                            \n                                    Private\n                                header_expanded\n                            \n                            \n                                    Private\n                                list_items\n                            \n                            \n                                    Private\n                                offset\n                            \n                            \n                                operatorTypenIsOr\n                            \n                            \n                                searchTypen\n                            \n                            \n                                searchWord\n                            \n                            \n                                    Private\n                                typ_search_buffer\n                            \n                            \n                                    Private\n                                word_search_buffer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                findAttacken\n                            \n                            \n                                loadAttacken\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeSearch\n                            \n                            \n                                presentPopover\n                            \n                            \n                                toggle_expand_header\n                            \n                            \n                                toggleOperator\n                            \n                            \n                                toggleSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor(db: DbAttackenService, headerService: FullHeaderService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/pages/list-attacken/list-attacken.page.ts:74\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbAttackenService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                \n                                                \n                                                        headerService\n                                                  \n                                                        \n                                                                        FullHeaderService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findAttacken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAttacken()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:125\n                \n            \n\n\n            \n                \n                    lock to synchronize searches\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadAttacken\n                        \n                        \n                    \n                \n            \n            \n                \nloadAttacken(event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:246\n                \n            \n\n\n            \n                \n                    load more attacks on infinite scroll event\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event thrown on infinite scroll, complete target to stop spinner showing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:102\n                \n            \n\n\n            \n                \n                    inizialize values concerning attack list\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeSearch(event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:188\n                \n            \n\n\n            \n                \n                    start (or end) search by entered word\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        thrown on change of search field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            presentPopover\n                        \n                        \n                    \n                \n            \n            \n                \npresentPopover(ev: Event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:208\n                \n            \n\n\n            \n                \n                    open popover (navigation to type pages)\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event fired to set popover\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle_expand_header\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle_expand_header()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:199\n                \n            \n\n\n            \n                \n                    toggle expansion of header\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOperator\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOperator()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:230\n                \n            \n\n\n            \n                \n                    toggle OR/AND on type search and start search if needed\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSet\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSet(id: number)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:217\n                \n            \n\n\n            \n                \n                    toggle setting of type on type search and start search\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        id of type to be toggled\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:57\n                            \n                        \n\n                \n                    \n                        all typs, formatted for search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filter_locked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:47\n                            \n                        \n\n                \n                    \n                        guard to a lock in function findAttacken()\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filter_on\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:43\n                            \n                        \n\n                \n                    \n                        indicates if filtering is used at the moment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header_color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"secondary\"\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:35\n                            \n                        \n\n                \n                    \n                        *** header functionality *****\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            header_expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:39\n                            \n                        \n\n                \n                    \n                        toggle header expansion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            list_items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:24\n                            \n                        \n\n                \n                    \n                        all attacks displayed at the moment with their typ icons as strings for rendering\nformat: [[Attacke, [icon:string, ...], ...]\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:29\n                            \n                        \n\n                \n                    \n                        offset for loading the next bundle of attacks (is index to the first one of them)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            operatorTypenIsOr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:53\n                            \n                        \n\n                \n                    \n                        operator in typ search\nif true the operator to connect the types is OR, if false AND\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:70\n                            \n                        \n\n                \n                    \n                        all latest selected typs in search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:74\n                            \n                        \n\n                \n                    \n                        latest in word search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            typ_search_buffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:66\n                            \n                        \n\n                \n                    \n                        buffer for type search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            word_search_buffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-attacken/list-attacken.page.ts:62\n                            \n                        \n\n                \n                    \n                        buffer for word search\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { DbAttackenService } from \"../../services/db-attacken.service\";\nimport { FullHeaderService } from 'src/app/services/full-header.service';\n\nimport { header_popover } from \"../../header_popover_content.module\";\n\n/**\n * page with list to display and filter all attacks\n */\n@Component({\n  selector: 'app-list-attacken',\n  templateUrl: './list-attacken.page.html',\n  styleUrls: ['./list-attacken.page.scss'],\n})\nexport class ListAttackenPage implements OnInit {\n\n\t/**\n\t * all attacks displayed at the moment with their typ icons as strings for rendering\n\t * format: [[Attacke, [icon:string, ...], ...]\n\t */\n\tprivate list_items = [];\n\n\t/**\n\t * offset for loading the next bundle of attacks (is index to the first one of them)\n\t */\n\tprivate offset: number = 0;\n\n\t/********************* header functionality **********************/\n\t/**\n\t * background color of the header\n\t */\n\theader_color = \"secondary\";\n\t/**\n\t * toggle header expansion\n\t */\n\tprivate header_expanded: boolean = false;\n\t/**\n\t * indicates if filtering is used at the moment\n\t */\n\tprivate filter_on: boolean = false;\n\t/**\n\t * guard to a lock in function findAttacken()\n\t */\n\tprivate filter_locked: BehaviorSubject = new BehaviorSubject(false);\n\n\t/**\n\t * operator in typ search\n\t * if true the operator to connect the types is OR, if false AND\n\t */\n\toperatorTypenIsOr: boolean = false;\n\t/**\n\t * all typs, formatted for search\n\t */\n\tallTypen = [];\n\n\t/**\n\t * buffer for word search\n\t */\n\tprivate word_search_buffer: BehaviorSubject = new BehaviorSubject([]);\n\t/**\n\t * buffer for type search\n\t */\n\tprivate typ_search_buffer: BehaviorSubject = new BehaviorSubject([]);\n\t/**\n\t * all latest selected typs in search\n\t */\n\tsearchTypen: number[] = [];\n\t/**\n\t * latest in word search\n\t */\n\tsearchWord: string = null;\n\n\t/****************************************************************/\n\n\t/**\n\t * initalize needed values for header\n\t * @param db             db service for attacks\n\t * @param headerService  handle header affairs\n\t */\n  constructor(private db: DbAttackenService,\n\t\t\t\t\t\t\tprivate headerService: FullHeaderService) {\n\n\t\tthis.headerService.getInitState().subscribe(rdy => {\n\t\t\tif (rdy) {\n\t\t\t\tthis.allTypen = headerService.allTypenFormatted();\n\t\t\t}\n\t\t});\n\n\t\t// handle looking for monsters via search field in view\n\t\tthis.word_search_buffer.asObservable().subscribe(_ => {this.findAttacken();});\n\t\tthis.typ_search_buffer.asObservable().subscribe(_ => {this.findAttacken();})\n\t\tthis.filter_locked.asObservable().subscribe(_ => {this.findAttacken();});\n\t}\n\n\t/**\n\t * inizialize values concerning attack list\n\t * @return void\n\t */\n  ngOnInit(): void {\n\t\tthis.db.getDatabaseState().subscribe(rdy => {\n      if (rdy) {\n\t\t\t\t// get first bunch of attacks\n\t\t\t\tthis.db.getAttacken(this.offset).then(_ => this.offset += this.db.LIMIT);\n\n\t\t\t\t// establish subscription to changes concerning attacks\n\t\t\t\tthis.db.observeAttacke().subscribe(atts => {\n\n\t\t\t\t\t// adapt in list_items\n\t\t\t\t\tthis.list_items = [];\n\t\t\t\t\tfor (let i = 0; i  {this.list_items[i] = [atts[i], icons];});\n\t\t\t\t\t}\n        });\n      }\n    });\n  }\n\n\t/**\n\t * lock to synchronize searches\n\t * @return Promise\n\t */\n\tprivate async findAttacken(): Promise {\n\n\t\tlet locked: boolean = this.filter_locked.getValue();\n\t\tlet word_search_items: string[] = this.word_search_buffer.getValue();\n\t\tlet typ_search_items: number[][] = this.typ_search_buffer.getValue();\n\n\t\t// nothing to do, return\n\t\tif (locked || (!word_search_items.length && !typ_search_items.length)) {return;}\n\n\t\t// search and filter Monsters\n\t\tthis.filter_locked.next(true);\n\n\t\t// collect information about word search\n\t\tlet word_latest: string;\n\t\tlet word_search_new: boolean = false;\n\t\tif (word_search_items.length) {\n\t\t\tlet index = word_search_items.length - 1;\n\t\t\tword_latest = word_search_items[index];\n\t\t\tword_search_new = true;\n\n\t\t\t// cleanup\n\t\t\t// in case that latest_search was the last entry, prevent out of bounds\n\t\t\tif (index+1 >= word_search_items.length) {\n\t\t\t\tthis.word_search_buffer.next([]);\n\t\t\t} else {\n\t\t\t\tthis.word_search_buffer.next(word_search_items.slice(index+1));\n\t\t\t}\n\t\t}\n\n\t\t// collect information about type search\n\t\tlet typ_latest: number[];\n\t\tlet typ_search_new: boolean = false;\n\t\tif (typ_search_items.length) {\n\t\t\tlet index = typ_search_items.length - 1;\n\t\t\ttyp_latest = typ_search_items[index];\n\t\t\ttyp_search_new = true;\n\n\t\t\t// cleanup\n\t\t\t// in case that latest_search was the last entry, prevent out of bounds\n\t\t\tif (index+1 >= typ_search_items.length) {\n\t\t\t\tthis.typ_search_buffer.next([]);\n\t\t\t} else {\n\t\t\t\tthis.typ_search_buffer.next(typ_search_items.slice(index+1));\n\t\t\t}\n\t\t}\n\n\t\t// case if search was empty, stop search and otherwise deliver results\n\t\t// communicate with empty or not empty \"latest_search\" to db service\n\t\tthis.filter_on = (word_search_new && word_latest !== null && word_latest.length !== 0) || (typ_search_new && typ_latest !== null && typ_latest.length !== 0);\n\n\t\t// search monsters or stop search session\n\t\tif (word_search_new) {await this.db.findbyWord(word_latest, !typ_search_new);}\n\t\tif (typ_search_new) {await this.db.findByType(typ_latest, this.operatorTypenIsOr, true);}\n\n\t\t// start to potential new round\n\t\tthis.filter_locked.next(false);\n\t}\n\n\t/**\n\t * start (or end) search by entered word\n\t * @param event thrown on change of search field\n\t * @return void\n\t */\n\tonChangeSearch(event): void {\n\n\t\tlet next_list: string[] = this.word_search_buffer.getValue();\n\t\tnext_list.push(event.detail.value);\n\t\tthis.word_search_buffer.next(next_list);\n\t}\n\n\t/**\n\t * toggle expansion of header\n\t * @return void\n\t */\n\ttoggle_expand_header(): void {\n\t\tthis.header_expanded = !this.header_expanded;\n\t}\n\n\t/**\n\t * open popover (navigation to type pages)\n\t * @param ev event fired to set popover\n\t * @return void\n\t */\n\tpresentPopover(ev: Event): void {\n\t\tthis.headerService.presentPopover(ev, header_popover);\n\t}\n\n\t/**\n\t * toggle setting of type on type search and start search\n\t * @param id id of type to be toggled\n\t * @return void\n\t */\n\ttoggleSet(id: number): void {\n\t\tthis.headerService.toggleTypSet(id, this.searchTypen, this.allTypen);\n\n\t\t// update attacken filtered by type\n\t\tlet typ_search: number[][] = this.typ_search_buffer.getValue();\n    typ_search.push(this.searchTypen);\n\t\tthis.typ_search_buffer.next(typ_search);\n\t}\n\n\t/**\n\t * toggle OR/AND on type search and start search if needed\n\t * @return void\n\t */\n\ttoggleOperator(): void {\n\t\tthis.operatorTypenIsOr = !this.operatorTypenIsOr;\n\n\t\tif (this.searchTypen.length > 1) {\n\t\t\t// update monster filtered by type\n\t\t\tlet typ_search: number[][] = this.typ_search_buffer.getValue();\n\t    typ_search.push(this.searchTypen);\n\t\t\tthis.typ_search_buffer.next(typ_search);\n\t\t}\n\t}\n\n\t/**\n\t * load more attacks on infinite scroll event\n\t * @param event          event thrown on infinite scroll, complete target to stop spinner showing\n\t * @return void\n\t */\n\tloadAttacken(event): void {\n\n\t\t// had offset beginning with 0, num (or id) of monsters with 1\n\t\tif ( (this.offset+1) >= this.db.NUM_ATTACKEN || this.filter_on) {\n\t\t\tif (event) {event.target.complete();}\n\t\t\treturn;\n\t\t}\n\n\t\t// handled thorugh observable subscription\n\t\tthis.db.getAttacken(this.offset).then(_ => {\n\t\t\tif (event) {event.target.complete();}\n\n\t\t\tthis.offset += this.db.LIMIT;\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n\t\n\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t 1\" fill=\"outline\" shape=\"round\" size=\"small\" color=\"light\" (click)=\"toggleOperator()\">\n\t\t\t{{ operatorTypenIsOr? 'ODER' : 'UND' }}\n\t\t\n\n\t\n\n  \n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\n  \n\n\n\n\n\n\tHier ist nichts\n\n\t\n\t\t\n\t\t\t{{i[0].name}}\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\t\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./list-attacken.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 1\" fill=\"outline\" shape=\"round\" size=\"small\" color=\"light\" (click)=\"toggleOperator()\">\t\t\t{{ operatorTypenIsOr? \\'ODER\\' : \\'UND\\' }}\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \tHier ist nichts\t\t\t\t\t\t{{i[0].name}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListAttackenPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/ListAttackenPageModule.html":{"url":"modules/ListAttackenPageModule.html","title":"module - ListAttackenPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ListAttackenPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListAttackenPageModule\n\n\n\ncluster_ListAttackenPageModule_declarations\n\n\n\n\nListAttackenPage\n\nListAttackenPage\n\n\n\nListAttackenPageModule\n\nListAttackenPageModule\n\nListAttackenPageModule -->\n\nListAttackenPage->ListAttackenPageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/pages/list-attacken/list-attacken.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ListAttackenPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListAttackenPage } from './list-attacken.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListAttackenPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ListAttackenPage]\n})\nexport class ListAttackenPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"components/ListMonsterPage.html":{"url":"components/ListMonsterPage.html","title":"component - ListMonsterPage","body":"\n                   \n\n\n\n\n\n  Components\n  ListMonsterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/pages/list-monster/list-monster.page.ts\n\n\n    \n        Beschreibung\n    \n    \n        page with list to display and filter all monsters\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-monster\n            \n\n            \n                styleUrls\n                ./list-monster.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-monster.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTypen\n                            \n                            \n                                    Private\n                                filter_locked\n                            \n                            \n                                    Private\n                                filter_on\n                            \n                            \n                                header_color\n                            \n                            \n                                    Private\n                                header_expanded\n                            \n                            \n                                    Private\n                                list_items\n                            \n                            \n                                loadingRangSort\n                            \n                            \n                                    Private\n                                offset\n                            \n                            \n                                operatorTypenIsOr\n                            \n                            \n                                rangSortIndex\n                            \n                            \n                                rangSorting\n                            \n                            \n                                searchTypen\n                            \n                            \n                                searchWord\n                            \n                            \n                                    Private\n                                typ_search_buffer\n                            \n                            \n                                    Private\n                                word_search_buffer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                findMonsters\n                            \n                            \n                                loadMonsters\n                            \n                            \n                                NextSortByRang\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangeSearch\n                            \n                            \n                                presentPopover\n                            \n                            \n                                toggle_expand_header\n                            \n                            \n                                toggleOperator\n                            \n                            \n                                toggleSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor(db: DbMonsterService, headerService: FullHeaderService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/pages/list-monster/list-monster.page.ts:88\n                            \n                        \n\n                \n                    \n                            initalize needed values for header\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbMonsterService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for monsters\n\n                                                        \n                                                \n                                                \n                                                        headerService\n                                                  \n                                                        \n                                                                        FullHeaderService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                handle header affairs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findMonsters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findMonsters()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:134\n                \n            \n\n\n            \n                \n                    lock to synchronize searches\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMonsters\n                        \n                        \n                    \n                \n            \n            \n                \nloadMonsters(event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:271\n                \n            \n\n\n            \n                \n                    load more monsters on infinite scroll event\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event thrown on infinite scroll, complete target to stop spinner showing\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            NextSortByRang\n                        \n                        \n                    \n                \n            \n            \n                \nNextSortByRang()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:259\n                \n            \n\n\n            \n                \n                    change sorting by rang and adapt list of monsters\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:114\n                \n            \n\n\n            \n                \n                    inizialize values concerning attack list\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onChangeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nonChangeSearch(event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:201\n                \n            \n\n\n            \n                \n                    start (or end) search by entered word\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        thrown on change of search field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            presentPopover\n                        \n                        \n                    \n                \n            \n            \n                \npresentPopover(ev: Event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:221\n                \n            \n\n\n            \n                \n                    open popover (navigation to type pages)\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event fired to set popover\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggle_expand_header\n                        \n                        \n                    \n                \n            \n            \n                \ntoggle_expand_header()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:212\n                \n            \n\n\n            \n                \n                    toggle expansion of header\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleOperator\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleOperator()\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:244\n                \n            \n\n\n            \n                \n                    toggle OR/AND on type search and start search if needed\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSet\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSet(id: number)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-monster/list-monster.page.ts:230\n                \n            \n\n\n            \n                \n                    toggle setting of type on type search and start search\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        id of type to be toggled\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:56\n                            \n                        \n\n                \n                    \n                        all typs, formatted for search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filter_locked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:46\n                            \n                        \n\n                \n                    \n                        guard to a lock in function findMonster()\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            filter_on\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:42\n                            \n                        \n\n                \n                    \n                        indicates if filtering is used at the moment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header_color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"primary\"\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:34\n                            \n                        \n\n                \n                    \n                        *** header functionality *****\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            header_expanded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:38\n                            \n                        \n\n                \n                    \n                        toggle header expansion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            list_items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:23\n                            \n                        \n\n                \n                    \n                        all attacks displayed at the moment with their typ icons as strings for rendering\nformat: [[Monster, [icon:string, ...], ...]\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingRangSort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:88\n                            \n                        \n\n                \n                    \n                        if true, soow spinner to rang sort\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:28\n                            \n                        \n\n                \n                    \n                        offset for loading the next bundle of monsters (is index to the first one of them)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            operatorTypenIsOr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:52\n                            \n                        \n\n                \n                    \n                        operator in typ search\nif true the operator to connect the types is OR, if false AND\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangSortIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:84\n                            \n                        \n\n                \n                    \n                        index to rangSorting\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rangSorting\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\"sort?\", \"asc\", \"desc\"]\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:80\n                            \n                        \n\n                \n                    \n                        \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchTypen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:69\n                            \n                        \n\n                \n                    \n                        all latest selected typs in search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchWord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:73\n                            \n                        \n\n                \n                    \n                        latest in word search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            typ_search_buffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:65\n                            \n                        \n\n                \n                    \n                        buffer for type search\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            word_search_buffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-monster/list-monster.page.ts:61\n                            \n                        \n\n                \n                    \n                        buffer for word search\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { DbMonsterService } from \"../../services/db-monster.service\";\nimport { FullHeaderService } from 'src/app/services/full-header.service';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { header_popover } from 'src/app/header_popover_content.module';\n\n/**\n * page with list to display and filter all monsters\n */\n@Component({\n  selector: 'app-list-monster',\n  templateUrl: './list-monster.page.html',\n  styleUrls: ['./list-monster.page.scss'],\n})\nexport class ListMonsterPage implements OnInit {\n\n\t/**\n\t * all attacks displayed at the moment with their typ icons as strings for rendering\n\t * format: [[Monster, [icon:string, ...], ...]\n\t */\n\tprivate list_items = [];\n\n\t/**\n\t * offset for loading the next bundle of monsters (is index to the first one of them)\n\t */\n\tprivate offset: number = 0;\n\n\t/********************* header functionality **********************/\n\t/**\n\t * background color of the header\n\t */\n\theader_color = \"primary\";\n\t/**\n\t * toggle header expansion\n\t */\n\tprivate header_expanded: boolean = false;\n\t/**\n\t * indicates if filtering is used at the moment\n\t */\n\tprivate filter_on: boolean = false;\n\t/**\n\t * guard to a lock in function findMonster()\n\t */\n\tprivate filter_locked: BehaviorSubject = new BehaviorSubject(false);\n\n\t/**\n\t * operator in typ search\n\t * if true the operator to connect the types is OR, if false AND\n\t */\n\toperatorTypenIsOr: boolean = false;\n\t/**\n\t * all typs, formatted for search\n\t */\n\tallTypen = [];\n\n\t/**\n\t * buffer for word search\n\t */\n\tprivate word_search_buffer: BehaviorSubject = new BehaviorSubject([]);\n\t/**\n\t * buffer for type search\n\t */\n\tprivate typ_search_buffer: BehaviorSubject = new BehaviorSubject([]);\n\t/**\n\t * all latest selected typs in search\n\t */\n\tsearchTypen: number[] = [];\n\t/**\n\t * latest in word search\n\t */\n\tsearchWord: string = null;\n\n\t/****************************************************************/\n\n\t/**\n\t * text on button for rang sorting in header\n\t */\n\trangSorting: string[] = [\"sort?\", \"asc\", \"desc\"];\n\t/**\n\t * index to rangSorting\n\t */\n\trangSortIndex: number = 0;\n\t/**\n\t * if true, soow spinner to rang sort\n\t */\n\tloadingRangSort: boolean = false;\n\n\t/**\n\t * initalize needed values for header\n\t * @param db             db service for monsters\n\t * @param headerService  handle header affairs\n\t */\n  constructor(private db: DbMonsterService,\n\t\t\t\t\t\t\tprivate headerService: FullHeaderService) {\n\n\t\tthis.headerService.getInitState().subscribe(rdy => {\n\t\t\tif (rdy) {\n\t\t\t\tthis.allTypen = headerService.allTypenFormatted();\n\t\t\t}\n\t\t});\n\n\t\t// handle looking for monsters via search field in view every time one of the following changes\n\t\tthis.word_search_buffer.asObservable().subscribe(_ => {this.findMonsters();});\n\t\tthis.typ_search_buffer.asObservable().subscribe(_ => {this.findMonsters();})\n\t\tthis.filter_locked.asObservable().subscribe(_ => {this.findMonsters();});\n\t}\n\n\t/**\n\t * inizialize values concerning attack list\n\t * @return void\n\t */\n  ngOnInit(): void {\n\t\tthis.db.getDatabaseState().subscribe(rdy => {\n      if (rdy) {\n\t\t\t\tthis.db.getMonsters(this.offset).then(_ => this.offset += this.db.LIMIT);\n        this.db.observeMonster().subscribe(monsters => {\n\n\t\t\t\t\t// add monster and its typ-icons in list_items\n\t\t\t\t\tthis.list_items = [];\n\t\t\t\t\tfor (let i = 0; i  {this.list_items[i] = [monsters[i], icons];});\n\t\t\t\t\t}\n        });\n      }\n    });\n  }\n\n\t/**\n\t * lock to synchronize searches\n\t * @return Promise\n\t */\n\tprivate async findMonsters(): Promise {\n\n\t\tlet locked: boolean = this.filter_locked.getValue();\n\t\tlet word_search_items: string[] = this.word_search_buffer.getValue();\n\t\tlet typ_search_items: number[][] = this.typ_search_buffer.getValue();\n\n\t\t// nothing to do, return\n\t\tif (locked || (!word_search_items.length && !typ_search_items.length)) {return;}\n\n\t\t// search and filter Monsters\n\t\tthis.filter_locked.next(true);\n\n\t\t// collect information about word search\n\t\tlet word_latest: string;\n\t\tlet word_search_new: boolean = false;\n\t\tif (word_search_items.length) {\n\t\t\tlet index = word_search_items.length - 1;\n\t\t\tword_latest = word_search_items[index];\n\t\t\tword_search_new = true;\n\n\t\t\t// cleanup\n\t\t\t// in case that latest_search was the last entry, prevent out of bounds\n\t\t\tif (index+1 >= word_search_items.length) {\n\t\t\t\tthis.word_search_buffer.next([]);\n\t\t\t} else {\n\t\t\t\tthis.word_search_buffer.next(word_search_items.slice(index+1));\n\t\t\t}\n\t\t}\n\n\t\t// collect information about type search\n\t\tlet typ_latest: number[];\n\t\tlet typ_search_new: boolean = false;\n\t\tif (typ_search_items.length) {\n\t\t\tlet index = typ_search_items.length - 1;\n\t\t\ttyp_latest = typ_search_items[index];\n\t\t\ttyp_search_new = true;\n\n\t\t\t// cleanup\n\t\t\t// in case that latest_search was the last entry, prevent out of bounds\n\t\t\tif (index+1 >= typ_search_items.length) {\n\t\t\t\tthis.typ_search_buffer.next([]);\n\t\t\t} else {\n\t\t\t\tthis.typ_search_buffer.next(typ_search_items.slice(index+1));\n\t\t\t}\n\t\t}\n\n\t\t// case if search was empty, stop search and otherwise deliver results\n\t\t// communicate with empty or not empty \"latest_search\" to db service\n\t\tthis.filter_on = (word_search_new && word_latest !== null && word_latest.length !== 0) || (typ_search_new && typ_latest !== null && typ_latest.length !== 0);\n\n\t\t// search monsters or stop search session\n\t\tif (word_search_new) {await this.db.findByWord(word_latest, !typ_search_new);}\n\t\tif (typ_search_new) {await this.db.findByType(typ_latest, this.operatorTypenIsOr, true);}\n\n\t\t// start to potential new round\n\t\tthis.filter_locked.next(false);\n\n\t\t// addition for rang sorting\n\t\t// set to \"no filter\" ^= index 0, if a filter is set\n\t\tif (this.filter_on) {this.rangSortIndex = 0;}\n\t}\n\n\t/**\n\t * start (or end) search by entered word\n\t * @param event thrown on change of search field\n\t * @return void\n\t */\n\tonChangeSearch(event): void {\n\n\t\tlet next_list: string[] = this.word_search_buffer.getValue();\n\t\tnext_list.push(event.detail.value);\n\t\tthis.word_search_buffer.next(next_list);\n\t}\n\n\t/**\n\t * toggle expansion of header\n\t * @return void\n\t */\n\ttoggle_expand_header(): void {\n\t\tthis.header_expanded = !this.header_expanded;\n\t}\n\n\t/**\n\t * open popover (navigation to type pages)\n\t * @param ev event fired to set popover\n\t * @return void\n\t */\n\tpresentPopover(ev: Event): void {\n\t\tthis.headerService.presentPopover(ev, header_popover);\n\t}\n\n\t/**\n\t * toggle setting of type on type search and start search\n\t * @param id id of type to be toggled\n\t * @return void\n\t */\n\ttoggleSet(id: number): void {\n\t\tthis.headerService.toggleTypSet(id, this.searchTypen, this.allTypen);\n\n\t\t// update monster filtered by type\n\t\tlet typ_search: number[][] = this.typ_search_buffer.getValue();\n\t\ttyp_search.push(this.searchTypen\n\t\t);\n\t\tthis.typ_search_buffer.next(typ_search);\n\t}\n\n\t/**\n\t * toggle OR/AND on type search and start search if needed\n\t * @return void\n\t */\n\ttoggleOperator(): void {\n\t\tthis.operatorTypenIsOr = !this.operatorTypenIsOr;\n\n\t\tif (this.searchTypen.length > 1) {\n\t\t\t// update monster filtered by type\n\t\t\tlet typ_search: number[][] = this.typ_search_buffer.getValue();\n\t\t\ttyp_search.push(this.searchTypen);\n\t\t\tthis.typ_search_buffer.next(typ_search);\n\t\t}\n\t}\n\n\t/**\n\t * change sorting by rang and adapt list of monsters\n\t * @return void\n\t */\n\tNextSortByRang(): void {\n\t\tthis.rangSortIndex = (this.rangSortIndex+1) % 3;\n\n\t\tthis.loadingRangSort = true;\n\t\tthis.db.getAllSortedByRang(this.rangSortIndex).then(_ => {this.loadingRangSort = false});\n\t}\n\n\t/**\n\t * load more monsters on infinite scroll event\n\t * @param event          event thrown on infinite scroll, complete target to stop spinner showing\n\t * @return void\n\t */\n\tloadMonsters(event) {\n\n\t\t// had offset beginning with 0, num (or id) of monsters with 1\n\t\tif ( (this.offset+1) >= this.db.NUM_MONSTER || this.filter_on || this.rangSortIndex) {\n\t\t\tif (event) {event.target.complete();}\n\t\t\treturn;\n\t\t}\n\n\t\t// handled thorugh observable subscription\n\t\tthis.db.getMonsters(this.offset).then(_ => {\n\t\t\tif (event) {event.target.complete();}\n\n\t\t\tthis.offset += this.db.LIMIT;\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\n\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\t 1\" fill=\"outline\" shape=\"round\" size=\"small\" color=\"light\" (click)=\"toggleOperator()\">\n\t\t\t\t\t\t{{ operatorTypenIsOr? 'ODER' : 'UND' }}\n\t\t\t\t\t\n\t\t\n\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\t\n\t\t\t\t\t\tRang\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{ rangSorting[rangSortIndex] }}\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n  \n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\n\t\t\n\t\t\n  \n\n\n\n\n\tHier ist nichts\n\n\t\n\t\t\n\t\t\t{{i[0].name}}\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\t\n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./list-monster.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t 1\" fill=\"outline\" shape=\"round\" size=\"small\" color=\"light\" (click)=\"toggleOperator()\">\t\t\t\t\t\t{{ operatorTypenIsOr? \\'ODER\\' : \\'UND\\' }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRang\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ rangSorting[rangSortIndex] }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \tHier ist nichts\t\t\t\t\t\t{{i[0].name}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListMonsterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/ListMonsterPageModule.html":{"url":"modules/ListMonsterPageModule.html","title":"module - ListMonsterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ListMonsterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListMonsterPageModule\n\n\n\ncluster_ListMonsterPageModule_declarations\n\n\n\n\nListMonsterPage\n\nListMonsterPage\n\n\n\nListMonsterPageModule\n\nListMonsterPageModule\n\nListMonsterPageModule -->\n\nListMonsterPage->ListMonsterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/pages/list-monster/list-monster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ListMonsterPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListMonsterPage } from './list-monster.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListMonsterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [\n\t\tListMonsterPage\n\t]\n})\nexport class ListMonsterPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"components/ListTypenPage.html":{"url":"components/ListTypenPage.html","title":"component - ListTypenPage","body":"\n                   \n\n\n\n\n\n  Components\n  ListTypenPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/pages/list-typen/list-typen.page.ts\n\n\n    \n        Beschreibung\n    \n    \n        page with list to display all typs\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list-typen\n            \n\n            \n                styleUrls\n                ./list-typen.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-typen.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                item_list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                presentPopover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor(db: DbTypenService, headerService: MinimalHeaderService)\n                    \n                \n                        \n                            \n                                Definiert in src/app/pages/list-typen/list-typen.page.ts:23\n                            \n                        \n\n                \n                    \n                            [constructor description]\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbTypenService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                db service for typs\n\n                                                        \n                                                \n                                                \n                                                        headerService\n                                                  \n                                                        \n                                                                        MinimalHeaderService\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                handle header affairs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            presentPopover\n                        \n                        \n                    \n                \n            \n            \n                \npresentPopover(ev: Event)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/list-typen/list-typen.page.ts:51\n                \n            \n\n\n            \n                \n                    open popover (navigation to type pages)\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event fired to set popover\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item_list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/list-typen/list-typen.page.ts:23\n                            \n                        \n\n                \n                    \n                        list of type names and typs\nformat: [[name:string, typ], ...]\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { string_of_enum } from 'src/app/interfaces/typ';\n\nimport { DbTypenService } from 'src/app/services/db-typen.service';\nimport { header_popover_not_list } from 'src/app/header_popover_content.module';\nimport { MinimalHeaderService } from 'src/app/services/minimal-header.service';\n\n/**\n * page with list to display all typs\n */\n@Component({\n  selector: 'app-list-typen',\n  templateUrl: './list-typen.page.html',\n  styleUrls: ['./list-typen.page.scss'],\n})\nexport class ListTypenPage {\n\n\t/**\n\t * list of type names and typs\n\t * format: [[name:string, typ], ...]\n\t */\n\titem_list = [];\n\n\t/**\n\t * [constructor description]\n\t * @param db            db service for typs\n\t * @param headerService handle header affairs\n\t */\n  constructor(private db: DbTypenService,\n\t\t\t\t\t\t\tprivate headerService: MinimalHeaderService) {\n\n\t\tthis.db.getDatabaseState().subscribe(rdy => {\n\t\t\tif (rdy) {\n\t\t\t\tthis.db.getAllTypen().then(typen => {\n\n\t\t\t\t\t// write pairs of [name, typ] into item_list\n\t\t\t\t\tfor (let i = 0; i \n    \n\n    \n        \n  \n\t\t\n\t\t \n\t \n    Typen\n\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n  \n\n\n\n\t\n\t\t{{i[0]}}\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./list-typen.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t\t\t\t \t     Typen\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t{{i[0]}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListTypenPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/ListTypenPageModule.html":{"url":"modules/ListTypenPageModule.html","title":"module - ListTypenPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ListTypenPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListTypenPageModule\n\n\n\ncluster_ListTypenPageModule_declarations\n\n\n\n\nListTypenPage\n\nListTypenPage\n\n\n\nListTypenPageModule\n\nListTypenPageModule\n\nListTypenPageModule -->\n\nListTypenPage->ListTypenPageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/pages/list-typen/list-typen.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ListTypenPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListTypenPage } from './list-typen.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListTypenPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ListTypenPage]\n})\nexport class ListTypenPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/services/message.service.ts\n        \n\n            \n                Beschreibung\n            \n            \n                service to communicate messages to the user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                inProd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                alert\n                            \n                            \n                                error\n                            \n                            \n                                    Private\n                                    Async\n                                presentToast\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Konstruktor\n        \n            \n                \n                    \nconstructor(toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Definiert in src/app/services/message.service.ts:26\n                            \n                        \n\n                \n                    \n                            init values\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                [description]\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alert\n                        \n                        \n                    \n                \n            \n            \n                \nalert(message: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/message.service.ts:56\n                \n            \n\n\n            \n                \n                    toast alert message\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \nthe message to be shown\n\n\n                                    \n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \noptional additional information\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/message.service.ts:70\n                \n            \n\n\n            \n                \n                    toast error message\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \nthe message to be shown\n\n\n                                    \n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \noptional additional information\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(type: MessageType, message: any[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/message.service.ts:84\n                \n            \n\n\n            \n                \n                    helper to toast a message\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                MessageType\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    message\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \ntoast message\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(message: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/message.service.ts:42\n                \n            \n\n\n            \n                \n                    toast success message\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \nthe message to be shown\n\n\n                                    \n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        \noptional additional information\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            inProd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/message.service.ts:26\n                            \n                        \n\n                \n                    \n                        show no debug info in prod\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\nimport { environment } from '../../environments/environment';\n\n/**\n * to resolve from message type to color of toast\n */\nenum MessageType {\n\tsuccess = \"success\",\n\talert = \"warning\",\n\terror = \"danger\"\n}\n\n/**\n * service to communicate messages to the user\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n\t/**\n\t * show no debug info in prod\n\t */\n\tprivate inProd: Boolean;\n\n\t/**\n\t * init values\n\t * @param toastCtrl [description]\n\t */\n  constructor(private toastCtrl: ToastController) {\n/**/\t\tthis.inProd = false//environment.production;\n\t}\n\n\t/**\n\t * toast success message\n\t * @param {string} message\t\t\t\t- the message to be shown\n\t * @param {any[]} optionalParams\t- optional additional information\n\t * @return {void}\n\t */\n\tsuccess(message: string, ...optionalParams: any[]): void {\n\t\tif (this.inProd) {\n\t\t\tthis.presentToast(MessageType.success, [message]);\n\t\t} else {\n\t\t\tthis.presentToast(MessageType.success, [message, ...optionalParams]);\n\t\t}\n\t}\n\n\t/**\n\t * toast alert message\n\t * @param {string} message\t\t\t\t- the message to be shown\n\t * @param {any[]} optionalParams\t- optional additional information\n\t * @return {void}\n\t */\n\talert(message: string, ...optionalParams: any[]): void {\n\t\tif (this.inProd) {\n\t\t\tthis.presentToast(MessageType.alert, [message]);\n\t\t} else {\n\t\t\tthis.presentToast(MessageType.alert, [message, ...optionalParams]);\n\t\t}\n\t}\n\n\t/**\n\t * toast error message\n\t * @param {string} message\t\t\t\t- the message to be shown\n\t * @param {any[]} optionalParams\t- optional additional information\n\t * @return {void}\n\t */\n\terror(message: string, ...optionalParams: any[]): void {\n\t\tif (this.inProd) {\n\t\t\tthis.presentToast(MessageType.error, [message]);\n\t\t} else {\n\t\t\tthis.presentToast(MessageType.error, [message, ...optionalParams]);\n\t\t}\n\t}\n\n\t/**\n\t * helper to toast a message\n\t * @async\n\t * @param {any[]} message - toast message\n\t * @return {Promise}\n\t */\n\tprivate async presentToast(type: MessageType, message: any[]): Promise {\n\n\t\t// chars which should have no whitespace to the left and one space to the right\n\t\tconst delimiters: {} = {\":\": null, \",\": null};\n\t\tfor (let key of Object.keys(delimiters)) {\n\t\t\tdelimiters[key] = new RegExp(`\\s*${key}\\s*`, \"g\");\n\t\t}\n\n\t\tlet mStrings: string[] = [];\n\n\t\t// add whitespace after each delimiter\n\t\tfor (let m of message) {\n\t\t\tif (typeof m !== \"string\") {m = JSON.stringify(m)}\n\t\t\tm = m.replace(/\\s+/g, \" \");\n\n\t\t\tfor (let delimiter of Object.entries(delimiters)) {\n\t\t\t\tm = m.replace(delimiter[1], `${delimiter[0]} `);\n\t\t\t}\n\t\t\tmStrings.push(m);\n\t\t}\n\n\t\t// construct toast\n\t\tconst toast = await this.toastCtrl.create({\n\t\t\tmessage: mStrings.join(\"| \"),\n\t\t\tshowCloseButton: true,\n\t\t\tcloseButtonText: \"Schließen\",\n\t\t\t//duration: 3000,\n\t\t\tcolor: type,\n\t\t\tanimated: true\n\t\t});\n\t\ttoast.present();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"injectables/MinimalHeaderService.html":{"url":"injectables/MinimalHeaderService.html","title":"injectable - MinimalHeaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MinimalHeaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/services/minimal-header.service.ts\n        \n\n            \n                Beschreibung\n            \n            \n                provides minimal functionality for a header\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                popoverController\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                presentPopover\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Konstruktor\n        \n            \n                \n                    \nconstructor(popoverController: PopoverController, router: Router)\n                    \n                \n                        \n                            \n                                Definiert in src/app/services/minimal-header.service.ts:13\n                            \n                        \n\n                \n                    \n                            do nothing in particular\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                to display a popover\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                to navigate to another page\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentPopover\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentPopover(ev: Event, data: any)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/services/minimal-header.service.ts:30\n                \n            \n\n\n            \n                \n                    open popover and navigate if path returned\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    ev\n                                    \n                                                Event\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        event to the popover, needed for controller\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        the content to be displayed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popoverController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopoverController\n\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/minimal-header.service.ts:20\n                            \n                        \n\n                \n                    \n                        to display a popover\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/services/minimal-header.service.ts:21\n                            \n                        \n\n                \n                    \n                        to navigate to another page\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\n\nimport { PopoverPage } from \"../pages/popover/popover.page\";\nimport { Router } from '@angular/router';\n\n/**\n * provides minimal functionality for a header\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MinimalHeaderService {\n\n\t/**\n\t * do nothing in particular\n\t * @param popoverController to display a popover\n\t * @param router            to navigate to another page\n\t */\n  constructor(public popoverController: PopoverController,\n\t\t\t\t\t\t\tpublic router: Router) { }\n\n\n\t/**\n\t * open popover and navigate if path returned\n\t * @param  ev\t\tevent to the popover, needed for controller\n\t * @param  data\tthe content to be displayed\n\t * @return Promise\n\t */\n\tasync presentPopover(ev: Event, data: any): Promise {\n\t\tconst popover = await this.popoverController.create({\n\t\t\t\tcomponent: PopoverPage,\n\t\t\t\tevent: ev,\n\t\t\t\ttranslucent: true,\n\t\t\t\tcomponentProps: {\"data\": data}\n\t\t\t});\n\n\t\t// async operation, fired before modal closes\n\t\tpopover.onWillDismiss().then((res) => {\n\n\t\t\t// retrieve filterVals and store them, e.g. for next modal\n\t\t\tlet path = res[\"data\"][\"path\"];\n\n\t\t\tthis.router.navigateByUrl(path);\n\t\t});\n\n\t\treturn await popover.present();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"interfaces/Monster.html":{"url":"interfaces/Monster.html","title":"interface - Monster","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Monster\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/interfaces/monster.ts\n        \n\n            \n                Beschreibung\n            \n            \n                interface for a monster\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aehnlicheFormen\n                                \n                                \n                                        attacken\n                                \n                                \n                                        beschreibung\n                                \n                                \n                                        gegenteilmonster\n                                \n                                \n                                        gewicht\n                                \n                                \n                                        groesse\n                                \n                                \n                                        habitat\n                                \n                                \n                                        hp\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                        rang\n                                \n                                \n                                        schadensverhinderung\n                                \n                                \n                                        typen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aehnlicheFormen\n                                    \n                                \n                                \n                                    \n                                        aehnlicheFormen:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    similar forms between which the monster can switch at will\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attacken\n                                    \n                                \n                                \n                                    \n                                        attacken:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    list of all ids of attacken of the monster\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beschreibung\n                                    \n                                \n                                \n                                    \n                                        beschreibung:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    note on the monster\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gegenteilmonster\n                                    \n                                \n                                \n                                    \n                                        gegenteilmonster:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    list of all Gegenteilmonster to a monster\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gewicht\n                                    \n                                \n                                \n                                    \n                                        gewicht:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body weight as decimal in kilograms\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groesse\n                                    \n                                \n                                \n                                    \n                                        groesse:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body height as decimal in meters\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        habitat\n                                    \n                                \n                                \n                                    \n                                        habitat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    typical location where the species would be met\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hp\n                                    \n                                \n                                \n                                    \n                                        hp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    (max) health\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id, same as the one in db, used for default sorting an fetching\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    name of the monster species\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rang\n                                    \n                                \n                                \n                                    \n                                        rang:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    rank, th higher the (absolute) value, the stronger\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schadensverhinderung\n                                    \n                                \n                                \n                                    \n                                        schadensverhinderung:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    resistence against attacks\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typen\n                                    \n                                \n                                \n                                    \n                                        typen:         Typ[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Typ[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    list of all typen\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Typ } from \"./typ\";\n\n/**\n * interface for a monster\n */\nexport interface Monster {\n\t/**\n\t * id, same as the one in db, used for default sorting an fetching\n\t */\n\tid: number,\n\t/**\n\t * name of the monster species\n\t */\n\tname: string,\n\t/**\n\t * rank, th higher the (absolute) value, the stronger\n\t */\n\trang: number,\n\t/**\n\t * body height as decimal in meters\n\t */\n\tgroesse: number,\n\t/**\n\t * body weight as decimal in kilograms\n\t */\n\tgewicht: number,\n\t/**\n\t * (max) health\n\t */\n\thp: number,\n\t/**\n\t * typical location where the species would be met\n\t */\n\thabitat: string,\n\t/**\n\t * resistence against attacks\n\t */\n\tschadensverhinderung: string,\n\t/**\n\t * note on the monster\n\t */\n\tbeschreibung: string,\n\t/**\n\t * list of all typen\n\t */\n\ttypen: Typ[],\n\t/**\n\t * list of all ids of attacken of the monster\n\t */\n\tattacken: number[],\n\t/**\n\t * list of all Gegenteilmonster to a monster\n\t */\n\tgegenteilmonster: number[],\n\t/**\n\t * similar forms between which the monster can switch at will\n\t */\n\taehnlicheFormen: number[]\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"components/PopoverPage.html":{"url":"components/PopoverPage.html","title":"component - PopoverPage","body":"\n                   \n\n\n\n\n\n  Components\n  PopoverPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/pages/popover/popover.page.ts\n\n\n    \n        Beschreibung\n    \n    \n        popover, content generic from caller\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-popover\n            \n\n            \n                styleUrls\n                ./popover.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./popover.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                header_popover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methoden\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor(popoverController: PopoverController, navParams: NavParams)\n                    \n                \n                        \n                            \n                                Definiert in src/app/pages/popover/popover.page.ts:25\n                            \n                        \n\n                \n                    \n                            init content of popover\n\n                            \n                                    Parameter :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Beschreibung\n                                            \n                                        \n                                        \n                                                \n                                                        popoverController\n                                                  \n                                                        \n                                                                    PopoverController\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                used to present popover\n\n                                                        \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            Nein\n                                                    \n                                                    \n                                                        \n                                                                used to get content\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methoden\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(path: string)\n                \n            \n\n\n            \n                \n                    Definiert in src/app/pages/popover/popover.page.ts:42\n                \n            \n\n\n            \n                \n                    close this popover and send chosen path back\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        chosen path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header_popover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Definiert in src/app/pages/popover/popover.page.ts:25\n                            \n                        \n\n                \n                    \n                        content of dropdown list\nformat:\n[\n     {\n         \"topic\": \"Typen\",\n         \"content\": [{\"title\": \"Liste\", \"icon\": \"list\", \"path\": \"/list-typen\"}, ...]\n     },\n     {...}\n];\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { PopoverController, NavParams } from '@ionic/angular';\n\n/**\n * popover, content generic from caller\n */\n@Component({\n  selector: 'app-popover',\n  templateUrl: './popover.page.html',\n  styleUrls: ['./popover.page.scss'],\n})\nexport class PopoverPage {\n\t/**\n\t * content of dropdown list\n\t * format:\n\t * [\n\t * \t{\n\t * \t\t\"topic\": \"Typen\",\n\t * \t\t\"content\": [{\"title\": \"Liste\", \"icon\": \"list\", \"path\": \"/list-typen\"}, ...]\n\t * \t},\n\t * \t{...}\n\t * ];\n\t */\n\theader_popover = [];\n\n\t/**\n\t * init content of popover\n\t * @param popoverController used to present popover\n\t * @param navParams         used to get content\n\t */\n  constructor(private popoverController: PopoverController,\n\t\t\t\t\t\t\tprivate navParams: NavParams,) {\n\t\tthis.header_popover = this.navParams.get('data');\n\t}\n\n\t/**\n\t * close this popover and send chosen path back\n\t * @param  path chosen path\n\t * @return void\n\t */\n\tclose(path: string): void {\n\t\tthis.popoverController.dismiss({\n\t\t\t'dismissed': true,\n\t\t\t'path': path\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t\n\n\t\t\t\n\t\t\t\t{{ section.topic }}\n\t\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t{{ content.title }}\n\t\t\t\t\n\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t{{ content.title }}\n\t\t\t\t\n\t\t\t\n\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./popover.page.scss\n                \n                .shrink {margin: 0px; padding: 0px}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t{{ section.topic }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ content.title }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ content.title }}\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PopoverPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/PopoverPageModule.html":{"url":"modules/PopoverPageModule.html","title":"module - PopoverPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PopoverPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopoverPageModule\n\n\n\ncluster_PopoverPageModule_declarations\n\n\n\n\nPopoverPage\n\nPopoverPage\n\n\n\nPopoverPageModule\n\nPopoverPageModule\n\nPopoverPageModule -->\n\nPopoverPage->PopoverPageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/pages/popover/popover.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PopoverPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PopoverPage } from './popover.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PopoverPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PopoverPage]\n})\nexport class PopoverPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Datei\n\n\n    src/app/pages/tabs/tabs.page.ts\n\n\n    \n        Beschreibung\n    \n    \n        entry point for tabs navigation\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                ./tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Konstruktor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definiert in src/app/pages/tabs/tabs.page.ts:11\n                            \n                        \n\n                \n                    \n                            do nothing in particular\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * entry point for tabs navigation\n */\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.page.html',\n  styleUrls: ['./tabs.page.scss'],\n})\nexport class TabsPage {\n\n\t/**\n\t * do nothing in particular\n\t */\n  constructor() {}\n}\n\n    \n\n    \n        \n  \n    \n      \n      Monster\n    \n\n    \n      \n      Attacken\n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html Element\n            \n            \n                Component\n            \n            \n                Html Element mit directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Monster                    Attacken      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CalcTypPage', 'selector': 'app-calc-typ'},{'name': 'DetailAttackePage', 'selector': 'app-detail-attacke'},{'name': 'DetailMonsterPage', 'selector': 'app-detail-monster'},{'name': 'ListAttackenPage', 'selector': 'app-list-attacken'},{'name': 'ListMonsterPage', 'selector': 'app-list-monster'},{'name': 'ListTypenPage', 'selector': 'app-list-typen'},{'name': 'PopoverPage', 'selector': 'app-popover'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Datei\n        \n        \n            src/app/pages/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n\t\tchildren: [\n\t\t\t{ path: \"\", redirectTo: \"list-monster\"},\n\t  \t{ path: 'list-monster', loadChildren: '../list-monster/list-monster.module#ListMonsterPageModule' },\n\t  \t{ path: 'list-attacken', loadChildren: '../list-attacken/list-attacken.module#ListAttackenPageModule' },\n\t\t]\n  },\n\t{\n\t\tpath: \"\", redirectTo: \"tabs\"\n\t}\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"interfaces/Typ.html":{"url":"interfaces/Typ.html","title":"interface - Typ","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Typ\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Datei\n        \n        \n            src/app/interfaces/typ.ts\n        \n\n            \n                Beschreibung\n            \n            \n                interface representing a type. Used in monsters and Attacken.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        typ\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    icon string to represent a uniform icon throughout the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    id, same as the one in db, used for default sorting an fetching\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typ\n                                    \n                                \n                                \n                                    \n                                        typ:         TypEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypEnum\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    link to a typ enum\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Typ {\n\t/**\n\t * id, same as the one in db, used for default sorting an fetching\n\t */\n\tid: number,\n\t/**\n\t * link to a typ enum\n\t */\n\ttyp: TypEnum,\n\t/**\n\t * icon string to represent a uniform icon throughout the app\n\t */\n\ticon: string\n}\n\nexport enum TypEnum {\n\tnormal,\n\tpflanze,\n\twasser,\n\tfeuer,\n\teis,\n\tgift,\n\tfinsternis,\n\tgeist,\n\tmetall,\n\tchemie,\n\tparasit,\n\tunsichtbar,\n\tflug,\n\tschwebe,\n\telektro,\n\tboden,\n\tgestein,\n\tinsekt,\n\tlaser,\n\tmagie,\n\tpsycho\n}\n\n/**\n * mapping from typ name to the actual typ\n * format: {string: Typ}\n */\nexport let StrToTyp = {\n\t\"Normal\": {id: 0, icon: \"heart-empty\", typ: TypEnum.normal},\n\t\"Pflanze\": {id: 0, icon: \"leaf\", typ: TypEnum.pflanze},\n\t\"Wasser\": {id: 0, icon: \"water\", typ: TypEnum.wasser},\n\t\"Feuer\": {id: 0, icon: \"flame\", typ: TypEnum.feuer},\n\t\"Eis\": {id: 0, icon: \"snow\", typ: TypEnum.eis},\n\t\"Gift\": {id: 0, icon: \"heart-dislike\", typ: TypEnum.gift},\n\t\"Finsternis\": {id: 0, icon: \"moon\", typ: TypEnum.finsternis},\n\t\"Geist\": {id: 0, icon: \"logo-snapchat\", typ: TypEnum.geist},\n\t\"Metall\": {id: 0, icon: \"settings\", typ: TypEnum.metall},\n\t\"Chemie\": {id: 0, icon: \"nuclear\", typ: TypEnum.chemie},\n\t\"Parasit\": {id: 0, icon: \"pie\", typ: TypEnum.parasit},\n\t\"Unsichtbar\": {id: 0, icon: \"speedometer\", typ: TypEnum.unsichtbar},\n\t\"Flug\": {id: 0, icon: \"jet\", typ: TypEnum.flug},\n\t\"Schwebe\": {id: 0, icon: \"code-working\", typ: TypEnum.schwebe},\n\t\"Elektro\": {id: 0, icon: \"flash\", typ: TypEnum.elektro},\n\t\"Boden\": {id: 0, icon: \"globe\", typ: TypEnum.boden},\n\t\"Gestein\": {id: 0, icon: \"hammer\", typ: TypEnum.gestein},\n\t\"Insekt\": {id: 0, icon: \"bug\", typ: TypEnum.insekt},\n\t\"Laser\": {id: 0, icon: \"git-commit\", typ: TypEnum.laser},\n\t\"Magie\": {id: 0, icon: \"color-wand\", typ: TypEnum.magie},\n\t\"Psycho\": {id: 0, icon: \"eye\", typ: TypEnum.psycho}\n}\n\n/**\n * function that reverse-maps compared with dictionary StrToTyp\n * (indices have to be similar to interface Typ AND dict StrToTyp)\n * @param  typInstance\tTyp to which the name should be returned\n * @return              name of the Typ\n */\nexport function string_of_enum(typInstance: Typ): string {\n  return Object.keys(StrToTyp)[typInstance.typ];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Dokumentation Abdeckung\n\n\n\n    \n\n\n\n    \n        \n            Datei\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/header_popover_content.module.ts\n            \n            variable\n            header_popover\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/header_popover_content.module.ts\n            \n            variable\n            header_popover_not_calc\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/header_popover_content.module.ts\n            \n            variable\n            header_popover_not_list\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/attacke.ts\n            \n            interface\n            Attacke\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/interfaces/image.ts\n            \n            interface\n            Image\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/interfaces/monster.ts\n            \n            interface\n            Monster\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/interfaces/typ.ts\n            \n            interface\n            Typ\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/typ.ts\n            \n            function\n            string_of_enum\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/interfaces/typ.ts\n            \n            variable\n            StrToTyp\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pages/calc-typ/calc-typ.page.ts\n            \n            component\n            CalcTypPage\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/pages/detail-attacke/detail-attacke.page.ts\n            \n            component\n            DetailAttackePage\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/pages/detail-monster/detail-monster.page.ts\n            \n            component\n            DetailMonsterPage\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/pages/list-attacken/list-attacken.page.ts\n            \n            component\n            ListAttackenPage\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/pages/list-monster/list-monster.page.ts\n            \n            component\n            ListMonsterPage\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/app/pages/list-typen/list-typen.page.ts\n            \n            component\n            ListTypenPage\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/pages/popover/popover.page.ts\n            \n            component\n            PopoverPage\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/pages/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/db-attacken.service.ts\n            \n            injectable\n            DbAttackenService\n            \n                100 %\n                (24/24)\n            \n        \n        \n            \n                \n                src/app/services/db-image.service.ts\n            \n            injectable\n            DbImageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/db-monster.service.ts\n            \n            injectable\n            DbMonsterService\n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                src/app/services/db-typen.service.ts\n            \n            injectable\n            DbTypenService\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/app/services/full-header.service.ts\n            \n            injectable\n            FullHeaderService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/minimal-header.service.ts\n            \n            injectable\n            MinimalHeaderService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Abhängigkeiten\n    \n    \n        \n            @angular/common : ~8.1.2\n        \n            @angular/compiler : ~8.1.2\n        \n            @angular/core : ~8.1.2\n        \n            @angular/forms : ~8.1.2\n        \n            @angular/platform-browser : ~8.1.2\n        \n            @angular/platform-browser-dynamic : ~8.1.2\n        \n            @angular/router : ~8.1.2\n        \n            @ionic-native/core : ^5.0.0\n        \n            @ionic-native/file : ^5.20.0\n        \n            @ionic-native/ionic-webview : ^5.20.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/sqlite : ^5.19.1\n        \n            @ionic-native/sqlite-db-copy : ^5.20.0\n        \n            @ionic-native/status-bar : ^5.0.0\n        \n            @ionic/angular : ^4.7.1\n        \n            cordova-android : ^8.1.0\n        \n            cordova-plugin-dbcopy : ^2.1.2\n        \n            cordova-plugin-file : ^6.0.2\n        \n            cordova-sqlite-storage : ^3.3.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            utf-8-validate : ^5.0.2\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Verschiedenes\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MessageType   (src/.../message.service.ts)\n                        \n                        \n                            TypEnum   (src/.../typ.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/message.service.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageType\n                    \n                \n                    \n                        \n                            to resolve from message type to color of toast\n\n                        \n                    \n                        \n                            \n                                 success\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 alert\n                            \n                        \n                        \n                            \n                                Value : warning\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : danger\n                            \n                        \n            \n        \n\n    src/app/interfaces/typ.ts\n    \n        \n            \n                \n                    \n                        \n                        TypEnum\n                    \n                \n                        \n                            \n                                 normal\n                            \n                        \n                        \n                            \n                                 pflanze\n                            \n                        \n                        \n                            \n                                 wasser\n                            \n                        \n                        \n                            \n                                 feuer\n                            \n                        \n                        \n                            \n                                 eis\n                            \n                        \n                        \n                            \n                                 gift\n                            \n                        \n                        \n                            \n                                 finsternis\n                            \n                        \n                        \n                            \n                                 geist\n                            \n                        \n                        \n                            \n                                 metall\n                            \n                        \n                        \n                            \n                                 chemie\n                            \n                        \n                        \n                            \n                                 parasit\n                            \n                        \n                        \n                            \n                                 unsichtbar\n                            \n                        \n                        \n                            \n                                 flug\n                            \n                        \n                        \n                            \n                                 schwebe\n                            \n                        \n                        \n                            \n                                 elektro\n                            \n                        \n                        \n                            \n                                 boden\n                            \n                        \n                        \n                            \n                                 gestein\n                            \n                        \n                        \n                            \n                                 insekt\n                            \n                        \n                        \n                            \n                                 laser\n                            \n                        \n                        \n                            \n                                 magie\n                            \n                        \n                        \n                            \n                                 psycho\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Verschiedenes\n  Funktionen\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            string_of_enum   (src/.../typ.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/interfaces/typ.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            string_of_enum\n                        \n                        \n                    \n                \n            \n            \n                \nstring_of_enum(typInstance)\n                \n            \n\n\n\n\n            \n                \n                    function that reverse-maps compared with dictionary StrToTyp\n(indices have to be similar to interface Typ AND dict StrToTyp)\n\n\n                    \n                        Parameter :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Beschreibung\n                                \n                            \n                            \n                                \n                                    typInstance\n\n                                    \n                                        Nein\n                                    \n\n\n                                    \n                                        Typ to which the name should be returned\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        name of the Typ\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nsome notes\ninstalled plugins\n\ndb-copy (Docs) - cpoy prepopulated db from file into app structure.\nSQLite (Docs) - interact with db (→ REST functionality)\nFile (Docs) - find images for displaying them\nWebView (Docs) - adapt path to find and disply images\n\nsources\n\nApp icon from Felix\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 GorenPnP\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    Kein Graph verfügbar.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalcTypPageModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailAttackePageModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailMonsterPageModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListAttackenPageModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListMonsterPageModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListTypenPageModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopoverPageModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Dein Browser unterstützt kein SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Übersicht\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CalcTypPageModule\n\n\n\ncluster_CalcTypPageModule_declarations\n\n\n\ncluster_DetailAttackePageModule\n\n\n\ncluster_DetailAttackePageModule_declarations\n\n\n\ncluster_DetailMonsterPageModule\n\n\n\ncluster_DetailMonsterPageModule_declarations\n\n\n\ncluster_ListAttackenPageModule\n\n\n\ncluster_ListAttackenPageModule_declarations\n\n\n\ncluster_ListMonsterPageModule\n\n\n\ncluster_ListMonsterPageModule_declarations\n\n\n\ncluster_ListTypenPageModule\n\n\n\ncluster_ListTypenPageModule_declarations\n\n\n\ncluster_PopoverPageModule\n\n\n\ncluster_PopoverPageModule_declarations\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nPopoverPageModule\n\nPopoverPageModule\n\nAppModule -->\n\nPopoverPageModule->AppModule\n\n\n\n\n\nCalcTypPage\n\nCalcTypPage\n\n\n\nCalcTypPageModule\n\nCalcTypPageModule\n\nCalcTypPageModule -->\n\nCalcTypPage->CalcTypPageModule\n\n\n\n\n\nDetailAttackePage\n\nDetailAttackePage\n\n\n\nDetailAttackePageModule\n\nDetailAttackePageModule\n\nDetailAttackePageModule -->\n\nDetailAttackePage->DetailAttackePageModule\n\n\n\n\n\nDetailMonsterPage\n\nDetailMonsterPage\n\n\n\nDetailMonsterPageModule\n\nDetailMonsterPageModule\n\nDetailMonsterPageModule -->\n\nDetailMonsterPage->DetailMonsterPageModule\n\n\n\n\n\nListAttackenPage\n\nListAttackenPage\n\n\n\nListAttackenPageModule\n\nListAttackenPageModule\n\nListAttackenPageModule -->\n\nListAttackenPage->ListAttackenPageModule\n\n\n\n\n\nListMonsterPage\n\nListMonsterPage\n\n\n\nListMonsterPageModule\n\nListMonsterPageModule\n\nListMonsterPageModule -->\n\nListMonsterPage->ListMonsterPageModule\n\n\n\n\n\nListTypenPage\n\nListTypenPage\n\n\n\nListTypenPageModule\n\nListTypenPageModule\n\nListTypenPageModule -->\n\nListTypenPage->ListTypenPageModule\n\n\n\n\n\nPopoverPage\n\nPopoverPage\n\nPopoverPageModule -->\n\nPopoverPage->PopoverPageModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Vergrößern\n        Zurücksetzen\n        Verkleinern\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Klasse\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Verschiedenes\n  Variablen\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            header_popover   (src/.../header_popover_content.module.ts)\n                        \n                        \n                            header_popover_not_calc   (src/.../header_popover_content.module.ts)\n                        \n                        \n                            header_popover_not_list   (src/.../header_popover_content.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            StrToTyp   (src/.../typ.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        app is in prod\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        app is not in prod\n\n                    \n                \n\n            \n        \n\n    src/app/header_popover_content.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            header_popover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      {\n          \"topic\": \"Typen\",\n          \"content\": [\n              {\"title\": \"Liste\", \"icon\": \"list\", \"path\": \"/list-typen\"},\n              {\"title\": \"Rechner\", \"icon\": \"calculator\", \"path\": \"/calc-typ\"}\n          ]\n      }\n  ]\n                        \n                    \n\n                \n                    \n                        content for popover in header with links to all type pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header_popover_not_calc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      {\n          \"topic\": \"Typen\",\n          \"content\": [\n              {\"title\": \"Liste\", \"icon\": \"list\", \"path\": \"/list-typen\"}\n          ]\n      }\n  ]\n                        \n                    \n\n                \n                    \n                        content for popover in header with links to type calc page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header_popover_not_list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      {\n          \"topic\": \"Typen\",\n          \"content\": [\n              {\"title\": \"Rechner\", \"icon\": \"calculator\", \"path\": \"/calc-typ\"}\n          ]\n      }\n  ]\n                        \n                    \n\n                \n                    \n                        content for popover in header with links to list type page\n\n                    \n                \n\n            \n        \n\n    src/app/interfaces/typ.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StrToTyp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t\"Normal\": {id: 0, icon: \"heart-empty\", typ: TypEnum.normal},\n\t\"Pflanze\": {id: 0, icon: \"leaf\", typ: TypEnum.pflanze},\n\t\"Wasser\": {id: 0, icon: \"water\", typ: TypEnum.wasser},\n\t\"Feuer\": {id: 0, icon: \"flame\", typ: TypEnum.feuer},\n\t\"Eis\": {id: 0, icon: \"snow\", typ: TypEnum.eis},\n\t\"Gift\": {id: 0, icon: \"heart-dislike\", typ: TypEnum.gift},\n\t\"Finsternis\": {id: 0, icon: \"moon\", typ: TypEnum.finsternis},\n\t\"Geist\": {id: 0, icon: \"logo-snapchat\", typ: TypEnum.geist},\n\t\"Metall\": {id: 0, icon: \"settings\", typ: TypEnum.metall},\n\t\"Chemie\": {id: 0, icon: \"nuclear\", typ: TypEnum.chemie},\n\t\"Parasit\": {id: 0, icon: \"pie\", typ: TypEnum.parasit},\n\t\"Unsichtbar\": {id: 0, icon: \"speedometer\", typ: TypEnum.unsichtbar},\n\t\"Flug\": {id: 0, icon: \"jet\", typ: TypEnum.flug},\n\t\"Schwebe\": {id: 0, icon: \"code-working\", typ: TypEnum.schwebe},\n\t\"Elektro\": {id: 0, icon: \"flash\", typ: TypEnum.elektro},\n\t\"Boden\": {id: 0, icon: \"globe\", typ: TypEnum.boden},\n\t\"Gestein\": {id: 0, icon: \"hammer\", typ: TypEnum.gestein},\n\t\"Insekt\": {id: 0, icon: \"bug\", typ: TypEnum.insekt},\n\t\"Laser\": {id: 0, icon: \"git-commit\", typ: TypEnum.laser},\n\t\"Magie\": {id: 0, icon: \"color-wand\", typ: TypEnum.magie},\n\t\"Psycho\": {id: 0, icon: \"eye\", typ: TypEnum.psycho}\n}\n                        \n                    \n\n                \n                    \n                        mapping from typ name to the actual typ\nformat: {string: Typ}\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        Kein passendes Ergebnis \"\"\n    \n\n"}}
}
